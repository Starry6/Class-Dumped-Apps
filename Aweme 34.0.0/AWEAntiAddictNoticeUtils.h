@interface AWEAntiAddictNoticeUtils : NSObject
+ (id)currentServerDate;
+ (double)currentServerTimeStamp;
+ (id)dateOfHour:date:;
+ (id)lastDays:ofDate:;
+ (id)dateOfHour:minute:second:date:;
+ (BOOL)isDate:betweenStartDate:endDate:;
+ (BOOL)isCurTime:betweenStartInterval:toEndInterval:toTime:;
+ (id)dateOfHour:minute:date:;
+ (id)nextDateOfDate:;
+ (id)storageKeyWithCurrentIdAndKey:;
+ (id)descriptionOfRemindToRest:;
+ (BOOL)isCurTimeBetween5And22;
+ (id)defaultDayThreshold;
+ (BOOL)isTime:betweenBegin:andEnd:;
+ (BOOL)isCurrentUserAgeStageInSet:;
+ (double)blockToTimeOfTomorrow;
+ (BOOL)checkValidWithTimeRange:;
+ (id)dateIntervalOfTimeRange:atDate:;
+ (id)nextDateOfDate:hour:;
+ (id)dateIntervalOfWeekFCModel:atDate:;
+ (id)midnightToastFlagWithTimeRange:interval:atDate:;
+ (long long)reviseRemindToSleepTime:withDuration:;
+ (long long)getDurationOfInterval:;
+ (id)currentId;
+ (id)previousDateOfDate:hour:;
+ (id)previousDateOfDate:;
+ (id)nextDateOfDate:hour:minute:;
+ (id)storageKeyWithId:key:;
+ (id)currentDateOfHour:;
+ (BOOL)checkValidWithBeginTime:endTime:;
+ (long long)getEndHourOfInterval:;
+ (long long)getEndMinuteOfInterval:;
+ (id)currentDateOfHour:minute:;
+ (BOOL)isTime:inInterval:;
+ (BOOL)isDate:betweenBeginDate:endDate:;
+ (long long)localeWeekdayOfDate:;
+ (id)dateOfDiffDays:hour:minute:date:;
+ (id)nextDateOfHour:;
+ (double)nextSleepRemindTriggerTimeWithInterval:now:;
+ (id)nextDateOfHour:minute:;
+ (void)dispatch_sync_on_main_queue_safe:;
+ (double)fatigueForDuration:;
+ (id)previousDateOfHour:;
+ (long long)dayIntervalToTodayWithTimestamp:;
+ (BOOL)shouldUseRestDayThreshold;
+ (BOOL)isDateInRangeOfToday:;
+ (BOOL)isDate:inRangeOfDate:;
+ (BOOL)isDate:inRangeOfSleepInterval:;
+ (BOOL)isTimeInIntervalNow:;
+ (BOOL)isTimeBetween5And22:;
+ (BOOL)isPreciseTime:betweenBegin:andEnd:;
+ (id)dateIntervalOfTimeRange:untilDate:;
+ (unsigned long long)currentTimeType;
+ (double)countDownTimeOfTomorrow;
+ (double)nextSleepRemindTriggerTimeWithInterval:;
+ (id)onTimeVideoExpireDateWithEndTime:now:;
+ (void)safeToast:;
+ (BOOL)currentTimeInStartTime:endTime:;
+ (id)currentDate;
+ (double)currentTimeStamp;
@end
