@interface AWEIMNotificationListDataController : AWEListDataController
@property (nonatomic) q topGroup;
@property (nonatomic) q count;
@property (nonatomic) q maxTime;
@property (nonatomic) q minTime;
@property (nonatomic) BOOL showActivityOverdueToast;
@property (nonatomic) AWENotificationModelNew latestFansNotice;
@property (nonatomic) NSMutableArray commentPolymericNoticeIDArray;
@property (nonatomic) NSMutableSet fansNoticeUIDs;
@property (nonatomic) q danmakuRequestOffset;
@property (nonatomic) BOOL hasMore;
@property (nonatomic) double width;
@property (nonatomic) q lastReadTime;
@property (nonatomic) q unreadCount;
@property (nonatomic) NSString vcdToastText;
@property (nonatomic) AWEIMNotificationnNoticeSettingsModel noticeSettings;
@property (nonatomic) q noticeGroup;
@property (nonatomic) Q noticeGroupType;
@property (nonatomic) BOOL isForPreload;
@property (nonatomic) BOOL hasFinishedInitRefesh;
@property (nonatomic) NSString noticeTabName;
@property (nonatomic) NSString noticeID;
@property (nonatomic) NSString delNoticeToast;
@property (nonatomic) NSArray noticeSubCategories;
@property (nonatomic) BOOL isSubDataController;
@property (nonatomic) BOOL isInAggregationNoticePage;
@property (nonatomic) BOOL hasPullRetry;
@property (nonatomic) NSString topNoticeIDs;
- (void)loadMoreWithCompletion:;
- (void)initFetchWithCompletion:;
- (long long)noticeGroup;
- (void)setNoticeGroup:;
- (void)setNoticeID:;
- (id)noticeID;
- (id)delNoticeToast;
- (id)vcdToastText;
- (id)getExpectedSizeInfo;
- (long long)lastReadTime;
- (void)setLastReadTime:;
- (void)setVcdToastText:;
- (void)setDelNoticeToast:;
- (void)checkCacheNoticeExpire;
- (void)refreshCacheNoticeWithCompletion:;
- (id)initWithNoticeGroupType:topGroup:count:maxTime:minTime:;
- (BOOL)isSubDataController;
- (id)noticeSubCategories;
- (void)setNoticeSubCategories:;
- (BOOL)hasPullRetry;
- (unsigned long long)noticeGroupType;
- (BOOL)hasFinishedInitRefesh;
- (void)removeCacheIfNeededWithNoticeID:;
- (id)noticeTabName;
- (id)initWithNoticeGroup:topGroup:count:maxTime:minTime:;
- (void)getFansNoticeCacheWithCompletion:;
- (void)updateFansNoticeCache:;
- (BOOL)isFansNoticeCacheExpired;
- (id)topNoticeIDs;
- (void)setTopNoticeIDs:;
- (void)setIsInAggregationNoticePage:;
- (id)initWithNoticeGroup:topGroup:count:maxTime:minTime:showActivityOverdueToast:;
- (id)initWithNoticeGroupType:topGroup:count:maxTime:minTime:showActivityOverdueToast:;
- (long long)__getCurrentNoticeGroup;
- (void)taskManagerRefreshWithCompletion:;
- (long long)__obtainUnreadCount;
- (id)_getURLString;
- (id)_getParamsForLoadMore:;
- (id)filterNoticeModelList:;
- (void)_handlerOwnPostedCommentRequestWithCompletion:;
- (void)handlerOwnPostedDanmakuRequestWithCompletion:;
- (void)__assignUnreadCount;
- (void)p_trackRequestNoticeListWithGroup:;
- (void)setCommentPolymericNoticeIDArray:;
- (void)p_trackNoticeListResponseWithGroup:error:;
- (void)setIsUnreadToNotiModel:;
- (BOOL)isForPreload;
- (void)__executeClean;
- (unsigned long long)__getSubTask;
- (void)setHasFinishedInitRefesh:;
- (void)__addNoticeSLOTrackWithNoticeType:isEmpty:error:;
- (id)noticeSettings;
- (void)setNoticeSettings:;
- (void)setNoticeTabName:;
- (id)filteredNoticesWithModel:;
- (void)processCommentNotice:completion:refresh:;
- (void)processAtNotice:completion:refresh:;
- (void)processFansPushNotice:completion:;
- (void)processCommentAndAtNotice:completion:refresh:;
- (void)processFansNotice:completion:refresh:needUpdateUnreadCount:;
- (void)p_addEmptyListMonitorWithResponse:group:error:;
- (void)__dataSourceBackupProcess:error:completion:;
- (void)__dataPullRetryIfNeed:error:completion:;
- (void)setDanmakuRequestOffset:;
- (void)_loadMoreOwnPostedCommentWithCompletion:;
- (void)loadMoreOwnPostedDanmakuWithCompletion:;
- (long long)danmakuRequestOffset;
- (long long)topGroup;
- (id)latestFansNotice;
- (void)refreshUnreadFansNoticeCountWithResponse:;
- (void)setLatestFansNotice:;
- (id)filterNoticeArrayRemoveDuplicateFansNoticeUIDs:isRefresh:;
- (id)noticeArrayRemoveDuplicateItem:;
- (id)fansNoticeUIDs;
- (id)commentPolymericNoticeIDArray;
- (void)updateFansNoticeStatusCache:;
- (void)_setReadTimeToNotiModel:;
- (BOOL)isInAggregationNoticePage;
- (void)setHasPullRetry:;
- (void)pullRetryWithModel:completion:;
- (void)__updateCacheWithRemovedNoticeID:oldCache:;
- (id)__removedNoticeWithNoticeID:oldCache:;
- (void)deleteFansNoticeCache;
- (void)setNoticeGroupType:;
- (void)setIsForPreload:;
- (void)setIsSubDataController:;
- (void)setTopGroup:;
- (BOOL)showActivityOverdueToast;
- (void)setShowActivityOverdueToast:;
- (void)setFansNoticeUIDs:;
- (long long)unreadCount;
- (id)init;
- (void)setMaxTime:;
- (void)setCount:;
- (void)setMinTime:;
- (void)setUnreadCount:;
- (long long)maxTime;
- (void)setWidth:;
- (void)setHasMore:;
- (long long)minTime;
- (long long)count;
- (BOOL)hasMore;
- (double)width;
- (void).cxx_destruct;
- (void)refreshWithCompletion:;
+ (id)getNewInteractCellStyleContentAttStrWithTimeStr:withTime:withSupplement:;
+ (id)getNewInteractCellStyleTimeAttStrWithStr:;
+ (id)muteImage;
+ (id)getNewInteractCellStyleContentAttStrWithTimeStr:withTime:;
+ (void)layoutColorRingView:avatarContainerView:mutiAvatars:avatarView:typeIcon:;
+ (unsigned long long)computeRowCountForAssemblyContent:withWidth:isNoticeDisable:;
+ (id)computeSizeForAssemblyContent:withWidth:;
+ (double)avatarTop;
+ (double)typeIconTop;
+ (double)typeIconLeft;
+ (BOOL)shouldShowColorRingWithRingStatus:;
+ (void)attachAssemblyContent:withMuteImage:;
+ (id)getNewInteractCellStyleContentAttStrWithStr:;
+ (id)contentLabelFont;
+ (void)setupMutiAvatars:inView:completion:;
+ (double)contentWidthWithContainerW:model:;
+ (double)cellHeightByAddContentHeight:hasFromUserView:;
+ (void)preCaculateLayoutForAt:width:;
+ (id)vsVideoCommentDescWithType:;
+ (id)commentDescWithTypeForNewStyle:;
+ (id)commentDescForOwnPostedCommentWithTypeForNewStyle:;
+ (id)getNewInteractCellStyleCommentContentFontColor;
+ (id)getNewInteractCellStyleCommentContentFont;
+ (id)getNewInteractCellStyleDescAttStrWithStr:;
+ (id)getNewInteractCellStyleCommentContentAttStrWithModel:;
+ (id)getNewInteractCellStylePlaceholderGifTag;
+ (id)atDescWithTypeForNewStyle:;
+ (id)p_setupAvatar:;
+ (void)preCaculateLayoutForComment:width:;
+ (void)preCalculateLayoutForForward:width:;
+ (double)nameWidthForUserName:width:model:;
+ (double)avatarWidth;
@end
