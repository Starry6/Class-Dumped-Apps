@interface AWESearchGeneralSearchWaterfallPlayRule : NSObject
@property (nonatomic) BOOL isActive;
@property (nonatomic) {CGRect={CGPoint=dd}{CGSize=dd}} containerActiveRect;
@property (nonatomic) UIView<AWESearchAutoPlayCardProtocol> playingDoubleColumnCard;
@property (nonatomic) NSArray playQueue;
@property (nonatomic) NSTimer timer;
@property (nonatomic) UIView<AWESearchAutoPlayCardProtocol> lastFinishPlayDoubleColumnCard;
@property (nonatomic) BOOL disableDoubleColumnCard;
@property (nonatomic) double speedLimit;
@property (nonatomic) double activeTop;
@property (nonatomic) double activeBottom;
@property (nonatomic) double activeRatio;
@property (nonatomic) double inactiveRatio;
@property (nonatomic) double balance;
@property (nonatomic) double playTimeInterval;
@property (nonatomic) BOOL isSearchResultMuted;
@property (nonatomic) double shouldNotActiveHeight;
@property (nonatomic) BOOL shouldFilterStaticCard;
@property (nonatomic) double singleColumnCardActiveRatio;
@property (nonatomic) UIView<AWESearchAutoPlayCardProtocol> wantToActiveCard;
@property (nonatomic) UIView<AWESearchAutoPlayCardProtocol> detailFeedEntranceCard;
@property (nonatomic) BOOL reclacInNextGap;
@property (nonatomic) AWESearchAutoPlayHandler handler;
@property (nonatomic) Q hash;
@property (nonatomic) # superclass;
@property (nonatomic) NSString description;
@property (nonatomic) NSString debugDescription;
- (double)shouldNotActiveHeight;
- (double)activeRatio;
- (void)setShouldNotActiveHeight:;
- (void)setActiveRatio:;
- (void)setShouldFilterStaticCard:;
- (BOOL)shouldFilterStaticCard;
- (void)beginTimer;
- (void)setActiveTop:;
- (void)setActiveBottom:;
- (void)setInactiveRatio:;
- (void)setReclacInNextGap:;
- (id)playingDoubleColumnCard;
- (BOOL)p_isCard1:equalToCard2:;
- (id)wantToActiveCard;
- (id)calculateActiveRectWithContainer:;
- (void)setContainerActiveRect:;
- (id)containerActiveRect;
- (void)resetDoubleColumnStatus;
- (id)findTargetViewInQueue:;
- (id)playQueue;
- (void)setPlayingDoubleColumnCard:;
- (void)currentCardPlayEnded;
- (void)setLastFinishPlayDoubleColumnCard:;
- (BOOL)reclacInNextGap;
- (long long)p_cardIndexInPlayQueue:;
- (void)setPlayQueue:;
- (BOOL)p_playQueueContainsCard:;
- (void)setWantToActiveCard:;
- (id)lastFinishPlayDoubleColumnCard;
- (id)getAutoPlayViewFromViews:inContainer:contentOffset:directionPoint:speedPoint:;
- (void)recalcInNextGap;
- (double)calculateRelativeCenterY:;
- (void)forceActiveCard:;
- (id)detailFeedEntranceCard;
- (void)setDetailFeedEntranceCard:;
- (void)setPlayTimeInterval:;
- (double)playTimeInterval;
- (double)activeTop;
- (double)activeBottom;
- (double)inactiveRatio;
- (void)setDisableDoubleColumnCard:;
- (BOOL)disableDoubleColumnCard;
- (void)setIsSearchResultMuted:;
- (void)setSingleColumnCardActiveRatio:;
- (double)singleColumnCardActiveRatio;
- (BOOL)isSearchResultMuted;
- (void)becomeActive;
- (void)setHandler:;
- (void)setTimer:;
- (id)init;
- (void)setIsActive:;
- (void)dealloc;
- (id)timer;
- (void)endTimer;
- (void)addObserver;
- (double)speedLimit;
- (void)setBalance:;
- (id)handler;
- (void)setSpeedLimit:;
- (void).cxx_destruct;
- (double)balance;
- (void)reset;
- (void)resignActive;
- (BOOL)isActive;
- (unsigned long long)ruleType;
@end
