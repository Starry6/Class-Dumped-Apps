@interface AWEOpenPlatformAuthTrackerManager : NSObject
@property (nonatomic) AWEOpenPlatformAuthFlowManager flowManager;
@property (nonatomic) BOOL trackOpenAuthShowDurationOnce;
@property (nonatomic) q showOrder;
@property (nonatomic) BOOL trackAuthNotesShowOncs;
@property (nonatomic) NSString authID;
@property (nonatomic) NSDictionary trackInfo;
@property (nonatomic) NSString clientKey;
@property (nonatomic) NSString launchMethod;
@property (nonatomic) double authStartTimeStamp;
@property (nonatomic) double authInAppStartTimeStamp;
@property (nonatomic) NSString sdkVersion;
@property (nonatomic) NSString authSource;
@property (nonatomic) BOOL isNewEntrance;
@property (nonatomic) double authPageShowTimeStamp;
@property (nonatomic) NSMutableArray authInfoShowArray;
@property (nonatomic) NSMutableArray authInfoSelectArray;
@property (nonatomic) Q scopeType;
@property (nonatomic) Q pageType;
@property (nonatomic) BOOL skipAll;
@property (nonatomic) BOOL hasEnterBack;
- (id)enterMethod;
- (id)commonParams;
- (void)cleanAllCache;
- (void)setAuthSource:;
- (void)setShowOrder:;
- (long long)showOrder;
- (void)trackerEditClick:;
- (void)setAuthInfoShowArray:;
- (void)trackAuthResultWithErrorCode:withErrorMsg:;
- (id)authInfoSelectArray;
- (void)setSkipAll:;
- (void)trackAuthRiskPushShow;
- (void)trackAuthRiskPushClick:;
- (void)trackAuthRiskTrigger;
- (void)trackAuthNotesShow:;
- (void)trackAuthButtomModelShowWithModelType:authInfoShow:authInfoSelect:scopeType:;
- (BOOL)hasEnterBack;
- (void)trackClickOrEnterBackAtPosition:hasEnterBack:;
- (void)trackAuthButtomModelClickWithModelType:clickType:authInfoShow:authInfoSelect:scopeType:;
- (void)trackShowQuestionMark:scopeType:authItem:;
- (void)updateAuthPageShowTimeStampFromNow;
- (void)trackAuthNotify:authInfoShow:authInfoSelect:scopeType:;
- (void)trackAuthSubmit:authInfoShow:authInfoSelect:scopeType:;
- (void)trackAuthRefuse:refuseType:authInfoShow:authInfoSelect:scopeType:;
- (void)setHasEnterBack:;
- (void)trackClickQuestionMark:scopeType:authItem:;
- (void)initWithClientKey:launchMethod:authStartStamp:pageType:;
- (void)trackAwemeAuthTrigger;
- (void)cleanAuthInfoCache;
- (void)updateAuthInAppStartTimeStampFromNow;
- (void)setLaunchMethod:;
- (void)updateAuthStartTimeStampFromNow;
- (void)cleanBaseCache;
- (void)setAuthInAppStartTimeStamp:;
- (void)setAuthPageShowTimeStamp:;
- (id)getAuthSource;
- (double)getOpenSDKLaunchDuration;
- (BOOL)isNewEntrance;
- (BOOL)trackOpenAuthShowDurationOnce;
- (void)setTrackOpenAuthShowDurationOnce:;
- (double)getOpenSDKAuthDuration;
- (double)getOpenSDKAuthInAppDuration;
- (id)authInfoShowArray;
- (BOOL)skipAll;
- (BOOL)trackAuthNotesShowOncs;
- (void)setTrackAuthNotesShowOncs:;
- (double)authPageShowTimeStamp;
- (void)setIsNewEntrance:;
- (void)setAuthInfoSelectArray:;
- (double)authInAppStartTimeStamp;
- (id)authSource;
- (void)trackAwemeAuthLynxLoadError:withLynxAuthID:;
- (void)trackCommentHyperLinkAtHalf:isShow:;
- (void)trackInfoIconWithEvent:;
- (void)setSdkVersion:;
- (id)clientKey;
- (void)setPageType:;
- (void)setClientKey:;
- (void).cxx_destruct;
- (unsigned long long)scopeType;
- (unsigned long long)pageType;
- (id)sdkVersion;
- (void)setFlowManager:;
- (id)flowManager;
- (void)setScopeType:;
- (void)setTrackInfo:;
- (id)trackInfo;
- (double)authStartTimeStamp;
- (void)setAuthStartTimeStamp:;
- (id)authID;
- (void)setAuthID:;
- (id)launchMethod;
- (void)initWithFlowManager:;
+ (id)shareManager;
+ (void)trackNetworkResultWithRspDict:error:costMS:extraDict:;
@end
