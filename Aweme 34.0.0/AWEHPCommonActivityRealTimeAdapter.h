@interface AWEHPCommonActivityRealTimeAdapter : NSObject
@property (nonatomic) NSString entryID;
@property (nonatomic) <AWEHPChannelControllerConfigProtocol> config;
@property (nonatomic) UIViewController<AWEFeedTabItemViewControllerProtocol><AWEUGActivityXTabControllerProtocol> contentVC;
@property (nonatomic) AWEHPCommonActivityBatchInfo willShowActivityInfo;
@property (nonatomic) AWEHPCommonActivityBatchInfo showingActivityInfo;
@property (nonatomic) AWEHPRealTimeActivityManager activityManager;
@property (nonatomic) MMKV mmkv;
@property (nonatomic) BOOL inPageShow;
@property (nonatomic) Q hash;
@property (nonatomic) # superclass;
@property (nonatomic) NSString description;
@property (nonatomic) NSString debugDescription;
@property (nonatomic) <AWEHPCommonActivityContainer> activityContainer;
- (void)setMmkv:;
- (id)mmkv;
- (long long)deadlineTime;
- (id)contentVC;
- (void)setContentVC:;
- (id)activityContainer;
- (void)setActivityContainer:;
- (id)topBarItemConfig;
- (id)badgeArray;
- (id)bubbleArray;
- (unsigned long long)topTabTheme;
- (unsigned long long)bottomTabTheme;
- (id)initWithActivityContainer:channelConfig:;
- (BOOL)activityAllowReloadWithConfig:;
- (void)activityWillReloadWithConfig:;
- (void)activityDidReload;
- (BOOL)activityIsAvailableWithError:;
- (id)getActivityViewController;
- (void)destroyActivityViewController;
- (void)activityDidLoadWithType:;
- (void)channelSendTrackerEvent:params:;
- (void)setInPageShow:;
- (void)activityDidEnter;
- (void)activityDidLeave;
- (BOOL)inPageShow;
- (id)p_generateDefaultActivityDataWithJsonDictionary:error:;
- (id)p_getEntryIDWithConfig:;
- (void)p_reloadActivityWithReason:;
- (id)showingActivityInfo;
- (void)saveCurrentActivityWithResourceID:cycleID:;
- (id)p_generateBackupActivityInfoForReloadWithTrackParams:;
- (id)p_generateDynamicActivityInfoForReloadWithTrackParams:isLastDynamicActivity:;
- (id)willShowActivityInfo;
- (id)p_generateBackupActivityInfoForUpdateWithTrackParams:oldActivityInfo:;
- (id)p_generateDynamicActivityInfoForUpdateWithTrackParams:oldActivityInfo:;
- (void)p_trySwitchActivity;
- (void)setShowingActivityInfo:;
- (id)p_generateDefaultActivityDataWithJsonString:error:;
- (BOOL)readLastActivityWithResourceID:cycleID:;
- (id)p_generateActivityChannelInfoWithJsonString:error:;
- (void)p_tryUpdateActivityWithReason:;
- (void)stateChangedWithActivityManager:;
- (void)dataChangedWithActivityManager:;
- (void)setWillShowActivityInfo:;
- (void)setConfig:;
- (id)activityManager;
- (id)config;
- (void)reload;
- (id)entryID;
- (void)setActivityManager:;
- (void).cxx_destruct;
- (id)activityID;
- (void)setEntryID:;
@end
