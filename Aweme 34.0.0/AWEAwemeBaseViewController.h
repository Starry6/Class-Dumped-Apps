@interface AWEAwemeBaseViewController : UIViewController
@property (nonatomic) UIPinchGestureRecognizer flexPinchGesture;
@property (nonatomic) {CGRect={CGPoint=dd}{CGSize=dd}} flexPinch_targetViewStartFrame;
@property (nonatomic) Q hash;
@property (nonatomic) # superclass;
@property (nonatomic) NSString description;
@property (nonatomic) NSString debugDescription;
@property (nonatomic) Q hash;
@property (nonatomic) # superclass;
@property (nonatomic) NSString description;
@property (nonatomic) NSString debugDescription;
@property (nonatomic) UIViewController<AWEAwemeBizPlayVideoProtocol><AWEAwemePlayVideoTrackProtocol> videoController;
@property (nonatomic) <AWEAwemePlayInteractionPlayDelegate><AWEAwemePlayInteractionPanelDelegate><AWEAwemePlayInteractionCommerceDelegate><AWEAwemePlayInteractionUpdateDelegate><AWEAwemePlayInteractionUIDisplayDelegate><AWEPlayInteractionViewControllerProtocol> interactionController;
@property (nonatomic) double lastClickTimestamp;
@property (nonatomic) UITapGestureRecognizer tapGesture;
@property (nonatomic) BOOL isValid;
@property (nonatomic) BOOL isHeadphonesOn;
@property (nonatomic) BOOL willPerformOnVideoPlayerViewSingleClicked;
@property (nonatomic) {CGRect={CGPoint=dd}{CGSize=dd}} beforeEnterLandscapeFrame;
@property (nonatomic) BOOL shouldPreventPlay;
@property (nonatomic) {CGRect={CGPoint=dd}{CGSize=dd}} beforeEnterPicoVRPageFrame;
@property (nonatomic) {CGRect={CGPoint=dd}{CGSize=dd}} beforeEnterVideoDescriptionMaskLayerFrame;
@property (nonatomic) <AWEPlayInteractionNotificationControllerProtocol> interactionNotificationController;
@property (nonatomic) <AFDPinchZoomTransitionHelperProtocol> pinchZoomTransitionHelper;
@property (nonatomic) AWEKnowledgeStateSceneToken sceneToken;
@property (nonatomic) BOOL isViewAppear;
@property (nonatomic) BOOL isAppResignActive;
@property (nonatomic) <AWEAwemeBaseVideoContextProtocol> videoContext;
@property (nonatomic) UIView fakeLandscapeTopView;
@property (nonatomic) UIView fakeLandscapeBottomView;
@property (nonatomic) BOOL isFakeLandscape;
@property (nonatomic) {CGRect={CGPoint=dd}{CGSize=dd}} lastFrame;
@property (nonatomic) BOOL isRotating;
@property (nonatomic) BOOL enableUpdateMixWatchedRecordCache;
@property (nonatomic) BOOL shouldUpdateMixWatchedRecord;
@property (nonatomic) AWEVideoPlayerStallInfoCalculator stallInfoCalculator;
@property (nonatomic) DUXBottomNotification stallBottomNotification;
@property (nonatomic) BOOL canShowStallReminder;
@property (nonatomic) NSArray mediaPlayerDecisions;
@property (nonatomic) <AWEAwemeBaseVCMediaPlayerProtocol> mediaPlayer;
@property (nonatomic) BOOL enterPureModeShouldUseAnimation;
@property (nonatomic) <AWEFeedTableViewCellControllerPlayerDelegate> playerDelegate;
@property (nonatomic) <AWEStoryContainerViewControllerDelegate> storyDelegate;
@property (nonatomic) <AFDFeedPreloadControllerProtocol> preloadController;
@property (nonatomic) q mediaType;
@property (nonatomic) ^{EngineAudioWrapper=^?^?^?^?^v} audioWrapper;
@property (nonatomic) ^{EngineVideoWrapper=^?^?^v} videoWrapper;
@property (nonatomic) AWEAwemeModel model;
@property (nonatomic) BOOL innerInteractionDelay;
@property (nonatomic) NSString referString;
@property (nonatomic) BOOL forbidResetVideo;
@property (nonatomic) NSDictionary context;
@property (nonatomic) NSDictionary logExtraDict;
@property (nonatomic) NSString enterFrom;
@property (nonatomic) NSString ruleId;
@property (nonatomic) NSString cityInfoString;
@property (nonatomic) NSString adEventName;
@property (nonatomic) q type;
@property (nonatomic) BOOL isEditing;
@property (nonatomic) BOOL needsSetPureMode;
@property (nonatomic) # interactionControllerFactory;
@property (nonatomic) <AWEPlayInteractionViewControllerNewProtocol> interactionNewController;
@property (nonatomic) BOOL isRefreshingWhenPinching;
@property (nonatomic) BOOL shouldUpdateProgressDirectly;
@property (nonatomic) Q enterPinchMethod;
@property (nonatomic) BOOL enterPureModeWithNonInteractTransiton;
@property (nonatomic) BOOL updatePlayerOutPinch;
@property (nonatomic) UIViewController<AFDPureModePageViewControllerProtocol> pureModePageVC;
@property (nonatomic) double defaultSeekToTime;
@property (nonatomic) BOOL shouldShowCoverWhenSeekToTime;
@property (nonatomic) BOOL isFromRecommendBigCard;
@property (nonatomic) NSString reactId;
@property (nonatomic) NSString previousPage;
@property (nonatomic) @? playerWillStartNextLoopBlock;
@property (nonatomic) BOOL hideMusicInfoView;
@property (nonatomic) BOOL showGoodsElementView;
@property (nonatomic) BOOL showGoodsCardAnchorElementView;
@property (nonatomic) @? shouldRespondSingleClickBlock;
@property (nonatomic) @? isMaskViewShowing;
@property (nonatomic) AWEVideoPlayTimeRecorder playTimeRecoder;
@property (nonatomic) AWEAwemePageContext feedPageContext;
@property (nonatomic) AWEAwemeModel registerElementModel;
@property (nonatomic) {CGPoint=dd} singleClickedPoint;
@property (nonatomic) AWEFeedInteractionModeManager interactionModeManager;
@property (nonatomic) AWEKnowledgeStateCardToken cardToken;
@property (nonatomic) UIView containerView;
@property (nonatomic) UIView blanketView;
@property (nonatomic) UIView pinchTargetView;
@property (nonatomic) <AFDPinchUpdateAnimatorProtocol> updateAnimatorForC2;
@property (nonatomic) BOOL isEndingTransition;
@property (nonatomic) BOOL shouldEnterC2Feed;
@property (nonatomic) {CGPoint=dd} startPosition;
@property (nonatomic) {CGRect={CGPoint=dd}{CGSize=dd}} beginFrame;
@property (nonatomic) double lastBufferingPercent;
@property (nonatomic) BOOL bufferingPreparedNotified;
@property (nonatomic) BOOL modernBufferingPreparedNotified;
@property (nonatomic) BOOL bufferPreloadStarted;
@property (nonatomic) Q hash;
@property (nonatomic) # superclass;
@property (nonatomic) NSString description;
@property (nonatomic) NSString debugDescription;
- (id)currentAwemeModel;
- (void)performCommentAction;
- (void)performLikeAction;
- (void)showSharePanel;
- (id)reactId;
- (void)setReactId:;
- (id)cityInfoString;
- (void)setCityInfoString:;
- (void)setOriginEntryEnterMethod:;
- (void)setLogExtraDict:;
- (void)setPureMode:;
- (id)referString;
- (void)setEnterFrom:;
- (void)pauseWithAnimation;
- (void)playWithAnimation;
- (void)holdStop;
- (void)setPlayerAudioDevice:;
- (void)player:playbackFailedWithError:;
- (void)player:didChangeStallState:;
- (void)player:downloadProgressWithKey:videoId:cacheSize:mediaSize:;
- (void)player:didChangePlaybackRate:;
- (void)duxGrid_viewDidChangeBreakPointFrom:toBreakPoint:;
- (void)setReferString:;
- (id)logExtraDict;
- (BOOL)isPlayingFirstStory;
- (void)rotateConfigAfterQuitFromLandscapeFeed:;
- (void)prepareForDisplayWithoutCoverImage;
- (void)pauseIfNotStop;
- (double)defaultSeekToTime;
- (void)resetPauseIcon;
- (void)setShouldPreventPlay:;
- (BOOL)shouldPreventPlay;
- (void)pauseWithAnimationUsingCustomPauseIcon:;
- (id)getPlayModeWithAutoPlayMode;
- (BOOL)isScrolledAutomatically;
- (void)setIsScrolledAutomatically:;
- (BOOL)pauseBySingleClick;
- (void)setPauseBySingleClick:;
- (void)hideInteractionViews:;
- (id)audioWrapper;
- (void)setAudioWrapper:;
- (id)videoWrapper;
- (void)setVideoWrapper:;
- (void)setClickEnter:;
- (void)setSlideType:;
- (void)setDetailSlide:;
- (id)enterFrom;
- (id)adEventName;
- (void)setAdEventName:;
- (void)setDefaultSeekToTime:;
- (id)playerDelegate;
- (void)setPlayerDelegate:;
- (id)storyDelegate;
- (void)setStoryDelegate:;
- (id)preloadController;
- (void)setPreloadController:;
- (void)setPureModeBlock:;
- (void)updateCurrentAwemeModel:;
- (void)richContainerDidCreateProgressView:;
- (id)progressConfig;
- (BOOL)canPlayerPlayAfterTouch;
- (void)containerWillBeginDragging:;
- (void)containerDidEndDragging:;
- (BOOL)isVideoRelatedPanelShowing;
- (void)willSetPureModeBlock:;
- (BOOL)shouldUseTTPlayerForXiGuaVideo;
- (void)setShouldShowCoverWhenSeekToTime:;
- (void)player:updatePlayTime:canPlayTime:totalTime:;
- (void)player:updatePlayProgressWithTime:totalDuration:;
- (void)player:updateTotalPlayDuration:;
- (void)playerWillStartNextLoop:;
- (void)player:bufferingUpdate:;
- (void)playerDidStopped:;
- (void)player:didChangePlaybackToAction:;
- (void)videoResourceDidRecallInPlayer:;
- (void)player:didStartPlayPreventedWithReason:;
- (void)player:maskInfoCallBackWithSVG:pts:;
- (BOOL)shouldPreventPlayerPlay:;
- (BOOL)shouldPlayerHideTopGradientView:;
- (void)bufferStart;
- (void)bufferEnd;
- (BOOL)shouldReponseToVideoRecallInPlayer:;
- (BOOL)shouldAddPlayerPeriodicTimerForPlayer:;
- (void)showLoadingAnimation;
- (void)stopLoadingAniamtion;
- (double)interactionInfoAreaHeight;
- (id)interactionViewForPlayer:;
- (id)interactionNewController;
- (unsigned long long)pinchTransition_destinatedType;
- (BOOL)transition_shouldStartPinchInteractiveTranstionForZoomType:gestureRecognizer:;
- (id)transition_destinatedViewControllerForZoomType:gestureRecognizer:;
- (BOOL)transition_shouldStartPinchInteractiveTranstionToVC:;
- (id)feedPageContext;
- (void)setFeedPageContext:;
- (void)inner_pinchTransitionDidFinish;
- (id)pinchTransitionBackgroundColor;
- (void)imageConfigMsg:;
- (void)configBeforEnterToLandscapeFeed;
- (void)configAfterQuitFromLandscapeFeed:;
- (id)pinchTargetView;
- (BOOL)isAITextPanelShowing;
- (void)transition_didEndPinchTransitionWithContext:;
- (void)configBeforEnterToPicoVRPage;
- (void)configAfterQuitFromPicoVRPage:;
- (id)aAWEPadModuleAdapter;
- (void)transition_didStartPinchTransitionWithContext:;
- (Class)pinchGestureRecognizerClass;
- (id)speedManager;
- (BOOL)isHeadphonesOn;
- (BOOL)isFromRecommendBigCard;
- (void)setIsFromRecommendBigCard:;
- (void)setShowFollowStatus:;
- (void)setIsHotSearchStatus:;
- (void)setIsBottomHotBarShowing:;
- (void)setControlOffset:;
- (void)setRelatedPanelWillAppearBlock:;
- (void)setRelatedPanelDidDismissBlock:;
- (BOOL)needsSetPureMode;
- (void)setNeedsSetPureMode:;
- (id)registerElementModel;
- (void)setRegisterElementModel:;
- (BOOL)alertIfNotValidForAction:;
- (BOOL)adOperationGuideShowing;
- (BOOL)fullDetaillHalfScreenViewShowed;
- (void)setPureMode:animated:;
- (void)setPureMode:animateDuration:;
- (void)resetPromptCardIfNeeded;
- (void)resetAdOperationWebViewIfNeeded;
- (BOOL)isCommentListShowing;
- (BOOL)isViewerListShowing;
- (BOOL)isLikeUserListShowing;
- (void)showVoteDetailPanel:;
- (BOOL)shouldShowShoppingEntrance;
- (void)showGoodsPanelWithProuctId:;
- (void)showGoodsPanelWithProuctId:shoudEnterGoodsDetail:;
- (void)showGoodsPanelWithProuctId:shoudEnterGoodsDetail:autoPop:;
- (void)showPOIGoodsPanelWithGoodsID:;
- (void)showCommentPanelWithParams:;
- (BOOL)isShrinkingVideo;
- (id)pureModeExitTransitionDelegate;
- (BOOL)pinch_enableLongPressPanel;
- (id)pureModeLongPressPanelDelegate;
- (BOOL)pinch_enableLandscape;
- (id)pureModeLandscapeDelegate;
- (BOOL)pinch_enableDanmaku;
- (BOOL)pureModeAlbumPinchKeepScale;
- (id)pinch_pinchZoomEventParamsWithModel:isEnterPinchView:isPinchTransition:;
- (id)pinch_pinchViewDurationEventParamsWithModel:;
- (void)pinch_updateOutContainerWithPureModeVC:;
- (void)pinch_startExitAnimationWithPinchTargetView:updateAnimator:;
- (id)pinch_getAlbumContainer;
- (void)inner_pinchTransitionWillBegin;
- (void)inner_pinchTransitionDidCancel;
- (void)outer_pinchTransitionWillBegin;
- (void)outer_pinchTransitionDidFinish;
- (void)outer_pinchTransitionDidCancel;
- (BOOL)pinch_shouldHandleDismissSelfWhenDislike;
- (id)pinchTransitionDelegate;
- (id)relatedViewControllerForPrefetch;
- (id)pureModePageVC;
- (void)setPureModePageVC:;
- (id)sceneToken;
- (void)configBeforEnterToVideoDescriptionMaskLayer;
- (void)configAfterQuitFromVideoDescriptionMaskLayer:;
- (id)isMaskViewShowing;
- (void)seekPlayTime:;
- (BOOL)shouldUseAnimation;
- (BOOL)shouldShowCoverWhenSeekToTime;
- (void)setSingleClickedPoint:;
- (void)videoController:downloadProgressWithKey:videoId:cacheSize:mediaSize:;
- (void)videoControllerWillStartNextLoop:;
- (void)videoController:bufferingUpdate:;
- (void)afterDidEndDisplaying;
- (void)resetRefreshFlag;
- (long long)currentVideoScaleMode;
- (void)setInteractionControllerFactory:;
- (Class)interactionControllerFactory;
- (id)pinch_getTargetViewForContainerView:;
- (void)pinch_updateToContainerWithPureModeVC:;
- (id)pinch_getBackgroundViewForContainerView:;
- (void)pinch_recoverFromContainerWithPureModeVC:;
- (void)pinch_readdTargetView;
- (void)pinch_forceExitPureModeIfNeeded:;
- (BOOL)isViewAppear;
- (id)singleClickedPoint;
- (id)videoContext;
- (void)enterPureMode;
- (void)setIsViewAppear:;
- (id)cardToken;
- (void)setCardToken:;
- (id)interactionModeManager;
- (void)handleAppWillResignActiveNotification:;
- (void)_onVideoPlayerViewSingleClicked:;
- (double)lastClickTimestamp;
- (void)_onVideoPlayerViewDoubleClicked:;
- (void)setLastClickTimestamp:;
- (void)_onVideoPlayerViewClicked:;
- (void)stateOfHeadphones:;
- (void)preparePinchZoomTransition;
- (id)pinchZoomTransitionHelper;
- (void)resetPinchZoomTransition;
- (void)setPinchZoomTransitionHelper:;
- (void)setContainerIsPinchingIfNeeded:;
- (void)setContainerPlayEnableIfNeeded:;
- (BOOL)innerInteractionDelay;
- (void)setInnerInteractionDelay:;
- (BOOL)forbidResetVideo;
- (void)setForbidResetVideo:;
- (void)addInteract;
- (void)setShouldPreventPlay:bizType:;
- (void)doActionIfNotValid;
- (void)doActionIfNotValidWithText:;
- (id)previewingViewControllerForView:atPoint:;
- (void)didCommitViewController:;
- (BOOL)isCurrentLandscape;
- (BOOL)shouldRespondSingleClick;
- (BOOL)shouldRespondDoubleClick;
- (void)setPlayerWillStartNextLoopBlock:;
- (void)setIsMaskViewShowing:;
- (void)initVideoController;
- (void)setUpVideoController:;
- (id)playTimeRecoder;
- (void)initInteractController;
- (BOOL)rootViewTapGestureRecognizer:shouldReceiveTouch:;
- (void)setHideMusicInfoView:;
- (void)setShowGoodsElementView:;
- (void)setShowGoodsCardAnchorElementView:;
- (BOOL)updatePlayerOutPinch;
- (BOOL)enableVideoVCResetLayout;
- (void)setPlayerViewFrame:clipsToBounds:;
- (void)setPlayTimeRecoder:;
- (void)onVideoPlayerSingleClick;
- (void)showLikePanel;
- (void)showCommentPanelWithInsertIDs:;
- (BOOL)isPaidMixScreenRecording;
- (id)createInteractionController;
- (void)replaceInteractionController:isNewStoryScene:;
- (void)setShouldRespondSingleClickBlock:;
- (void)showChapterPanel;
- (void)setPinchTargetView:;
- (void)handleAppDidBecomeActiveNotification:;
- (void)willManualSelectResolution:;
- (void)didShowBottomNotification;
- (id)shouldRespondSingleClickBlock;
- (void)setBlanketView:;
- (id)blanketView;
- (BOOL)isEndingTransition;
- (void)setIsEndingTransition:;
- (id)commerceDelegate;
- (BOOL)pinch_isLongPressPanelShowing;
- (void)pinch_showLongPressPanelWithContext:completion:;
- (id)pinch_landscapeTransitionProvider;
- (id)pinch_getLandScapeDelegate;
- (void)pinch_configBeforeEnterLandscapeWithCurrentModel:;
- (void)pinch_pureModeDidBeRemoved;
- (void)setSceneToken:;
- (void)setIsHeadphonesOn:;
- (BOOL)musicTrackAlertIfNotValid;
- (void)_silentUpdate;
- (unsigned long long)enterPinchMethod;
- (void)setEnterPinchMethod:;
- (void)p_hideInteractionElementIfNeeded;
- (void)requestReuseVideoPlayer:;
- (void)setIsRotating:;
- (void)updateLogExtraDict;
- (id)fakeLandscapeTopView;
- (id)fakeLandscapeBottomView;
- (void)setFakeLandscapeTopView:;
- (void)setFakeLandscapeBottomView:;
- (void)setCanShowStallReminder:;
- (id)stallInfoCalculator;
- (BOOL)canShowStallReminder;
- (void)setStallInfoCalculator:;
- (BOOL)bufferPreloadStarted;
- (void)setBufferPreloadStarted:;
- (void)setVideoContext:;
- (BOOL)shouldHandlePinchToDoubleColumn;
- (void)pushIntoPureMode:;
- (void)showCommentPanelWithInsertIDs:isForcedToShowInputView:;
- (void)showCommentPanelWithInsertIDs:isForcedToShowInputView:shouldShowDefaultText:;
- (void)setShouldUpdateProgressDirectly:;
- (BOOL)shouldUpdateProgressDirectly;
- (BOOL)flexPinch_enableFlexPinch;
- (void)handleFlexPinchGesture:;
- (void)setFlexPinchGesture:;
- (id)flexPinchGesture;
- (BOOL)shouldStartPinchToPureModePageForZoomType:gestureRecognizer:;
- (void)flexPinch_preparePinch;
- (void)flexPinch_prepareDoubleColumnChannel;
- (long long)flexPinch_getDisorderStyle;
- (void)flexPinch_gestureBegin:;
- (void)flexPinch_gestureChanged:;
- (void)flexPinch_gestureEnded:;
- (void)setFlexPinch_targetViewStartFrame:;
- (id)flexPinch_targetViewStartFrame;
- (void)flexPinch_prepareVideoSnapshot;
- (void)flexPinch_updatePlayer;
- (void)flexPinch_pinchEnded;
- (void)flexPinch_gotoDoubleColumnChannel;
- (BOOL)enableMediaRefactor;
- (BOOL)shouldEnterC2Feed;
- (void)flexPinch_addGestureIfNeeded;
- (BOOL)flexPinch_shouldGestureBegin:;
- (id)flexPinch_getPinchTargetViewForContainerView:;
- (id)flexPinch_getBackgroundViewForContainerView:;
- (id)flexPinch_getBackgroundColor;
- (id)flexPinch_getSkeletonViewForContainerView:;
- (id)flexPinch_getTipsViewForContainerView:;
- (id)flexPinch_getPureModeViewController;
- (id)flexPinch_getPinchViewTargetFrameWithDestinationType:;
- (double)flexPinch_getEnterDoubleColumnScaleThreshold;
- (BOOL)flexPinch_enableEnterDoubleColumnHaptic;
- (void)flexPinch_willEndPinchAnimationWithDestinationType:;
- (void)flexPinch_didEndPinchAnimationWithDestinationType:;
- (id)flexPinch_getPinchTargetVideoRealFrame;
- (double)lastBufferingPercent;
- (BOOL)bufferingPreparedNotified;
- (void)setBufferingPreparedNotified:;
- (void)setLastBufferingPercent:;
- (BOOL)modernBufferingPreparedNotified;
- (void)setModernBufferingPreparedNotified:;
- (void)checkNeedPercentPreloadWithVideoController:bufferingUpdate:;
- (void)checkNeedPercentPreloadWithPlayer:key:videoId:cacheSize:mediaSize:;
- (void)checkNeedBufferPreloadWithPlayer:videoDuration:key:videoId:cacheSize:mediaSize:;
- (void)pinch_trackShowLongPressPanelWithContext:;
- (BOOL)isRefreshingWhenPinching;
- (void)pinch_playFromBeginning:;
- (void)setUpdatePlayerOutPinch:;
- (BOOL)pinch_canShowProgressForAweme:;
- (void)configBeforEnterToLandscapeFeedWithShouldCheck:fromPinch:;
- (void)normalRecoverWhenBackFromPinch;
- (BOOL)enterPureModeWithNonInteractTransiton;
- (void)setShouldEnterC2Feed:;
- (void)setUpdateAnimatorForC2:;
- (id)updateAnimatorForC2;
- (void)awe_pinchToC2FeedStart:;
- (void)awe_pinchToC2FeedChanged:;
- (void)awe_pinchToC2FeedEnd:;
- (void)resetPinchToC2IfNeeded;
- (BOOL)isClickedPlayButtonToPlay;
- (void)onVideoPlayerSingleClickWithInteractionMode;
- (void)onVideoPlayerSingleClickByPause;
- (void)onVideoPlayerSingleClickInCommonSence;
- (void)onVideoPlayerSingleClickWithAdsAlbum;
- (void)addInteractController;
- (void)setInteractionModeManager:;
- (void)configVideoContext;
- (id)interactionNotificationController;
- (void)configFakeLandscapeMaskView;
- (void)checkAndReBuileRichAwemeContentIfNeeded;
- (BOOL)shouldExitInteractionModeWithTopVC:;
- (void)setIsAppResignActive:;
- (void)configInteractController:;
- (BOOL)hideMusicInfoView;
- (BOOL)showGoodsElementView;
- (BOOL)showGoodsCardAnchorElementView;
- (void)p_hideLeftInteractionIfNeeded;
- (void)p_hideRightInteractionIfNeeded;
- (void)p_hideBottomInteractionIfNeeded;
- (id)defaultMediaPlayer;
- (void)initRichContentWithFactory;
- (void)__checkPreloadVideoController;
- (void)setModel:forPreloadInteraction:;
- (BOOL)isRichContent;
- (void)adaptFakeLandscapeIfNeeded:;
- (void)__silentUpdateInnerMethod;
- (void)replaceInteractionController:;
- (void)silentUpdateForPreloadInteraction;
- (BOOL)enableAdapeFakeLandscape;
- (BOOL)isValidFakeLandscapeVideo:;
- (void)setIsFakeLandscape:;
- (BOOL)isFakeLandscape;
- (void)updatePlayerFrameForModel:;
- (void)hideFakeMaskView;
- (void)setBeforeEnterVideoDescriptionMaskLayerFrame:;
- (id)beforeEnterVideoDescriptionMaskLayerFrame;
- (void)setBeforeEnterLandscapeFrame:;
- (id)beforeEnterLandscapeFrame;
- (void)setBeforeEnterPicoVRPageFrame:;
- (BOOL)shouldRemoveConstraintAfterExitVRPage;
- (id)beforeEnterPicoVRPageFrame;
- (id)playerWillStartNextLoopBlock;
- (BOOL)enablePresentCampaignBigRedPacketWithCampaignID:;
- (void)updateMixWatchedRecordIfNeedWith:curTime:totalTime:;
- (void)setEnterPureModeWithNonInteractTransiton:;
- (void)setShouldUpdateMixWatchedRecord:;
- (id)stallBottomNotification;
- (void)addLogWithLevel:subModuleName:what:extra:;
- (void)setEnableUpdateMixWatchedRecordCache:;
- (BOOL)enableUpdateMixWatchedRecordCache;
- (void)setWillPerformOnVideoPlayerViewSingleClicked:;
- (BOOL)willPerformOnVideoPlayerViewSingleClicked;
- (void)videoPlayerSingleClick;
- (void)setupMediaPlayer:;
- (void)initRichContentIfNeededWithExperiment;
- (void)setStallBottomNotification:;
- (BOOL)getIsRefreshing;
- (void)enterPureModeSlides;
- (void)setEnterPureModeShouldUseAnimation:;
- (BOOL)businessEnablePinchViewMutiSource;
- (BOOL)isAwemeInFeed:;
- (void)setIsRefreshingWhenPinching:;
- (BOOL)enterPureModeShouldUseAnimation;
- (void)resetPureModeStatus;
- (BOOL)shouldUpdateMixWatchedRecord;
- (void)addLogWithLevel:subModuleName:linkIDs:eventType:what:who:extra:;
- (id)mediaPlayerDecisions;
- (id)mediaPlayerDecisionNames;
- (long long)mediaTypeForModel:;
- (id)mediaPlayerForModel:;
- (BOOL)adPromptModalShowing;
- (BOOL)__canShowBottomViewedView;
- (BOOL)shouldShowGeofencingVideo;
- (void)enterPureModeWithoutAnimation;
- (void)setInteractionNotificationController:;
- (BOOL)isAppResignActive;
- (void)setMediaPlayerDecisions:;
- (void)setModel:;
- (void)setMediaType:;
- (void)viewWillDisappear:;
- (id)init;
- (void)dealloc;
- (void)play;
- (void)setBeginFrame:;
- (void)setVolume:;
- (void)viewDidLayoutSubviews;
- (void)play:;
- (void)setInteractionController:;
- (void)pause:;
- (long long)mediaType;
- (void)viewDidLoad;
- (void)viewWillTransitionToSize:withTransitionCoordinator:;
- (id)containerView;
- (BOOL)gestureRecognizerShouldBegin:;
- (id)transitionContext;
- (BOOL)isRotating;
- (long long)type;
- (void)setIndexPath:;
- (void)viewDidDisappear:;
- (id)model;
- (void)setContainerView:;
- (void)setType:;
- (BOOL)isValid;
- (void)setContext:;
- (void)viewWillAppear:;
- (void)setIsValid:;
- (void).cxx_destruct;
- (BOOL)gestureRecognizer:shouldReceiveTouch:;
- (double)currentPlaybackTime;
- (void)viewDidAppear:;
- (void)reset;
- (id)initWithMediaType:;
- (id)context;
- (void)stop;
- (id)beginFrame;
- (void)pause;
- (BOOL)isEditing;
- (id)interactionController;
- (id)tapGesture;
- (BOOL)accessibilityScroll:;
- (id)previousPage;
- (void)setPreviousPage:;
- (void)setStartPosition:;
- (void)setTapGesture:;
- (id)startPosition;
- (void)handlePinchGesture:;
- (unsigned long long)playerType;
- (id)lastFrame;
- (void)setLastFrame:;
- (void)setMediaPlayer:;
- (id)videoController;
- (id)mediaPlayer;
- (void)setVideoController:;
- (void)pauseIfPlaying;
- (void)setIsEditing:;
- (void)willDisplay;
- (id)ruleId;
- (void)setRuleId:;
- (void)seekToTime:completion:;
- (void)pageDidAppear:;
- (void)pageWillDisappear:;
+ (Class)aAWEPadModuleAdapterClass;
@end
