@interface AWEIMSecurityRemindBaseManager : NSObject
@property (nonatomic) AWEIMSecurityToastConfigResponse toastConfigResponse;
@property (nonatomic) NSDictionary toastInfo;
@property (nonatomic) AWEIMMessageConversation conversation;
@property (nonatomic) NSString pageIdentifier;
@property (nonatomic) UIViewController viewController;
@property (nonatomic) BOOL requesting;
@property (nonatomic) <AWEIMSecurityRemindManagerDelegate> delegate;
@property (nonatomic) AWEIMSafeRemindView currentExamView;
@property (nonatomic) Q hash;
@property (nonatomic) # superclass;
@property (nonatomic) NSString description;
@property (nonatomic) NSString debugDescription;
- (BOOL)isRequesting;
- (id)toastInfo;
- (void)setToastInfo:;
- (void)setRequesting:;
- (void)requestConfigForConvseration:;
- (void)safeRemindView:didClickButtonWithModel:;
- (void)safeRemindViewDidDismiss:;
- (void)safeRemindViewDidShowInterrupted:;
- (void)safeRemindView:onNextExam:;
- (void)safeRemindViewDidClickCloseButton:;
- (void)p_requestConfigForConvseration:;
- (BOOL)shouldRequestConfigForConversation:;
- (id)paramsForRequestingConfigWithConversation:;
- (id)currentConfigForConversation:;
- (BOOL)p_showViewWithModel:toastInfo:;
- (void)requestConfigWithParams:onComplete:;
- (id)toastConfigResponse;
- (void)reportStatusWithParams:;
- (void)setToastConfigResponse:;
- (BOOL)showViewWithModel:;
- (void)p_finishCurrentToast;
- (void)setCurrentExamView:;
- (id)currentExamView;
- (void)setNextShowViewTimeInConversation;
- (void)p_reportSecurityRemindResultForConvseration:remindState:config:buttonModel:didClickCloseButton:;
- (void)p_reportSecurityRemindResultForConvseration:remindState:config:buttonModel:didClickCloseButton:finishToast:;
- (id)paramsForReportStatusWithConversation:remindState:config:buttonModel:didClickCloseButton:;
- (id)valueForReportWithConfig:ButtonModel:didClickCloseButton:;
- (id)p_nextToastConfigWithIndex:config:;
- (void)p_showNextToastConfig:buttonModel:;
- (void)closePopupWithToastConfig:buttonModel:didClickCloseButton:;
- (BOOL)p_showSecurityPopupView:needFrequencyControl:buttonModel:;
- (void)showNextPopupIfNeededWithToastConfig:buttonModel:nextIndex:extraActionBlock:;
- (id)p_executeButtonActions:;
- (void)didClickButtonWithToastConfig:buttonModel:;
- (void)didClickCloseButtonWithToastConfig:;
- (void)didClickSingleButtonWithToastConfig:nextExam:extraActionBlock:;
- (id)delegate;
- (id)viewController;
- (void).cxx_destruct;
- (void)setDelegate:;
- (void)setViewController:;
- (id)conversation;
- (void)setConversation:;
- (id)pageIdentifier;
- (void)setPageIdentifier:;
+ (id)paramModelByText:forModel:;
+ (id)attrbutedStringWithTitle:color:highlightColor:font:needCenter:config:conversation:lineSpacing:;
+ (id)titleWithConfig:conversation:;
+ (id)subTitleWithConfig:conversation:;
+ (void)__trackEventWithEventName:actionType:linkType:config:conversation:reportValue:;
+ (long long)__trackWindowType:;
+ (id)__linkTypeForModel:;
+ (void)trackEventActionType:linkType:config:conversation:;
+ (void)trackButtonActionWithConfig:conversation:reportValue:;
+ (BOOL)__checkValidScheme:;
+ (BOOL)p_isReportURL:;
+ (void)p_mergeStringWithMessages:toastString:;
+ (void)trackAudioWithConfig:conversation:longestAudioPlayPercentage:;
+ (id)eventName;
+ (id)executeActions:;
@end
