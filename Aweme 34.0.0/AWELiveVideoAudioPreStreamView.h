@interface AWELiveVideoAudioPreStreamView : NSObject
@property (nonatomic) <IESLivePlayerProtocol> player;
@property (nonatomic) IESLiveDI roomDI;
@property (nonatomic) UIImageView cover;
@property (nonatomic) UIView wrapper;
@property (nonatomic) AWEAwemeModel model;
@property (nonatomic) BOOL enableDelayClearPlayerView;
@property (nonatomic) BOOL currentRoomShouldDelayClear;
@property (nonatomic) IESLiveFeedAudioView audioView;
@property (nonatomic) NSNumber currentRoomID;
@property (nonatomic) BOOL isShowing;
@property (nonatomic) BOOL userNeedshowAudioView;
@property (nonatomic) BOOL userAudioSmallMode;
@property (nonatomic) BOOL shouldHidePreview;
@property (nonatomic) UIView bigPartyContainer;
@property (nonatomic) IESLiveBigPartyPreStreamController bigPartyController;
@property (nonatomic) IESLiveInteractPreStreamAdapterWrapper bigPartyPreStreamAdapter;
@property (nonatomic) q bigPartyContentModeEqual;
@property (nonatomic) q bigPartyContentModeNonOverlapping;
@property (nonatomic) IESLiveInteractiveSEIParser seiParser;
@property (nonatomic) BOOL isIntimateChatOn;
@property (nonatomic) BOOL isPKGoingOn;
@property (nonatomic) NSNumber gridsOffsetY;
@property (nonatomic) NSNumber gridsOffsetX;
@property (nonatomic) IESLiveKTVPreStreamController ktvController;
@property (nonatomic) <AWELivePaidStreamViewModelProtocol> paidLiveViewModel;
@property (nonatomic) HTSLiveStreamUrl_LiveCoreSDKData_PullData_Options_Quality beforePlayerQuality;
@property (nonatomic) HTSLiveStreamUrl_LiveCoreSDKData_PullData_Options_Quality playerQuality;
@property (nonatomic) AWELiveRevenuePreStreamController revenueShareController;
@property (nonatomic) UIView revenueViewContainer;
@property (nonatomic) double currentPKStreamRatio;
@property (nonatomic) {CGRect={CGPoint=dd}{CGSize=dd}} pkRatioFrame;
@property (nonatomic) {CGRect={CGPoint=dd}{CGSize=dd}} pkCropSize;
@property (nonatomic) {CGRect={CGPoint=dd}{CGSize=dd}} renderViewFrame;
@property (nonatomic) {CGRect={CGPoint=dd}{CGSize=dd}} revenueContainerFrame;
@property (nonatomic) <IESLiveRevenueInteractStreamService> streamService;
@property (nonatomic) BOOL isMultiLinkerGoingOn;
@property (nonatomic) {CGRect={CGPoint=dd}{CGSize=dd}} multilinkerCropSize;
@property (nonatomic) {CGRect={CGPoint=dd}{CGSize=dd}} multilinkerRatioFrame;
@property (nonatomic) BOOL enableLinkMicCrop;
@property (nonatomic) q liveSource;
@property (nonatomic) NSString defaultQuality;
@property (nonatomic) q qualityType;
@property (nonatomic) IESLivePlayerResolutionController resolutionController;
@property (nonatomic) IESLiveInteractDynamicContainerPreStreamImpl preStreamImpl;
@property (nonatomic) Q hash;
@property (nonatomic) # superclass;
@property (nonatomic) NSString description;
@property (nonatomic) NSString debugDescription;
@property (nonatomic) {CGSize=dd} mediaSize;
@property (nonatomic) NSArray multiLinkerGridRatioFrames;
@property (nonatomic) q preScaleType;
@property (nonatomic) Q preAlignMode;
@property (nonatomic) BOOL isNeedUpdateMultiLinkerLayoutParam;
@property (nonatomic) IESLivePlayerAudioLoudness sourceLoudness;
@property (nonatomic) double multiLinkerStreamOffset;
@property (nonatomic) q interactStartTime;
@property (nonatomic) @ linkerLayoutProvider;
@property (nonatomic) @? coverTransition;
@property (nonatomic) BOOL shouldCleanCoverImage;
@property (nonatomic) BOOL isAutoTransition;
@property (nonatomic) q scaleType;
@property (nonatomic) <IESLivePlayerControllerDelegate> delegate;
@property (nonatomic) BOOL muted;
@property (nonatomic) double volume;
@property (nonatomic) NSDictionary logExtraDict;
@property (nonatomic) Q playbackState;
@property (nonatomic) NSURL contentURL;
@property (nonatomic) NSString currentStreamData;
@property (nonatomic) <AWELivePaidLivePlayerDelegate> paidLiveDelegate;
- (void)stopAsync:;
- (void)setLogExtraDict:;
- (id)logExtraDict;
- (id)currentRoomID;
- (void)didSetAttachingDIContext;
- (id)defaultQuality;
- (long long)liveSource;
- (void)setLiveSource:;
- (id)cover;
- (void)setCover:;
- (id)anchorID;
- (void)onLoudness:soucePeak:targetLufs:isEnableExternalAETargetLufs:;
- (void)player:loadStateDidChange:;
- (void)player:playbackStateDidChange:;
- (id)currentStreamData;
- (BOOL)isAudioLive;
- (void)player:mediaSizeDidChange:;
- (void)player:didReceiveMetaInfo:processed:;
- (void)player:didReceiveError:;
- (void)playerFrozen:;
- (void)playerResume:;
- (void)playerDidCleared:;
- (void)setCurrentRoomID:;
- (void)reloadWithStreamData:;
- (BOOL)isValidRect:;
- (void)showCoverIfNeeded:;
- (void)setCoverImageWithURLArray:placeholder:completion:;
- (BOOL)isEqualWithStreamData:orStreamURL:;
- (void)reloadStreamData:orStreamURL:sdkParams:;
- (void)setPaidLiveDelegate:;
- (void)setAudioViewSmallMode:;
- (void)setNeedShowAudioView:;
- (void)setBigPartyContentModeWithEqual:nonOverlapping:;
- (void)trialTimeDidChange:;
- (void)viewStatusDidChange:hasShareTickets:;
- (BOOL)needMuteForFreeTrial;
- (id)customTrialView;
- (id)customTrialContainerView;
- (void)reloadURL:sdkParams:;
- (id)renderViewFrame;
- (void)setRenderViewFrame:;
- (id)audioView;
- (void)setAudioView:;
- (BOOL)isAudioChatLive;
- (void)updateBackSticker;
- (void)receiveChannelMessage:;
- (void)willEnterRoom;
- (void)loadCustomShareBusinessWithDelegate:;
- (id)initWithPlayer:liveSource:;
- (id)createWrapperView;
- (id)createCoverView;
- (void)layoutCoverImageView:playerView:wrapper:;
- (void)setShouldCleanCoverImage:;
- (void)setIsAutoTransition:;
- (void)setupcoverTransitionWithCover:playerView:;
- (void)setCoverTransition:;
- (BOOL)isAutoTransition;
- (void)doCoverTransition;
- (BOOL)shouldCleanCoverImage;
- (id)coverTransition;
- (id)paidLiveDelegate;
- (void)reloadWithStreamData:streamURL:;
- (void)reloadStreamData:orStreamURL:sdkParams:withQualityKey:;
- (void)setCoverImageWithURLArray:;
- (void)removeCoverTransition;
- (void)unloadPreViewBusiness;
- (void)readytoDropPlayerForReuse;
- (void)updatePlayerWithPlayer:;
- (id)roomDI;
- (id)bigPartyController;
- (void)setBigPartyController:;
- (id)multiLinkerGridRatioFrames;
- (BOOL)isNeedUpdateMultiLinkerLayoutParam;
- (void)setIsNeedUpdateMultiLinkerLayoutParam:;
- (void)setMultiLinkerStreamOffset:;
- (void)setMultiLinkerGridRatioFrames:;
- (long long)preScaleType;
- (void)setPreScaleType:;
- (unsigned long long)preAlignMode;
- (void)setPreAlignMode:;
- (double)multiLinkerStreamOffset;
- (long long)interactStartTime;
- (void)setInteractStartTime:;
- (void)setRoomDI:;
- (void)shouldOpenSecurity:;
- (void)shouldStopStream:;
- (void)setIsIntimateChatOn:;
- (BOOL)isIntimateChatOn;
- (id)linkerLayoutProvider;
- (id)bigPartyPreStreamAdapter;
- (id)ktvController;
- (id)playerQuality;
- (void)setPlayerQuality:;
- (void)setBeforePlayerQuality:;
- (id)beforePlayerQuality;
- (BOOL)isPKGoingOn;
- (id)pkCropSize;
- (BOOL)isMultiLinkerGoingOn;
- (id)multilinkerCropSize;
- (void)adjustVolumeEffectTargetLufs;
- (void)choosePlayerSpecifySceneForLOB;
- (void)updateSVCParam;
- (void)adjustWholeVolumeEffectParam;
- (void)changeVideoSharpenStateWithStrategy;
- (void)playerVolumeAdaptive;
- (void)setVideoSharpenLevel;
- (id)vrBgEventParams;
- (void)mediaSizeDidChange:;
- (void)dealWithLinkMicWithMetaInfo:;
- (void)removeFakeBizeView;
- (void)dealPKSEIWithMetaInfo:room:;
- (void)dealMultiLinkerSEIWithMetaInfo:room:;
- (id)seiParser;
- (void)setGridsOffsetY:;
- (void)setGridsOffsetX:;
- (id)gridsOffsetY;
- (void)resetMultiLinkerParams;
- (void)setupMultiLinkerPlayerParamIfNeeded;
- (void)setIsMultiLinkerGoingOn:;
- (void)setMultilinkerCropSize:;
- (void)setMultilinkerRatioFrame:;
- (id)multilinkerRatioFrame;
- (id)losePrecisionRectWith:;
- (void)checkPKPlayerPropState;
- (void)setIsPKGoingOn:;
- (double)caculateStreamRatioHeightWithRatio:;
- (void)setCurrentPKStreamRatio:;
- (void)setPkCropSize:;
- (double)currentPKStreamRatio;
- (void)setPkRatioFrame:;
- (id)pkRatioFrame;
- (BOOL)isFullScreenPreStreamView;
- (id)gridsOffsetX;
- (id)changeLandscapeMediaSize:;
- (void)bigPartyDidActivate;
- (void)bigPartyDidDeactivate;
- (void)bigPartyLayoutStyleStart:;
- (void)bigPartyLayoutStyleEnd:;
- (void)layoutPlayerIfNeed;
- (id)playerForBigParty;
- (id)seiReceiverForBigParty;
- (id)containerForBigParty;
- (id)playerContainerForBigParty;
- (id)mediaSizeForBigParty;
- (id)containerFrameForBigParty;
- (long long)bigPartyContentModeForEqual;
- (long long)bigPartyContentModeForNonOverlapping;
- (id)enterFromForBigParty;
- (id)playModeListForBigParty;
- (void)setSeiParser:;
- (void)setBigPartyPreStreamAdapter:;
- (void)setKtvController:;
- (void)asyncLoadResourceUsingBlock:;
- (void)setDefaultQuality:;
- (void)setUserNeedshowAudioView:;
- (void)setUserAudioSmallMode:;
- (void)setShouldHidePreview:;
- (void)setEnableDelayClearPlayerView:;
- (void)setCurrentRoomShouldDelayClear:;
- (void)setEnableLinkMicCrop:;
- (void)setBigPartyContentModeEqual:;
- (void)setBigPartyContentModeNonOverlapping:;
- (BOOL)delayClearPlayerViewABValue;
- (BOOL)currentRoomShouldDelayClear;
- (id)preStreamImpl;
- (id)paidLiveViewModel;
- (void)installPaidStream:;
- (id)p_feedAudioPreviewViewWithFrame:userModel:listModel:roomModel:smallModel:firstMetaInfo:;
- (double)wrapperInMainScreenRatio;
- (void)removeAudioView;
- (void)showAudioViewWithMetaInfo:;
- (BOOL)isEnableShowSearchPKElement;
- (BOOL)updateRevenueViewContainerFrame;
- (void)updateRenderFrameIfNeeded;
- (BOOL)enableLinkMicCrop;
- (BOOL)shouldHidePreview;
- (void)showAudioViewIfNeedWithMetaInfo:;
- (void)playerDidCleared;
- (void)playerWillStartPlayAtStage:;
- (BOOL)updateCurrentRoomShouldDelayClear;
- (void)reloadStreamData:orStreamURL:sdkParams:withQualityKey:usePrepareMode:;
- (void)realReloadWithStreamData:streamURL:sdkParams:usePrepareMode:;
- (void)preloadLiveBackGroundImage;
- (void)processVideoAudioEffect;
- (void)trackForQuality:type:;
- (id)getQualitySdkKey;
- (id)resolutionController;
- (id)getDisplayResolutionsWith:;
- (void)updatePlayerTrackInfo:displayResolutions:;
- (void)setupBigPartyController;
- (long long)changeContentMode:;
- (BOOL)enableDelayClearPlayerView;
- (id)revenueShareController;
- (void)playerDidClearedWhenStopOrClose;
- (id)bigPartyContainer;
- (long long)bigPartyContentModeEqual;
- (long long)bigPartyContentModeNonOverlapping;
- (id)revenueViewContainer;
- (void)addRevenueViewContainer;
- (void)setRevenueShareController:;
- (void)setRevenueContainerFrame:;
- (void)setRevenueViewContainer:;
- (id)revenueContainerFrame;
- (void)dealPCStreamMultilinkerCropSize:;
- (void)realReloadWithStreamData:streamURL:sdkParams:;
- (BOOL)userNeedshowAudioView;
- (BOOL)userAudioSmallMode;
- (void)setBigPartyContainer:;
- (void)setPaidLiveViewModel:;
- (void)setStreamService:;
- (void)setResolutionController:;
- (void)setPreStreamImpl:;
- (void)setShouldDelayClearPlayerView:;
- (void)preparePlayerWithStreamData:;
- (void)setModel:;
- (BOOL)muted;
- (double)volume;
- (id)roomID;
- (void)close;
- (BOOL)isShowing;
- (void)play;
- (id)delegate;
- (void)setVolume:;
- (id)initWithPlayer:;
- (void)setMuted:;
- (id)contentURL;
- (id)player;
- (id)model;
- (void)setPlayer:;
- (id)playerView;
- (unsigned long long)playbackState;
- (void).cxx_destruct;
- (void)reset;
- (void)setDelegate:;
- (void)stop;
- (void)pause;
- (id)wrapper;
- (long long)qualityType;
- (void)updateWithModel:;
- (id)mediaSize;
- (long long)scaleType;
- (void)setScaleType:;
- (void)setWrapper:;
- (id)streamService;
- (void)setIsShowing:;
- (void)setQualityType:;
@end
