@interface AWEPaidStream : NSObject
@property (nonatomic) Q state;
@property (nonatomic) <AWEPaidTrial> paidTrial;
@property (nonatomic) <AWEPaidAuth> paidAuth;
@property (nonatomic) <AWEPaidBlock> paidBlock;
@property (nonatomic) <AWEPaidSecurity> paidSecurity;
@property (nonatomic) <AWEPaidFree> paidFree;
@property (nonatomic) <AWEPaidStreamProvider> reusePaidStream;
@property (nonatomic) NSHashTable plugins;
@property (nonatomic) NSHashTable externalPlugins;
@property (nonatomic) AWEPaidAuthConfig authConfig;
@property (nonatomic) NSDictionary paidPaymentManagers;
@property (nonatomic) NSArray acquiredAuthItemsBeforeExitPaymentPage;
@property (nonatomic) double finishShowTime;
@property (nonatomic) double finishEndTime;
@property (nonatomic) double promiseShowTime;
@property (nonatomic) double promiseEndTime;
@property (nonatomic) double reportTimeInterval;
@property (nonatomic) double lastReportTimeInterval;
@property (nonatomic) AWEPaidStreamConfig config;
@property (nonatomic) Q hash;
@property (nonatomic) # superclass;
@property (nonatomic) NSString description;
@property (nonatomic) NSString debugDescription;
@property (nonatomic) <AWEPaidStreamProvider> reusingPaidStream;
@property (nonatomic) <AWEPaidStreamSecurityDelegate> securityDelegate;
@property (nonatomic) <AWEPaidStreamUIDelegate> UIDelegate;
@property (nonatomic) <AWEPaidStreamDelegate> delegate;
- (id)commonParameters;
- (id)authConfig;
- (void)setAuthConfig:;
- (id)registeredPlugins;
- (void)preloadIfNeeded;
- (id)paidStreamTrial;
- (id)paidStreamAuth;
- (id)paidStreamSecurity;
- (id)paidStreamPaymentManagers;
- (void)registerPaidStreamPayment:paymentType:;
- (void)removePaidStreamPaymentWithPaymentType:;
- (long long)paidScene;
- (long long)paidChannel;
- (BOOL)inLaunchState;
- (void)stopWithUninstallPaidBlockView:;
- (BOOL)inTrial;
- (BOOL)inTrialFinish;
- (BOOL)hasRet;
- (double)trialRemainingTime;
- (double)trialFinishStayDuration;
- (double)promiseStayDuration;
- (void)goToPaymentPageWithPaymentType:parameters:;
- (void)goToPaymentPageWithSchema:paymentType:parameters:;
- (void)installPaidBlockView:;
- (double)getTrialledTime;
- (void)updateBlockViewFrame:;
- (void)clearBlockViewContent;
- (void)showBlockViewContent;
- (id)reusingPaidStream;
- (void)setReusingPaidStream:;
- (id)securityDelegate;
- (void)setSecurityDelegate:;
- (id)videoPlayerForPaidBlock:;
- (void)setFinishShowTime:;
- (void)setFinishEndTime:;
- (double)finishEndTime;
- (double)finishShowTime;
- (void)sendEventToPlugins:event:;
- (BOOL)pluginShouldActiveWhenHasReusingPaidStream:;
- (void)sendEventWillStart;
- (void)sendEventDidStop;
- (void)sendEventDidClose;
- (void)sendEventTrialWillStart;
- (void)sendEventTrialDidStart;
- (void)sendEventTrialDidPause;
- (void)sendEventTrialDidStop;
- (void)sendEventTrialRemainingTimeDidChange:totalTimeInterval:;
- (void)sendEventDidFinishTrialWithReason:;
- (void)sendEventAuthWillStart;
- (void)sendEventAuthDidStartWithReason:;
- (void)sendEventAuthDidEndWithReason:;
- (void)sendEventDidUpdateAuthWithAuthItems:;
- (void)sendEventWillDisplayForBlockType:;
- (void)sendEventDidEndDisplayForBlockType:;
- (void)sendEventActionForBlockType:completionHandler:;
- (void)sendEventWillInstallSecurityType:;
- (void)sendEventWillStartScreenCaptured;
- (void)sendEventScreenCapturedDidChange:;
- (void)sendEventWillDisplayScreenCapturedAlert;
- (void)sendEventDidEndDisplayScreenCapturedAlert;
- (void)sendEventLoadPaymentPageWithPayment:isSuccess:authItem:;
- (void)sendEventDidAcquiredPaidAuthItems:;
- (void)sendEventPaymentPageDidAppear;
- (void)sendEventWillExitPaymentPage;
- (void)sendEventDidExitPaymentPage;
- (void)sendEventHasFreeWhenTrialFinish:;
- (void)sendEventDidEndDisplayGrabFreeView;
- (void)sendEventGrabFreeSucceed:;
- (id)initWithConfig:reusePaidStream:plugins:timeTrial:;
- (id)paidTrial;
- (id)paidAuth;
- (id)paidSecurity;
- (id)externalPlugins;
- (id)paidPaymentManagers;
- (void)log:extraParams:;
- (void)setPaidPaymentManagers:;
- (void)reuse:;
- (void)paidAuthStart;
- (id)paidBlock;
- (double)lastReportTimeInterval;
- (void)reportWatchedTimeInterval:;
- (void)setLastReportTimeInterval:;
- (id)reusePaidStream;
- (void)setExternalPlugins:;
- (double)promiseShowTime;
- (double)promiseEndTime;
- (void)setPromiseEndTime:;
- (void)updatePaidSceneUIConfig;
- (void)acquireVideoPlayDuration:;
- (double)reportTimeInterval;
- (id)getTrialPersistKey;
- (void)setPromiseShowTime:;
- (id)acquiredAuthItemsBeforeExitPaymentPage;
- (void)setAcquiredAuthItemsBeforeExitPaymentPage:;
- (id)toPurchaseAuthItemWithPaymentType:;
- (void)paidTrialWillStart:reason:;
- (void)paidTrialDidStart:reason:;
- (void)paidTrialDidPause:;
- (void)paidTrialDidStop:;
- (void)paidTrial:didChangeValue:totalValue:;
- (void)paidTrial:didFinishReason:;
- (void)paidAuthWillStart:;
- (void)paidAuth:didStartWithReason:;
- (void)paidAuth:didEndWithReason:;
- (void)paidAuth:didUpdateAuthWithAuthItems:;
- (id)aboveViewForPaidBlock:;
- (long long)indexForInsertBlockViewWithPaidBlock:;
- (id)blockViewFrameForPaidBlock:;
- (id)trialContainerViewForPaidBlock:;
- (id)blockPurchaseButtonViewForPaidBlock:;
- (id)commonParametersForPaidBlock:;
- (void)paidBlock:willDisplayForBlockType:;
- (void)paidBlock:didEndDisplayForBlockType:;
- (void)paidBlock:actionForBlockType:completionHandler:;
- (id)commonParametersForPaidPayment:;
- (void)paidPayment:loadPaymentPageSuccess:authItem:;
- (void)paidPayment:didAcquirePaidAuthItems:;
- (void)paymentPageDidAppearForPaidPayment:;
- (void)willExitPaymentPageWithPaidPayment:;
- (void)didExitPaymentPageWithPaidPayment:;
- (void)paidSecurity:screenCapturedDidChange:;
- (id)requestParametersForPaidAuth:;
- (id)initWithConfig:reusePaidStream:plugins:;
- (void)setPaidTrial:;
- (void)setPaidAuth:;
- (void)setPaidBlock:;
- (void)setPaidSecurity:;
- (id)paidFree;
- (void)setPaidFree:;
- (void)setReportTimeInterval:;
- (void)setConfig:;
- (void)close;
- (id)delegate;
- (void)resume;
- (id)config;
- (void)setPlugins:;
- (unsigned long long)state;
- (void).cxx_destruct;
- (void)setDelegate:;
- (void)setState:;
- (void)stop;
- (void)start;
- (void)pause;
- (id)plugins;
- (void)setUIDelegate:;
- (id)UIDelegate;
- (void)removePlugin:;
- (void)addPlugin:;
@end
