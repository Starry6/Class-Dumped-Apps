@interface AWESickerApplyMusicInfoHandler : AWEStickerApplyBaseHandler
@property (nonatomic) <ACCRecordSelectMusicService> musicService;
@property (nonatomic) <ACCRecordCutMusicServiceProtocol> recordCutMusicService;
@property (nonatomic) AWEVideoPublishViewModel repository;
@property (nonatomic) NSObject<OS_dispatch_queue> musicInfoMsgQueue;
@property (nonatomic) IESEffectModel currentSticker;
@property (nonatomic) q maxSendFps;
@property (nonatomic) Q currentInfoType;
@property (nonatomic) NSSet shouldSendMusicInfoKeys;
@property (nonatomic) NSArray musicInfoObservers;
@property (nonatomic) NSTimer fixedFrequencyTimer;
@property (nonatomic) double currentPlayTime;
@property (nonatomic) Q hash;
@property (nonatomic) # superclass;
@property (nonatomic) NSString description;
@property (nonatomic) NSString debugDescription;
- (double)currentPlayTime;
- (void)setCurrentPlayTime:;
- (id)musicService;
- (void)setMusicService:;
- (void)cameraService:pauseRecordWithError:;
- (void)flowServiceStateDidChanged:preState:;
- (void)flowServiceDidRemoveLastSegment:;
- (void)cameraService:didChangeBGMProgress:;
- (void)setCurrentSticker:;
- (id)currentSticker;
- (void)setMusicInfoMsgQueue:;
- (void)p_resetDefaultInfo;
- (void)p_observerMusicInfoChangeIfNeeded;
- (void)p_unobserverMusicInfoChangeIfNeeded;
- (void)p_handlePickMusicModel:selectFrom:isFirstApplyProp:;
- (void)p_handleTaskId:json:;
- (long long)maxSendFps;
- (double)p_getDurationWithMusicModel:musicAsset:;
- (double)p_getTimeIntervalWithBGMTime:duration:;
- (void)p_invalidFixedFrequencyTimerIfNeeded;
- (void)p_sendMusicInfoIfNeeded;
- (id)fixedFrequencyTimer;
- (void)setFixedFrequencyTimer:;
- (void)p_restoreCurrentPlayTimeWithApplyProp:;
- (void)setMaxSendFps:;
- (void)setShouldSendMusicInfoKeys:;
- (void)setCurrentInfoType:;
- (id)musicInfoObservers;
- (void)p_handleCancelMusicModel;
- (void)p_sendDefaultMusicInfoIfNeededWithApplyProp:;
- (void)setMusicInfoObservers:;
- (id)shouldSendMusicInfoKeys;
- (BOOL)p_hasFullInfoWithModel:;
- (BOOL)hasValidLyricUrlWithModel:;
- (id)p_shouldRefreshKeysForMusicModel;
- (void)p_asyncSendMusicInfoMessageToEffectWithStatus:bodyAssembler:;
- (id)p_assembleBodyWithSendKeys:musicModel:audioRange:musicAsset:currentPlayTime:;
- (id)musicInfoMsgQueue;
- (unsigned long long)currentInfoType;
- (id)recordCutMusicService;
- (void)handlerDidBecomeActive;
- (void)camera:didApplySticker:success:;
- (void)camera:didRecvMessage:;
- (void)setRecordCutMusicService:;
- (id)repository;
- (void).cxx_destruct;
- (void)setRepository:;
@end
