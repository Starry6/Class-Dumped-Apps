@interface AWEIMConIncentivePendantComponent : AWEIMComponentBase
@property (nonatomic) AWEIMIncentiveProgressPendantView incentivePendant;
@property (nonatomic) UIView<HunterContainerProtocol> dynamicIncentivePendant;
@property (nonatomic) HunterDynamicPatchModel currentHunterDynamicPatchModel;
@property (nonatomic) BOOL needReloadHunterDynamicContainer;
@property (nonatomic) UIView<IESIMHunterContainerProtocol> dynamicIMIncentivePendant;
@property (nonatomic) IESIMHunterDynamicPatchModel currentIMHunterDynamicPatchModel;
@property (nonatomic) Q pendantStyle;
@property (nonatomic) BOOL didTrackShow;
@property (nonatomic) AWEIMMessageConversation conversation;
@property (nonatomic) NSString relationID;
@property (nonatomic) NSTimer coolDownStatusTimer;
@property (nonatomic) NSTimer nonactivatedTimer;
@property (nonatomic) <AWEIMMessageListNaviBarInterface> naviBarService;
@property (nonatomic) BOOL isNeedGoToFrontPageAfterHostVCWillAppear;
@property (nonatomic) Q hash;
@property (nonatomic) # superclass;
@property (nonatomic) NSString description;
@property (nonatomic) NSString debugDescription;
- (void)didFinishFollowUser:status:error:;
- (void)didFinishUnFollowUser:status:error:;
- (void)didFinishBlockUser:status:;
- (id)peerUser;
- (void)hostVC_viewDidDisappear;
- (void)hostVC_viewWillAppear;
- (void)afterInitialComponentAllResolved:;
- (long long)naviBarPriority;
- (id)naviBarView;
- (long long)naviBarPosition;
- (id)naviBarViewIntrinsicContentSize;
- (double)naviBarViewCustomSpacing;
- (void)componentDidMounted:;
- (void)hostVC_viewDidAppear;
- (void)didFetchFullDetailUser:fullDetailUser:;
- (unsigned long long)pendantStyle;
- (void)setPendantStyle:;
- (BOOL)didTrackShow;
- (void)setDidTrackShow:;
- (void)completeByteSyncIncentiveChatDataUpdate;
- (void)completeInfoOtherIncentiveChatDataUpdate;
- (void)completeCommandMessageIncentiveChatDataUpdate;
- (void)incentiveChatService:relationUpdateWithRelationID:conversationID:;
- (void)incentiveChatServiceActivityExit:;
- (void)groupConversationIsUpdateWithCon:;
- (id)relationID;
- (void)didChangeRelationOldStatus:newStatus:;
- (void)updateRelationProgress:needChangeStyle:source:;
- (void)updateRelationActivation:source:;
- (void)messageListBackgroundImageDidUpdated:;
- (void)themeDidReload;
- (void)didEndPlayIncentiveAnimationSuccess:;
- (void)p_tryPreActiveGecko;
- (id)getIncentiveChatPendant;
- (id)incentiveChatPendantSize;
- (void)p_preloadHunterIfNeeded;
- (id)p_createPendantView;
- (void)setIncentivePendant:;
- (id)p_createDynamicIncentivePendant;
- (void)setDynamicIncentivePendant:;
- (id)createIMDynamicIncentivePendant;
- (void)setDynamicIMIncentivePendant:;
- (void)setIsNeedGoToFrontPageAfterHostVCWillAppear:;
- (BOOL)p_checkEnableShowWithUser:orIMUser:checkSpring:;
- (id)p_getHunterDynamicSchema;
- (void)setNaviBarService:;
- (id)getIncentiveChatPendantView;
- (BOOL)isNeedGoToFrontPageAfterHostVCWillAppear;
- (void)p_transferToIncentiveLynxPage;
- (void)p_trackShowPendant;
- (id)incentivePendant;
- (id)p_pendantStyleString;
- (BOOL)p_checkEnableShowProgress;
- (void)p_updatePendantProgressShow:;
- (void)p_updatePendantHidden:;
- (BOOL)p_needShowFullAnimation;
- (BOOL)p_isInActivationIndicator;
- (void)p_startPendantStatusTimerIfNeeded:;
- (BOOL)p_isInNoProgressIndicator;
- (void)p_logPendantStyleChangeFromStyle:toStyle:reason:;
- (unsigned long long)p_getStyleWithType:relationProgress:;
- (BOOL)p_checkEnableShowWithUser:orIMUser:;
- (void)p_renderHunterContainer;
- (void)saveGroupExitModelToDictionaryWithExitModel:;
- (id)p_getGroupExitLogicModel;
- (id)p_getGroupExitLogicKey;
- (long long)p_groupMaxShowCount;
- (id)p_getHunterDynamicClientData;
- (id)p_getHunterDynamicServerData;
- (id)currentHunterDynamicPatchModel;
- (void)setNeedReloadHunterDynamicContainer:;
- (void)setCurrentHunterDynamicPatchModel:;
- (id)currentIMHunterDynamicPatchModel;
- (void)setCurrentIMHunterDynamicPatchModel:;
- (void)renderIMHunterContainer;
- (id)dynamicIncentivePendant;
- (void)p_generateHunterDynamicPatchModel;
- (BOOL)needReloadHunterDynamicContainer;
- (id)dynamicIMIncentivePendant;
- (void)generateIMHunterDynamicPatchModel;
- (id)p_getHunterDynamicIncentiveChatServerData;
- (void)p_debugToastShow:;
- (BOOL)p_shouldAlwaysShowPendantInPrivateChatWithUser:orIMUser:;
- (BOOL)p_isFullAnimationShow;
- (BOOL)p_checkEnableShowByGroupExitLogic;
- (void)__handleIncentiveClick;
- (void)p_containerAddListenEventWithViewIfNeeded:;
- (BOOL)p_isInSuppressionIndicator;
- (BOOL)p_isInCoolDownIndicator;
- (id)naviBarService;
- (void)p_startCoolDownStatusTimerWithRelationProgress:;
- (void)p_startNonactivatedStatusTimerWithRelationProgress:;
- (void)p_pendantCoolDownStatusTimerEnd;
- (id)coolDownStatusTimer;
- (void)setCoolDownStatusTimer:;
- (void)p_pendantNonactivatedStatusTimerEnd;
- (id)nonactivatedTimer;
- (void)setNonactivatedTimer:;
- (BOOL)p_isConvValidForSpring:;
- (void)dealloc;
- (void).cxx_destruct;
- (id)conversation;
+ (BOOL)canCreateComponentWithContext:;
@end
