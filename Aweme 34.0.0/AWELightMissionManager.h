@interface AWELightMissionManager : HTSService
@property (nonatomic) double duration;
@property (nonatomic) BOOL isFromHomepage;
@property (nonatomic) BOOL isFromTopic;
@property (nonatomic) AWELightMissionModel lightMissionModel;
@property (nonatomic) NSTimer timer;
@property (nonatomic) q maxReportTime;
@property (nonatomic) q minReportTime;
@property (nonatomic) q playState;
@property (nonatomic) double realWatchTime;
@property (nonatomic) BOOL isPlayVideo;
@property (nonatomic) BOOL isInSearch;
@property (nonatomic) NSArray requirements;
@property (nonatomic) NSString authorIdWhenLeaveVideo;
@property (nonatomic) double stayWatchTime;
@property (nonatomic) BOOL isSuspendReported;
@property (nonatomic) q idleThreshold;
@property (nonatomic) q curLoopTime;
@property (nonatomic) BOOL isFromLightMission;
@property (nonatomic) q reportTimesBetweenIdleThreshold;
@property (nonatomic) BOOL hasAlreadyEnterGoodsPage;
@property (nonatomic) Q hash;
@property (nonatomic) # superclass;
@property (nonatomic) NSString description;
@property (nonatomic) NSString debugDescription;
- (void)onServiceInit;
- (BOOL)isParticipateMission:;
- (void)reportMissionStayPageDuration;
- (void)destroyLightMissionModel;
- (BOOL)isInLightMissionPeriod:;
- (void)forceReportLightMission;
- (BOOL)lightMissionWillEnterSearchScene;
- (BOOL)continueLightMissionWithParam:;
- (void)scrollViewChanged;
- (BOOL)isLightMissionStyle;
- (void)didChangePlaybackStateWithAction:;
- (void)stopWith:;
- (void)playerDidUpdateWith:;
- (void)playerWillLoopPlayingWith:;
- (void)setIsFromHomepage:;
- (BOOL)isFromHomepage;
- (void)setIsFromTopic:;
- (void)setIsPlayVideo:;
- (void)setIsInSearch:;
- (void)setIsFromLightMission:;
- (void)setReportTimesBetweenIdleThreshold:;
- (void)setMaxReportTime:;
- (void)setMinReportTime:;
- (BOOL)canReportLightMission;
- (void)setIdleThreshold:;
- (void)handleRequirementModel:;
- (id)lightMissionModel;
- (void)setAuthorIdWhenLeaveVideo:;
- (BOOL)isSuspendReported;
- (void)resetReportedStatus;
- (void)setRealWatchTime:;
- (void)reportMissionWatchVideoTime:;
- (void)setCurLoopTime:;
- (double)realWatchTime;
- (BOOL)handleDifferentRequirementID:;
- (void)reportLightMissionWithSourceType:;
- (long long)maxReportTime;
- (BOOL)handleDifferentScene;
- (void)reportLightMission;
- (void)setStayWatchTime:;
- (double)stayWatchTime;
- (long long)minReportTime;
- (long long)reportTimesBetweenIdleThreshold;
- (long long)idleThreshold;
- (void)reportAntiSpammngInfoWithSourceType:;
- (long long)curLoopTime;
- (void)setIsSuspendReported:;
- (BOOL)isInLightMissionPeriod;
- (BOOL)isInSearch;
- (BOOL)isFromTopic;
- (id)authorIdWhenLeaveVideo;
- (void)setLightMissionModel:;
- (BOOL)isFromLightMission;
- (BOOL)hasAlreadyEnterGoodsPage;
- (void)setHasAlreadyEnterGoodsPage:;
- (void)forceReportLightMission:;
- (BOOL)isPlayVideo;
- (void)willEnterForeground;
- (void)didEnterBackground;
- (void)setTimer:;
- (id)timer;
- (unsigned long long)moduleNames;
- (void)setDuration:;
- (id)requirements;
- (void).cxx_destruct;
- (double)duration;
- (void)setRequirements:;
- (long long)playState;
- (void)setPlayState:;
@end
