@interface AWEASSSelectMusicViewController : UIViewController
@property (nonatomic) UIView emptyView;
@property (nonatomic) UIView contentView;
@property (nonatomic) AWEASSMusicNavView navView;
@property (nonatomic) <ACCMusicCommonSearchBarProtocol> searchBar;
@property (nonatomic) UIButton searchBackBtn;
@property (nonatomic) ACCASSCurrentSelectedView currentSelectedMusicView;
@property (nonatomic) ACCASSMusicBannerView bannerView;
@property (nonatomic) UIView<ACCSelectMusicTabProtocol> musicTabView;
@property (nonatomic) UIView<ACCLoadingViewProtocol> useMusicLoadingView;
@property (nonatomic) UITableView tableView;
@property (nonatomic) UIView tableHeaderView;
@property (nonatomic) UIView<ACCLoadingViewProtocol> feedLoadingView;
@property (nonatomic) Q cellPlayStatus;
@property (nonatomic) <ACCAudioPlayerProtocol> audioPlayer;
@property (nonatomic) <ACCMusicModelProtocol> playingMusic;
@property (nonatomic) NSIndexPath playingMusicIndexPath;
@property (nonatomic) BOOL isEditingLocalState;
@property (nonatomic) q collectionPlayingMusicRow;
@property (nonatomic) ACCVideoMusicCategoryModel collectionPlayingCategory;
@property (nonatomic) NSMutableDictionary contentOffsetDictionary;
@property (nonatomic) NSMutableDictionary playingStatusDictionary;
@property (nonatomic) NSMutableDictionary playingRowDictionary;
@property (nonatomic) ACCMusicCollectionFeedManager feedManager;
@property (nonatomic) NSMutableArray dataList;
@property (nonatomic) <ACCTransitionViewControllerProtocol> transitionDelegate;
@property (nonatomic) AWEModalTransitionDelegate transitionDelegateForAlbum;
@property (nonatomic) UIViewController<ACCASSSearchMusicVCProtocol> searchVC;
@property (nonatomic) BOOL hideBanner;
@property (nonatomic) AWEAudioClipFeatureManager clipManager;
@property (nonatomic) BOOL fromSelectedMusicClip;
@property (nonatomic) NSString enterMusicSearchPathMethod;
@property (nonatomic) BOOL isFirstEnterSearchPage;
@property (nonatomic) NSString exitPageMethod;
@property (nonatomic) UIPanGestureRecognizer panGesture;
@property (nonatomic) BOOL forbidSimuScrollViewPanGesture;
@property (nonatomic) ACCLocalAudioDataController localAudioDataController;
@property (nonatomic) double startClickStreamingPlay;
@property (nonatomic) NSString createId;
@property (nonatomic) @? updatePublishModelCategoryIdBlock;
@property (nonatomic) Q hash;
@property (nonatomic) # superclass;
@property (nonatomic) NSString description;
@property (nonatomic) NSString debugDescription;
@property (nonatomic) <ACCChallengeModelProtocol> challenge;
@property (nonatomic) AWEVideoPublishViewModel repository;
@property (nonatomic) <ACCMusicModelProtocol> selectedMusic;
@property (nonatomic) @? pickCompletion;
@property (nonatomic) @? cancelMusicCompletion;
@property (nonatomic) @? didCloseBlock;
@property (nonatomic) @? didDismissBlock;
@property (nonatomic) q recordServerMode;
@property (nonatomic) q recordMode;
@property (nonatomic) double videoDuration;
@property (nonatomic) BOOL disableCutMusic;
@property (nonatomic) <ACCMusicModelProtocol> musicSelectInPanel;
@property (nonatomic) BOOL shouldHideCellMoreButton;
@property (nonatomic) BOOL needDisableDeselectMusic;
@property (nonatomic) BOOL shouldHideCancelButton;
@property (nonatomic) BOOL isFixDurationMode;
@property (nonatomic) BOOL shouldHideSelectedMusicViewClipActionBtn;
@property (nonatomic) <ACCMusicModelProtocol> sameStickerMusic;
@property (nonatomic) <ACCMusicModelProtocol> mvMusic;
@property (nonatomic) <ACCMusicModelProtocol> uploadRecommendMusic;
@property (nonatomic) NSString playlistId;
@property (nonatomic) NSString previousPage;
@property (nonatomic) NSArray propBindMusicIdArray;
@property (nonatomic) NSString propId;
@property (nonatomic) q sceneType;
@property (nonatomic) BOOL useSuggestClipRange;
@property (nonatomic) BOOL enableMusicLoop;
@property (nonatomic) BOOL enableUseOriginMusic;
@property (nonatomic) ACCMusicTrimViewSnapShootModel imageMusicTrimStatusModel;
@property (nonatomic) {_HTSAudioRange=dd} audioRange;
@property (nonatomic) double exsitingVideoDuration;
@property (nonatomic) @? enableClipBlock;
@property (nonatomic) @? didClipWithRange;
@property (nonatomic) @? didSuggestClipRangeChange;
@property (nonatomic) @? setForbidSimultaneousScrollViewPanGesture;
@property (nonatomic) NSDictionary clipTrackInfo;
@property (nonatomic) double fixDuration;
@property (nonatomic) BOOL shouldAccommodateVideoDurationToMusicDuration;
@property (nonatomic) double maximumMusicDurationToAccommodate;
- (void)p_setupUI;
- (id)aweui_emptyPageConfigForState:;
- (void)aweui_emptyPagePrimaryButtonTapped:;
- (id)aweui_emptyPageEdgeInsets;
- (id)didDismissBlock;
- (void)setDidDismissBlock:;
- (id)aweui_emptyPageBelowView;
- (id)emptyPageEdgeInsets;
- (void)emptyPagePrimaryButtonTapped;
- (void)setDataList:;
- (id)playlistId;
- (id)createId;
- (long long)recordMode;
- (void)setRecordMode:;
- (BOOL)enableMusicLoop;
- (void)setEnableMusicLoop:;
- (BOOL)useSuggestClipRange;
- (void)setUseSuggestClipRange:;
- (id)propId;
- (void)setPropId:;
- (id)didCloseBlock;
- (void)setDidCloseBlock:;
- (void)setPlayingMusic:;
- (id)playingMusic;
- (void)p_loadMoreData;
- (void)handleAppWillResignActiveNotification;
- (id)navView;
- (void)setNavView:;
- (void)setCreateId:;
- (id)searchVC;
- (void)p_clearSearch;
- (void)setSearchVC:;
- (id)feedManager;
- (void)setFeedManager:;
- (void)p_updateLayout;
- (BOOL)loadMoreHasMore;
- (void)setPlaylistId:;
- (id)sameStickerMusic;
- (void)setSameStickerMusic:;
- (void)setAudioRange:;
- (id)transitionDelegateForAlbum;
- (void)setTransitionDelegateForAlbum:;
- (id)audioRange;
- (void)setExsitingVideoDuration:;
- (void)setClipTrackInfo:;
- (void)setEnableClipBlock:;
- (void)setDidClipWithRange:;
- (void)setDidSuggestClipRangeChange:;
- (void)setSetForbidSimultaneousScrollViewPanGesture:;
- (void)setDisableCutMusic:;
- (BOOL)shouldHideCellMoreButton;
- (void)setShouldHideCellMoreButton:;
- (BOOL)needDisableDeselectMusic;
- (void)setNeedDisableDeselectMusic:;
- (BOOL)shouldHideCancelButton;
- (void)setShouldHideCancelButton:;
- (BOOL)isFixDurationMode;
- (void)setIsFixDurationMode:;
- (BOOL)shouldHideSelectedMusicViewClipActionBtn;
- (void)setShouldHideSelectedMusicViewClipActionBtn:;
- (id)mvMusic;
- (void)setMvMusic:;
- (id)uploadRecommendMusic;
- (void)setUploadRecommendMusic:;
- (id)selectedMusic;
- (void)setSelectedMusic:;
- (id)propBindMusicIdArray;
- (void)setPropBindMusicIdArray:;
- (BOOL)enableUseOriginMusic;
- (void)setEnableUseOriginMusic:;
- (id)imageMusicTrimStatusModel;
- (void)setImageMusicTrimStatusModel:;
- (double)exsitingVideoDuration;
- (id)enableClipBlock;
- (id)didClipWithRange;
- (id)didSuggestClipRangeChange;
- (id)setForbidSimultaneousScrollViewPanGesture;
- (id)clipTrackInfo;
- (double)fixDuration;
- (void)setFixDuration:;
- (BOOL)shouldAccommodateVideoDurationToMusicDuration;
- (void)setShouldAccommodateVideoDurationToMusicDuration:;
- (double)maximumMusicDurationToAccommodate;
- (void)setMaximumMusicDurationToAccommodate:;
- (void)configDelegateViewWithStatus:;
- (void)setPickCompletion:;
- (void)setCancelMusicCompletion:;
- (BOOL)disableCutMusic;
- (id)musicSelectInPanel;
- (void)setMusicSelectInPanel:;
- (id)pickCompletion;
- (id)cancelMusicCompletion;
- (void)configForCallBack;
- (BOOL)forbidSimuScrollViewPanGesture;
- (void)setPlayingMusicIndexPath:;
- (void)setCollectionPlayingMusicRow:;
- (void)setCollectionPlayingCategory:;
- (void)configEmptyPageState:;
- (id)playingMusicIndexPath;
- (long long)collectionPlayingMusicRow;
- (id)playingStatusDictionary;
- (void)p_makeCurrentPlayingCellPause;
- (id)playingRowDictionary;
- (double)contentViewTopOffset;
- (BOOL)enableDiscoveryRefactor;
- (void)tapToClosePage;
- (void)cancelBtnClicked:;
- (long long)recordServerMode;
- (void)didPickAudio:fromClip:error:;
- (void)p_showMusicClipViewWithMusic:;
- (void)setForbidSimuScrollViewPanGesture:;
- (id)collectionPlayingCategory;
- (id)p_getCategoryName:;
- (double)startClickStreamingPlay;
- (void)setCellPlayStatus:;
- (void)setStartClickStreamingPlay:;
- (void)trackSelectMusicViewShowTime;
- (void)trackMusicPlayTime:;
- (void)pauseForPickAudio;
- (void)enterMusicDetailViewController:categoryId:categoryName:;
- (void)p_collectionBtnClickedWithAudio:tableViewCell:withDict:needRefreshTable:;
- (id)contentOffsetDictionary;
- (void)handleForUseMusicOnVideo:;
- (void)setUseMusicLoadingView:;
- (id)useMusicLoadingView;
- (void)p_handleForUseMusicOnVideo:withError:;
- (void)setFromSelectedMusicClip:;
- (double)calculateAvailableCutDurationWithMusic:;
- (void)p_downloadMusicIfNeeded:completion:;
- (id)emptyPageBelowView;
- (void)setRecordServerMode:;
- (BOOL)p_inputIsAllWhitespace:;
- (unsigned long long)cellPlayStatus;
- (BOOL)isEditingLocalState;
- (void)setIsEditingLocalState:;
- (void)setContentOffsetDictionary:;
- (void)setPlayingStatusDictionary:;
- (void)setPlayingRowDictionary:;
- (BOOL)fromSelectedMusicClip;
- (id)exitPageMethod;
- (void)setExitPageMethod:;
- (id)updatePublishModelCategoryIdBlock;
- (void)setUpdatePublishModelCategoryIdBlock:;
- (void)p_exitSearch;
- (void)p_enterSearch;
- (void)searchBarResignFirstResponder;
- (void)requestLocalAudioAuth;
- (id)localAudioDataController;
- (void)setLocalAudioDataController:;
- (void)hideTableHeaderBannerView;
- (void)p_refreshDataWithAnimation:;
- (void)setEnterMusicSearchPathMethod:;
- (void)setIsFirstEnterSearchPage:;
- (void)trackWhenEnterSearch:;
- (void)fixIOS18UIBug;
- (BOOL)isFirstEnterSearchPage;
- (void)trackWhenExitMusicPanel:;
- (void)p_stopCurrentSelectedViewIfNeeded;
- (void)exitAllPages;
- (id)searchBackBtn;
- (id)currentSelectedMusicView;
- (id)musicTabView;
- (void)updateDataList;
- (BOOL)shouldOptimizeMusicLoading;
- (void)setFeedLoadingView:;
- (void)addSelectedMusicViewIfNeeded;
- (void)p_endRefreshingWithAnimation:;
- (id)feedLoadingView;
- (void)p_prepareSelectMusicHotData;
- (void)p_prepareSelectMusicLocalData;
- (void)safeAddObjectToDataList:;
- (id)p_localAudioBasicTrackInfo;
- (void)p_dismissAlbumViewController;
- (id)enterMusicSearchPathMethod;
- (void)reloadTableHeaderView;
- (void)setHideBanner:;
- (double)tableHeaderViewHeight;
- (void)searchBackBtnClicked:;
- (void)p_changeSearchWord:;
- (BOOL)p_correctKeywordWhenStartSearch;
- (void)p_startSearch:;
- (void)trackWhenQuitSearch:;
- (void)solveColseGestureWith:;
- (id)commonTrackparams;
- (void)searchHistoryBackBtnClickAction:;
- (id)getFirstDataOfSection:;
- (void)p_handleExportAudio:;
- (void)localListEditClick;
- (void)setSearchBackBtn:;
- (void)setCurrentSelectedMusicView:;
- (void)setMusicTabView:;
- (BOOL)prefersStatusBarHidden;
- (BOOL)shouldAutorotate;
- (void)viewWillDisappear:;
- (id)tableView:viewForHeaderInSection:;
- (id)tableView:cellForRowAtIndexPath:;
- (id)searchBar;
- (long long)tableView:numberOfRowsInSection:;
- (void)dealloc;
- (long long)numberOfSectionsInTableView:;
- (void)tableView:willDisplayCell:forRowAtIndexPath:;
- (void)setSearchBar:;
- (id)repository;
- (void)tableView:didSelectRowAtIndexPath:;
- (void)setTableView:;
- (void)viewDidLoad;
- (id)challenge;
- (id)contentView;
- (id)tableView;
- (BOOL)gestureRecognizerShouldBegin:;
- (void)setChallenge:;
- (id)tableHeaderView;
- (void)viewDidDisappear:;
- (long long)preferredStatusBarStyle;
- (id)initWithNibName:bundle:;
- (void)viewWillAppear:;
- (void)setAudioPlayer:;
- (void).cxx_destruct;
- (double)tableView:heightForRowAtIndexPath:;
- (void)setContentView:;
- (double)videoDuration;
- (id)audioPlayer;
- (void)viewDidAppear:;
- (double)tableView:heightForHeaderInSection:;
- (void)tableView:didEndDisplayingCell:forRowAtIndexPath:;
- (long long)preferredStatusBarUpdateAnimation;
- (double)tableView:estimatedHeightForRowAtIndexPath:;
- (void)pause;
- (void)setRepository:;
- (BOOL)gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:;
- (id)previousPage;
- (void)setPreviousPage:;
- (void)setTableHeaderView:;
- (void)setTransitionDelegate:;
- (double)tableView:estimatedHeightForFooterInSection:;
- (double)tableView:estimatedHeightForHeaderInSection:;
- (double)tableView:heightForFooterInSection:;
- (id)tableView:viewForFooterInSection:;
- (id)transitionDelegate;
- (id)emptyView;
- (id)panGesture;
- (void)setEmptyView:;
- (void)setPanGesture:;
- (long long)sceneType;
- (void)setSceneType:;
- (double)bannerHeight;
- (id)bannerView;
- (void)setBannerView:;
- (void)handlePanGesture:;
- (BOOL)hideBanner;
- (void)setVideoDuration:;
- (void)setClipManager:;
- (id)clipManager;
- (double)footerInset;
- (void)reloadTableView;
- (id)dataList;
+ (BOOL)hasInstance;
+ (void)setHasInstance:;
@end
