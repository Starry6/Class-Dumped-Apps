@interface AWESearchVideoView : UIView
@property (nonatomic) NSObject<AWESearchVideoInteractionManager> interactionManager;
@property (nonatomic) AWEAwemeModel awemeModel;
@property (nonatomic) AWEInvalidVideoSourceView invalidVideoSourceView;
@property (nonatomic) UIView<AWESearchUserGuideViewProtocol> guideView;
@property (nonatomic) BOOL isScrolling;
@property (nonatomic) BOOL isHeadphonesOn;
@property (nonatomic) BOOL isWaitingChunkModel;
@property (nonatomic) BOOL isPlayedBeforeChunkModel;
@property (nonatomic) @? delayedSeekToTimeBlock;
@property (nonatomic) double time;
@property (nonatomic) AWESearchVideoReuseHandler reuseHandler;
@property (nonatomic) AWESearchVideoContext videoContext;
@property (nonatomic) BOOL isReusePlayer;
@property (nonatomic) UIView fakeVideoView;
@property (nonatomic) BOOL isActive;
@property (nonatomic) AWEPaymentVideoMaskView paymentVideoMask;
@property (nonatomic) AWESearchPaymentVideoMaskV2View paymentVideoMaskV2;
@property (nonatomic) AWESearchRewarAdvertiseVideoMaskV2View rewardVideoMaskV2;
@property (nonatomic) DUXBaseLabel icpNumberLabel;
@property (nonatomic) {CGSize=dd} icpNumberLabelSize;
@property (nonatomic) BOOL hiddenIcpNumberAfterShow;
@property (nonatomic) BOOL didPaymentVideoPreviewEndTriggered;
@property (nonatomic) BOOL havePlayed;
@property (nonatomic) AWEPlayVideoViewController playVideoViewController;
@property (nonatomic) <AWESearchVideoViewPlayerDelegate> delegate;
@property (nonatomic) BOOL repeat;
@property (nonatomic) q scaleMode;
@property (nonatomic) q coverContentMode;
@property (nonatomic) BOOL muted;
@property (nonatomic) double volume;
@property (nonatomic) double playbackRate;
@property (nonatomic) double currPlaybackTime;
@property (nonatomic) double startPlayTime;
@property (nonatomic) double defaultSeekToTime;
@property (nonatomic) BOOL showProgressBarAttribute;
@property (nonatomic) q reactHeadphonesChange;
@property (nonatomic) BOOL useNormalCover;
@property (nonatomic) q playState;
@property (nonatomic) NSDictionary logExtra;
@property (nonatomic) NSString referString;
@property (nonatomic) NSNumber videoDuration;
@property (nonatomic) BOOL isMerchandiseType;
@property (nonatomic) BOOL isAlbumReuse;
@property (nonatomic) @? didReadyForDisplayBlock;
@property (nonatomic) UIView videoPlayerView;
@property (nonatomic) <IESVideoPlayerProtocol> playerController;
@property (nonatomic) double progress;
@property (nonatomic) UIView progressView;
@property (nonatomic) double lastPlayDuration;
@property (nonatomic) NSString coverImage;
@property (nonatomic) UIImageView coverImageView;
@property (nonatomic) BOOL syncPlayStatus;
@property (nonatomic) @? trackSearchVideoPlayTimeBlock;
@property (nonatomic) @? updatePlayProgressTimeBlock;
@property (nonatomic) @? updatePlayerCompleteBlock;
@property (nonatomic) @? playerStartLoopPlayingBlock;
@property (nonatomic) @? showLoadingAnimationBlock;
@property (nonatomic) @? stopLoadingAniamtionBlock;
@property (nonatomic) @? didChangePlaybackStateBlock;
@property (nonatomic) BOOL useGrayPlaceholderImage;
@property (nonatomic) double placeholderImageRadio;
@property (nonatomic) BOOL cutCoverPlaceholderImageInAspectFitMode;
@property (nonatomic) BOOL isPlayClipMode;
@property (nonatomic) double clipDuration;
@property (nonatomic) @? didVideoClipPlaycompletion;
@property (nonatomic) Q hash;
@property (nonatomic) # superclass;
@property (nonatomic) NSString description;
@property (nonatomic) NSString debugDescription;
@property (nonatomic) BOOL mute;
- (void)openWatchedMonitor:;
- (id)awemeModel;
- (void)setAwemeModel:;
- (id)referString;
- (void)player:playbackFailedWithError:;
- (void)playerDidReadyForDisplay:;
- (void)player:didChangePlaybackStateWithAction:;
- (void)playerWillLoopPlaying:;
- (void)player:playbackFailedForURL:error:;
- (void)player:didChangeStallState:actionType:reason:;
- (void)setReferString:;
- (void)setLogExtra:;
- (id)logExtra;
- (double)defaultSeekToTime;
- (long long)loopTimes;
- (long long)coverContentMode;
- (void)setCoverContentMode:;
- (BOOL)useNormalCover;
- (void)setUseNormalCover:;
- (void)setDefaultSeekToTime:;
- (void)player:updatePlayTime:canPlayTime:totalTime:;
- (void)player:updatePlayProgressWithTime:totalDuration:;
- (void)player:didUpdateFromPlayViewController:;
- (void)playerWillStartNextLoopFinished:;
- (void)videoResourceDidRecallInPlayer:;
- (BOOL)shouldReponseToVideoRecallInPlayer:;
- (void)showLoadingAnimation;
- (void)stopLoadingAniamtion;
- (id)playVideoViewController;
- (void)setPlayVideoViewController:;
- (BOOL)isHeadphonesOn;
- (void)setStartPlayTime:;
- (double)currPlaybackTime;
- (void)setCoverImage:;
- (id)coverImageView;
- (void)setCoverImageView:;
- (void)trackVideoPlayFinishEvent;
- (void)trackAlbumPlayFinishEvent;
- (void)videoController:playerPlayTime:canPlayTime:totalTime:;
- (id)videoContext;
- (void)updateLogExtra:;
- (double)startPlayTime;
- (void)screenCapturedDidChange:;
- (void)stateOfHeadphones:;
- (BOOL)isMerchandiseType;
- (void)setIsMerchandiseType:;
- (void)videoPlay;
- (void)videoPause;
- (void)setShowProgressBarAttribute:;
- (void)setSyncPlayStatus:;
- (void)videoPlayerViewDoubleTappedAtPoint:;
- (void)updateDiggCountWithReferString:;
- (void)videoUpdatePlayerControllerWithPlayVideoVC:;
- (void)videoFinishUpdate:videoController:;
- (void)startScroll;
- (void)endScroll;
- (long long)getScaleModelWithAwemodel:;
- (void)videoUpdatePlayerControllerWithPlayState:;
- (void)setLastPlayDuration:;
- (double)lastPlayDuration;
- (void)setIsHeadphonesOn:;
- (id)invalidVideoSourceView;
- (void)showInvalidVideoSourceView;
- (void)hideInvalidVideoSourceView;
- (void)videoUpdatePlayerControllerWithNewPlayState:;
- (void)resetPlayerViewControllerProps;
- (BOOL)shouldExitFullScreenWithPlayStatus;
- (BOOL)syncPlayStatus;
- (void)viewWillDisAppear;
- (void)updateVideoPlayerAwemeModel;
- (void)p_updateVideoPlayerAwemeModel;
- (id)_getVideoLength;
- (id)delayedSeekToTimeBlock;
- (void)setDelayedSeekToTimeBlock:;
- (id)_defaultCoverImage;
- (BOOL)isReusePlayer;
- (void)setIsReusePlayer:;
- (void)setVideoContext:;
- (void)updatePlayProgressWithTime:totalDuration:;
- (void)setInteractionManager:;
- (void)updateWithChunkModel:;
- (void)resumeVideoPlayer:;
- (void)stashVideoPlayer:;
- (void)setIcpNumberLabelSize:;
- (void)setHiddenIcpNumberAfterShow:;
- (void)setIsPlayClipMode:;
- (id)paymentVideoMask;
- (id)paymentVideoMaskV2;
- (id)rewardVideoMaskV2;
- (id)icpNumberLabel;
- (void)addResourceRecallService;
- (void)addObserverForPaymentVideoIfNeeded;
- (id)icpNumberLabelSize;
- (BOOL)showProgressBarAttribute;
- (void)resetSearchVideoReuseContext;
- (BOOL)enableReuseUpdatePlayState;
- (void)updateSearchVideoViewStatus;
- (void)updateIcpNumber;
- (void)setDidPaymentVideoPreviewEndTriggered:;
- (BOOL)isWaitingChunkModel;
- (void)setIsWaitingChunkModel:;
- (void)setIsPlayedBeforeChunkModel:;
- (void)restoreStateAfterChunkModel;
- (BOOL)isPlayedBeforeChunkModel;
- (void)addObserverForChunkModel;
- (void)updateSearchVideoCoverImage;
- (void)resetWaitingChunkModel;
- (void)updateStartTimeIfNeed;
- (void)applyDefaultSeekToTime;
- (id)reuseHandler;
- (BOOL)isUnpaidAndNoPreview;
- (void)resumePlayVideoViewController;
- (void)recreatePlayerInTransitionIfNeeded;
- (void)updatePlayerAndCoverContentMode;
- (BOOL)blockPlayForPaymentVideo;
- (BOOL)blockPlayForRewardAdvertiseVideo;
- (BOOL)checkIsPaidMixScreenRecording;
- (void)setHavePlayed:;
- (void)trackSearchVideoReuseError;
- (void)stashPlayVideoViewController;
- (void)hideIcpNumber;
- (id)trackSearchVideoPlayTimeBlock;
- (BOOL)enableUpdateStartTime;
- (BOOL)isPlayClipMode;
- (id)fakeVideoView;
- (id)didVideoClipPlaycompletion;
- (id)didReadyForDisplayBlock;
- (BOOL)isAlbumReuse;
- (id)didChangePlaybackStateBlock;
- (void)updatePlayProgress;
- (void)checkPreviewEndIfNeeded:model:;
- (void)updateIcpNumberStatusWithPlayTime:;
- (void)resetVideoClipStatusIfNeedWithPlayTime:;
- (id)updatePlayProgressTimeBlock;
- (id)playerStartLoopPlayingBlock;
- (id)showLoadingAnimationBlock;
- (id)stopLoadingAniamtionBlock;
- (void)coverImageUpdated;
- (void)setPaymentVideoMaskV2Hidden:;
- (void)handleDismissGuideViewWithClick;
- (void)reactHeadphonesChange:;
- (long long)reactHeadphonesChange;
- (BOOL)useGrayPlaceholderImage;
- (double)placeholderImageRadio;
- (BOOL)cutCoverPlaceholderImageInAspectFitMode;
- (void)setReuseHandler:;
- (BOOL)shouldUpdateCoverUseVideo;
- (id)screenShotViewWith:;
- (void)setFakeVideoView:;
- (id)screenShotView:;
- (BOOL)havePlayed;
- (BOOL)p_isResourceRecalledForRecallMessage:;
- (id)updatePlayerCompleteBlock;
- (BOOL)didPaymentVideoPreviewEndTriggered;
- (void)updateWithPaidAwemeModel:;
- (BOOL)hiddenIcpNumberAfterShow;
- (void)updateBtmInfo:;
- (void)setPaymentVideoMask:;
- (void)setPaymentVideoMaskV2:;
- (void)setRewardVideoMaskV2:;
- (void)setIcpNumberLabel:;
- (void)setReactHeadphonesChange:;
- (void)resetPlayerViewController;
- (void)registerSearchUserGuideWithBlock:;
- (void)videoResourceDidRecallInVideoController:;
- (void)setInvalidVideoSourceView:;
- (void)setUseGrayPlaceholderImage:;
- (void)setDidVideoClipPlaycompletion:;
- (void)setPlaceholderImageRadio:;
- (void)updateCoverImageWithIntelligentCover;
- (void)setIsAlbumReuse:;
- (void)setCutCoverPlaceholderImageInAspectFitMode:;
- (void)setDidReadyForDisplayBlock:;
- (void)setUpdatePlayProgressTimeBlock:;
- (void)setUpdatePlayerCompleteBlock:;
- (void)setPlayerStartLoopPlayingBlock:;
- (void)setShowLoadingAnimationBlock:;
- (void)setStopLoadingAniamtionBlock:;
- (void)setDidChangePlaybackStateBlock:;
- (void)setTrackSearchVideoPlayTimeBlock:;
- (double)time;
- (void)setPlaybackRate:;
- (BOOL)muted;
- (void)didBecomeActive;
- (void)setIsScrolling:;
- (BOOL)mute;
- (double)volume;
- (void)setTime:;
- (void)setIsActive:;
- (void)dealloc;
- (void)play;
- (id)delegate;
- (double)playbackRate;
- (void)setVolume:;
- (id)progressView;
- (void)willMoveToSuperview:;
- (void)setMuted:;
- (void)didResignActive;
- (id)initWithFrame:;
- (void)setMute:;
- (double)progress;
- (id)transitionContext;
- (id)playerController;
- (void)setProgressView:;
- (void).cxx_destruct;
- (id)videoDuration;
- (BOOL)isScrolling;
- (void)reset;
- (void)setDelegate:;
- (BOOL)isActive;
- (void)layoutSubviews;
- (void)stop;
- (void)pause;
- (void)setProgress:;
- (void)setVideoDuration:;
- (id)coverImage;
- (id)videoPlayerView;
- (long long)playState;
- (void)setPlayState:;
- (void)updateWithModel:;
- (long long)scaleMode;
- (void)setScaleMode:;
- (BOOL)repeat;
- (void)setRepeat:;
- (double)clipDuration;
- (void)setClipDuration:;
- (void)seekToTime:completion:;
- (id)interactionManager;
- (id)guideView;
- (void)setGuideView:;
+ (BOOL)shouldOpenReuse;
+ (BOOL)shouldReuseOptimize;
+ (BOOL)fixCoverBlackError;
@end
