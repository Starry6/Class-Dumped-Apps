@interface AWEAwemeDetailSFPlayletTaskPendantController : AWEAwemeNewDetailBaseController
@property (nonatomic) NSString taskSceneId;
@property (nonatomic) NSArray taskTypeList;
@property (nonatomic) BOOL isShowingBlockView;
@property (nonatomic) BOOL isIncentivePendantShowing;
@property (nonatomic) BOOL isIncentivePendantTimerOn;
@property (nonatomic) BOOL isVideoControllerPause;
@property (nonatomic) UIView<BDUGLuckyCountDownPendantViewProtocol> pendant;
@property (nonatomic) Q hash;
@property (nonatomic) # superclass;
@property (nonatomic) NSString description;
@property (nonatomic) NSString debugDescription;
- (void)cellViewControllerDidRenderFirstFrame:;
- (void)playerWillStartNextLoop:;
- (void)onScrollDidEndWithIndexPath:;
- (void)currentPlayVideoDidChangePlayState:;
- (void)detailCellViewController:awemeModel:playerPlayTime:canPlayTime:totalTime:;
- (void)pendantIsReady;
- (void)pendantWillDestroy;
- (id)pendant;
- (void)setPendant:;
- (void)setupEvent;
- (id)taskSceneId;
- (void)setTaskSceneId:;
- (id)taskTypeList;
- (void)setTaskTypeList:;
- (void)hideIncentivePendant;
- (BOOL)isIncentivePendantTimerOn;
- (void)setIsIncentivePendantTimerOn:;
- (BOOL)shouldShowPlayletIncentivePendant;
- (void)getTaskParams;
- (BOOL)enableClosePendantAndTimerContinue;
- (void)stopIncentivePendantTimer;
- (void)processBlockViewInNoPreviewAwemeModel:;
- (void)startIncentivePendantTimer;
- (BOOL)enableFixTimerBug;
- (void)setIsVideoControllerPause:;
- (void)updateIncentivePendantState:;
- (BOOL)isIncentivePendantShowing;
- (void)processBlockViewInAwemeModel:playTime:;
- (BOOL)enableShowingPendantAndTimerContinue;
- (void)updateIncentivePendantStateFromSearch:;
- (void)updateIncentivePendantStateFromIAATab:;
- (void)showIncentivePendantIfNeeded;
- (void)setIsIncentivePendantShowing:;
- (BOOL)containsPlayletPaidTypeForIncentivePendant:;
- (BOOL)isVideoControllerPause;
- (BOOL)isShowingBlockView;
- (BOOL)hasShownBlockViewToast;
- (void)updateShownBlockViewToastState:;
- (void)updateBlockViewShowingStateIfNeeded:;
- (void)setIsShowingBlockView:;
- (void)viewWillDisappear:;
- (void)dealloc;
- (void)viewDidLoad;
- (void).cxx_destruct;
- (void)viewDidAppear:;
@end
