@interface AWEIMGroupParticipantBizInfoConversationViewModel : NSObject
@property (nonatomic) AWEIMMessageConversation conversation;
@property (nonatomic) NSArray activeTagConfs;
@property (nonatomic) NSObject<OS_dispatch_semaphore> activeTagConfsLock;
@property (nonatomic) {_opaque_pthread_mutex_t=q[56c]} activeTagConfsMutex;
@property (nonatomic) NSObject<OS_dispatch_semaphore> semaphoreLock;
@property (nonatomic) {_opaque_pthread_mutex_t=q[56c]} mutex;
@property (nonatomic) NSArray inactiveThresholdConfs;
@property (nonatomic) NSDictionary fansClubIconConf;
@property (nonatomic) AWEIMGroupParticipantBizInfoDataManager dbManager;
@property (nonatomic) NSMutableDictionary peerViewModelDictM;
@property (nonatomic) NSSet participantsSet;
@property (nonatomic) BOOL isCurrentUserAParticipant;
@property (nonatomic) NSString currentLoginUserSecUid;
@property (nonatomic) BOOL isNotFetchingMoreData;
@property (nonatomic) NSString lastGroupOwnerID;
@property (nonatomic) NSTimer timer;
@property (nonatomic) NSMutableArray waitRequestSecUids;
@property (nonatomic) BOOL hitActiveTagV2;
@property (nonatomic) NSObject<OS_dispatch_queue> serialQueue;
@property (nonatomic) NSDictionary liveFansClubIconConfig;
@property (nonatomic) NSDictionary purchasedFansClubIconConfig;
@property (nonatomic) NSObject<OS_dispatch_queue> concurrentQueue;
@property (nonatomic) Q hash;
@property (nonatomic) # superclass;
@property (nonatomic) NSString description;
@property (nonatomic) NSString debugDescription;
- (BOOL)isCurrentUserAParticipant;
- (void)setIsCurrentUserAParticipant:;
- (id)peerViewModelWithSecUid:;
- (id)activeTagConfs;
- (void)setMutex:;
- (void)participantsDidUpdate;
- (id)semaphoreLock;
- (void)setSemaphoreLock:;
- (id)allPeerViewModelsWithCacheInMemory:;
- (void)updateLiveFansSubscriptionDate;
- (id)allPeerViewModels;
- (id)inactiveThresholdConfs;
- (void)setActiveTagConfsLock:;
- (void)setPeerViewModelDictM:;
- (void)setCurrentLoginUserSecUid:;
- (void)setHitActiveTagV2:;
- (void)p_fetchLastConversationOwnerID;
- (void)p_updateLastConversationOwnerID;
- (void)__tryUpdateAllParticipantsBizInfo;
- (void)p_observerConversationUpdate;
- (BOOL)hitActiveTagV2;
- (void)__updateGroupParticipantSecUids:cid:;
- (void)setLastGroupOwnerID:;
- (id)peerViewModelDictM;
- (id)participantsSet;
- (BOOL)__shouldFetchFansClubData;
- (BOOL)isNotFetchingMoreData;
- (id)waitRequestSecUids;
- (BOOL)__shouldFetchliveFansSubscriptionDateData;
- (BOOL)shouldFetchFansTagsDataSource;
- (id)activeTagConfsLock;
- (id)fansClubIconConf;
- (id)liveFansClubIconConfig;
- (id)purchasedFansClubIconConfig;
- (void)__updateDiffParticipantsMessageActive;
- (void)__deleteAllObjects;
- (void)__prepareParticipantsSet;
- (id)lastGroupOwnerID;
- (BOOL)p_isNeedUpdateForAppVersionChanged;
- (void)__updateAllGroupParticipantInfoWithCid:cursor:repeatCount:;
- (void)__tryUpdateAllParticipantsFansClubInfoWithCid:;
- (void)__tryUpdateAllParticipantsLiveFansSubscriptionDateWithCid:;
- (void)__tryUpdateFansTagsOfAllParticipantsWithCid:;
- (void)__saveActiveList:fansClubList:needCleanOld:;
- (void)setIsNotFetchingMoreData:;
- (void)__updateFansTagsForAllParticipantWithCid:cursor:repeatCount:;
- (void)__saveResult:option:needCleanOld:;
- (void)__updateLiveFansSubscriptionDateWithCid:cursor:repeatCount:;
- (BOOL)__shouldFetchliveFansSubscriptionDateDataFromNetwork;
- (void)p_refreshStoreAppVersion;
- (void)__updateActiveTagConfs:;
- (void)__updateInactiveThresholdConfs:;
- (void)__updateFansClubIconConfs:;
- (void)__updateLiveFansClubIconConfig:;
- (void)__updatePurchasedFansClubIconConfig:;
- (void)setActiveTagConfs:;
- (void)setInactiveThresholdConfs:;
- (void)setFansClubIconConf:;
- (void)setLiveFansClubIconConfig:;
- (void)setPurchasedFansClubIconConfig:;
- (id)currentLoginUserSecUid;
- (void)__recordFansClubLevelForCurrentLoginUserForTrackingPurposeWithLevel:;
- (void)setParticipantsSet:;
- (id)activeTagConfsMutex;
- (void)setActiveTagConfsMutex:;
- (void)setWaitRequestSecUids:;
- (id)concurrentQueue;
- (void)setTimer:;
- (void)dealloc;
- (id)timer;
- (id)serialQueue;
- (void)setSerialQueue:;
- (void)setDbManager:;
- (id)dbManager;
- (void).cxx_destruct;
- (void)timerFired:;
- (id)conversation;
- (id)mutex;
- (void)setConversation:;
- (id)initWithConversation:;
+ (void)__getMessageActiveInfoWithConversation:supportThisFeature:needCleanOldCache:;
@end
