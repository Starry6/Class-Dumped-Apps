@interface AWEFeedSpecialCardManager : NSObject
@property (nonatomic) NSMapTable dispatchControllers;
@property (nonatomic) Q currentVVCount;
@property (nonatomic) Q notShowVVCount;
@property (nonatomic) BOOL isNewNetWorkRequest;
@property (nonatomic) NSDictionary cardManagerConfig;
@property (nonatomic) NSDictionary frequencyControlConfigForRequest;
@property (nonatomic) NSNumber vvLimit;
@property (nonatomic) NSNumber timeHoursLimit;
@property (nonatomic) NSNumber timeHoursLimitCounter;
@property (nonatomic) q lastExemptIndex;
@property (nonatomic) BOOL didShow;
@property (nonatomic) NSMutableDictionary currentFeedCounts;
@property (nonatomic) NSMutableDictionary otherFeedControlModels;
@property (nonatomic) double lastShowTime;
- (void)setDidShow:;
- (void)setLastShowTime:;
- (double)lastShowTime;
- (BOOL)shouldCancelInsertCardForReversalWithType:;
- (BOOL)isFeedSpecialCardShowStrategyEnableWithType:;
- (BOOL)isFeedSpecialCardShowStrategyEnableWithReferString:;
- (BOOL)canBeExemptForShowStrategyWithSourceFromDataList:index:cardName:;
- (BOOL)judgeCanBeExemptForShowStrategyWithSourceFromDataList:index:;
- (BOOL)judgeCanBeExemptForShowStrategyWithSourceFromDataList:index:cardName:;
- (void)didExemptForShowStrategyWithSourceFromDataList:index:model:;
- (id)feedCardFrequencyControlParams;
- (void)trackFeedCardActionButtonClicked:enterFrom:enterMethod:extraDict:;
- (void)trackFeedCardDislikeButtonClicked:enterFrom:enterMethod:extraDict:;
- (void)setDispatchControllers:;
- (void)setCurrentFeedCounts:;
- (void)setCurrentVVCount:;
- (id)otherFeedControlModels;
- (id)referStringForAwemeType:;
- (unsigned long long)currentVVCount;
- (void)setNotShowVVCount:;
- (void)setIsNewNetWorkRequest:;
- (BOOL)isFeedSpecialCardReverseEnable;
- (BOOL)shouldOtherFeedCancelInsertCardForReversalWithType:;
- (BOOL)feedCardTemplate_shouldCancelInsertCardForReversalWithType:;
- (BOOL)feedCardTemplate_isFeedSpecialCardShowStrategyEnableWithType:;
- (BOOL)feedCardTemplate_canBeExemptForShowStrategyWithSourceFromDataList:index:model:cardName:awemeType:;
- (BOOL)isFeedSpecialCardShowStrategyEnable;
- (id)cardTypeCanBeExemptOfTime;
- (id)frequencyControlConfigForRequest;
- (BOOL)canBeExemptForShowStrategyWithSourceFromDataList:index:model:cardName:;
- (BOOL)judgeCanBeExemptForShowStrategyWithSourceFromDataList:dataSource:index:model:cardName:trackEvent:;
- (BOOL)otherFeedCanBeExemptForShowStrategyWithSourceFromDataList:index:model:cardName:awemeType:;
- (BOOL)otherFeedJudgeCanBeExemptForShowStrategyWithSourceFromDataList:dataSource:index:model:cardName:trackEvent:awemeType:;
- (void)otherFeedDidExemptForShowStrategyWithSourceFromDataList:index:model:awemeType:;
- (BOOL)canBeExemptOfVVForShowStrategyWithSourceFromDataList:index:;
- (BOOL)canBeExemptOfTimeForShowStrategy;
- (void)trackCardFrequencyControlForVV:forTime:cardName:model:enterFrom:;
- (long long)lastExemptIndex;
- (unsigned long long)notShowVVCount;
- (id)vvLimit;
- (id)timeHoursLimit;
- (id)timeHoursLimitCounter;
- (void)didExemptOfVVForShowStrategyWithSourceFromDataList:index:;
- (void)didExemptOfTimeForShowStrategyWithModel:;
- (void)setLastExemptIndex:;
- (BOOL)otherFeedDeleteLastShowStrategyRecordWithAwemeID:awemeType:;
- (BOOL)isOtherFeedSpecialCardShowStrategyEnable:;
- (BOOL)otherFeedCanBeExemptOfVVForShowStrategyWithSourceFromDataList:index:awemeType:;
- (BOOL)otherFeedCanBeExemptOfTimeForShowStrategyWithType:;
- (void)otherFeedDidExemptOfVVForShowStrategyWithSourceFromDataList:index:awemeType:;
- (void)otherFeedDidExemptOfTimeForShowStrategyWithModel:awemeType:;
- (id)dispatchControllers;
- (id)currentFeedCounts;
- (id)feedCardTemplateCommonParams:businessID:enterFrom:;
- (void)setCurrentVVCount:awemeType:;
- (unsigned long long)getCurrentVVCountWithAwemeType:;
- (void)setNotShowVVCount:awemeType:;
- (void)setIsNewNetWorkRequest:awemeType:;
- (long long)frequencyControlTypeForFeedTemplateCard:index:awemeType:;
- (BOOL)judgeCanBeExemptForShowStrategyWithSourceFromDataList:dataSource:index:model:cardName:;
- (BOOL)feedCardTemplate_judgeCanBeExemptForShowStrategyWithSourceFromDataList:dataSource:index:model:cardName:awemeType:;
- (void)feedCardTemplate_didExemptForShowStrategyWithSourceFromDataList:index:model:awemeType:;
- (BOOL)deleteLastShowStrategyRecordWithAwemeID:awemeType:;
- (void)markLastShowCard:awemeType:;
- (BOOL)isValidSpecialCardTemplateWithModel:withAwemeType:;
- (void)setCurrentFeedCount:awemeType:;
- (long long)getCurrentFeedCountWithAwemeType:;
- (double)lastShowCardTimeInterval;
- (long long)lastShowCardTimeCount;
- (void)registerCardDispatchController:withAwemeType:;
- (BOOL)callShouldCancelInsertCardForBusinessID:withAweme:isFromFeed:willInsertForRowAtIndexPath:withAwemeType:;
- (void)callCardDidInsertForBusinessID:withAweme:isFromFeed:forRowAtIndexPath:withAwemeType:;
- (void)callCardFrequencyControlForBusinessID:withAweme:isFromFeed:withAwemeType:frequencyControlType:;
- (void)callCardReceiveForBusinessID:withAweme:enterFrom:withAwemeType:;
- (void)trackSubscribePanelShow:enterFrom:enterType:panelType:extraDict:;
- (void)trackSubscribePanelClick:enterFrom:enterType:panelType:enterMethod:extraDict:;
- (void)trackFeedCardTemplateInsert:insertType:enterFrom:;
- (void)trackFeedCardTemplateDelete:deleteType:enterFrom:;
- (void)trackFeedCardTemplateFetch:enterFrom:;
- (void)trackFeedCardTemplateGetCard:enterFrom:;
- (void)trackFeedCardTemplateBulletLoadStatus:loadStatus:enterFrom:;
- (void)trackFeedCardTemplateLynxLoadResult:loadResult:errorCode:errorMsg:enterFrom:;
- (void)trackFeedBulletGetCard:enterFrom:;
- (void)trackFeedCardTemplateFilter:businessID:reason:enterFrom:;
- (BOOL)isNewNetWorkRequest;
- (id)cardManagerConfig;
- (void)setCardManagerConfig:;
- (void)setFrequencyControlConfigForRequest:;
- (void)setVvLimit:;
- (void)setTimeHoursLimit:;
- (void)setTimeHoursLimitCounter:;
- (void)setOtherFeedControlModels:;
- (void).cxx_destruct;
- (BOOL)didShow;
+ (id)shareInstance;
@end
