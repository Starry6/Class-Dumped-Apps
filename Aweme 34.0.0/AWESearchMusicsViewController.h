@interface AWESearchMusicsViewController : AWESearchBaseViewController
@property (nonatomic) BOOL isPullToRefresh;
@property (nonatomic) BOOL isLoadingMore;
@property (nonatomic) BOOL isRefreshing;
@property (nonatomic) BOOL searched;
@property (nonatomic) AWEAVPlayerWrapper audioPlayer;
@property (nonatomic) AWEMusicModel playingMusic;
@property (nonatomic) BOOL isDownloadingMusic;
@property (nonatomic) NSIndexPath selectedIndexPath;
@property (nonatomic) BOOL hasShownFeedbackFooter;
@property (nonatomic) BOOL loadmoreRecording;
@property (nonatomic) NSString insertDateString;
@property (nonatomic) AWESearchMusicSortTabViewCellContentView hangingView;
@property (nonatomic) UIView hangingViewSuper;
@property (nonatomic) BOOL hangingViewOnSuper;
@property (nonatomic) BOOL iStopBySelectMusic;
@property (nonatomic) AWESearchMusicListenMusicPlayerManager listenMusicPlayerManager;
@property (nonatomic) AWESearchMusicsManager manager;
@property (nonatomic) <AWESearchMusicsPlayerDelegate> playerDelegate;
@property (nonatomic) BOOL isAuthorMusicSearch;
@property (nonatomic) NSNumber authorMusicSearchOrder;
@property (nonatomic) Q hash;
@property (nonatomic) # superclass;
@property (nonatomic) NSString description;
@property (nonatomic) NSString debugDescription;
- (id)enterFrom;
- (id)playerDelegate;
- (void)setPlayerDelegate:;
- (BOOL)btm_autoManaged;
- (id)btm_pageIdentifier;
- (id)tabConfig;
- (BOOL)isLoadingMore;
- (void)setIsLoadingMore:;
- (void)backBtnClicked;
- (id)currentTimeStr;
- (void)lynxAnimationStartWithNotification:;
- (void)setPlayingMusic:;
- (id)playingMusic;
- (void)playerWrapper:didChangePlayStatus:;
- (void)clickWithURL:;
- (id)searchEnterMethod;
- (void)loadMoreMusicWithCompletion:;
- (void)didSelectMusicAtIndexPath:;
- (id)getCurrentSearchId;
- (void)fetchDataWithKeyWord:enterFrom:extraLogParams:isSearchByUserClick:animated:completion:;
- (id)getCurrentLogId;
- (void)p_performanceHandleScrollWillBegin;
- (void)p_performanceHandleScrollDidEnd;
- (id)p_searchPageScrollFpsSceneName;
- (BOOL)shouldSkipFetchWithKeyWord:animated:;
- (BOOL)isPullToRefresh;
- (void)setIsPullToRefresh:;
- (void)showBlankView;
- (id)p_searchPageScrollFpsExtraData;
- (void)loadMoreRecommendMusic;
- (BOOL)loadmoreRecording;
- (void)setLoadmoreRecording:;
- (void)setHasShownFeedbackFooter:;
- (void)setIsDownloadingMusic:;
- (BOOL)isIndexPathValid:;
- (void)cancelAudioPlay;
- (void)configureAudio;
- (BOOL)isDownloadingMusic;
- (void)audioPlayMusicWithModel:;
- (void)setBeforeBuildRefreshRequestBlock:;
- (void)configureTableView;
- (void)configureDisplayEventDataWithIndexPath:;
- (void)trackerForSearchDisplay:refreshLoadTime:;
- (void)configureTableHeaderView:;
- (void)AWESearchDynamicTableViewCell:didUpdateContentSize:;
- (void)resetPlayerInfo:;
- (BOOL)checkIfExistCurrentLunaInfo:;
- (void)addingPlayerInfoArrWithModel:;
- (id)listenMusicPlayerManager;
- (BOOL)iStopBySelectMusic;
- (void)updateFooterHeight;
- (void)resetInset;
- (void)fetchSearchMusic;
- (void)setIStopBySelectMusic:;
- (void)setupLoadmoreFooter;
- (void)trackPlayAllClickEvent:;
- (void)openLunaPlayerWithSongId:trackParams:;
- (void)stopLunaPlayer;
- (void)loadMoreMusicArrWithCompletion:;
- (void)bottomPlayerWillShowWithHeight:;
- (void)bottomPlayerWillDismissWithHeight:;
- (void)listenMusicMode;
- (void)selectMusicMode;
- (void)isSelectedWithCompletion:extraInfo:;
- (BOOL)isAuthorMusicSearch;
- (void)setIsAuthorMusicSearch:;
- (id)authorMusicSearchOrder;
- (void)setAuthorMusicSearchOrder:;
- (void)setListenMusicPlayerManager:;
- (void)cancelAudioPlay:;
- (BOOL)isShowOnGeneralSearch;
- (id)hangingView;
- (void)loadMusic;
- (id)trackMusicTagDicWithTagList:;
- (void)trackDisplayEventForMusicAtIndexPath:;
- (BOOL)searched;
- (void)cancelPlayState;
- (BOOL)hangingViewOnSuper;
- (id)hangingViewSuper;
- (void)setHangingView:;
- (void)setHangingViewSuper:;
- (void)setHangingViewOnSuper:;
- (void)recalculateHangingViewPosition;
- (id)orderForIndexPath:;
- (void)setSearched:;
- (void)setInsertDateString:;
- (id)insertDateString;
- (void)insertMusicsToTableViewWith:completion:;
- (void)addNewMusicWithArray:error:completion:;
- (BOOL)hasShownFeedbackFooter;
- (void)fetchRecommendMusic;
- (void)viewWillDisappear:;
- (id)tableView:cellForRowAtIndexPath:;
- (void)fetchData;
- (void)setManager:;
- (long long)tableView:numberOfRowsInSection:;
- (id)init;
- (BOOL)isRefreshing;
- (void)dealloc;
- (void)tableView:willDisplayCell:forRowAtIndexPath:;
- (void)viewDidLayoutSubviews;
- (void)tableView:didSelectRowAtIndexPath:;
- (void)viewDidLoad;
- (id)manager;
- (void)viewDidDisappear:;
- (void)scrollViewDidScroll:;
- (void)scrollViewWillBeginDragging:;
- (void)scrollViewDidEndDecelerating:;
- (void)viewWillAppear:;
- (void)setAudioPlayer:;
- (void).cxx_destruct;
- (double)tableView:heightForRowAtIndexPath:;
- (id)audioPlayer;
- (void)viewDidAppear:;
- (void)scrollViewDidEndDragging:willDecelerate:;
- (void)reset;
- (void)tableView:didEndDisplayingCell:forRowAtIndexPath:;
- (id)selectedIndexPath;
- (void)setSelectedIndexPath:;
- (void)setIsRefreshing:;
+ (long long)dispatchStrategy;
+ (void)preprocessModel:;
+ (double)maxAccumulatedHeight;
+ (long long)loopDispatchSize;
+ (BOOL)enableMusicLoadMoreLoading;
@end
