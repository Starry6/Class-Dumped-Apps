@interface AWEIMUser : NSObject
@property (nonatomic) BOOL aweuemvc_isEmptyData;
@property (nonatomic) NSString alias;
@property (nonatomic) q lastInsertedRowID;
@property (nonatomic) BOOL isAutoIncrement;
@property (nonatomic) Q hash;
@property (nonatomic) # superclass;
@property (nonatomic) NSString description;
@property (nonatomic) NSString debugDescription;
@property (nonatomic) NSString alias;
@property (nonatomic) Q searchUserType;
@property (nonatomic) {_NSRange=QQ} matchRange;
@property (nonatomic) double lastUpdateTimeFromNet;
@property (nonatomic) {_NSRange=QQ} attributeNicknameRange;
@property (nonatomic) NSArray lastRawConfigAvatarURLArray;
@property (nonatomic) NSString alias;
@property (nonatomic) NSObject<OS_dispatch_semaphore> lock;
@property (nonatomic) BOOL nicknameValid;
@property (nonatomic) BOOL aliasValid;
@property (nonatomic) BOOL signatureValid;
@property (nonatomic) BOOL contactNameValid;
@property (nonatomic) BOOL isCompanyProfileNew;
@property (nonatomic) NSString uid;
@property (nonatomic) NSString nickname;
@property (nonatomic) NSString signature;
@property (nonatomic) NSString customID;
@property (nonatomic) NSString customVerifyInfo;
@property (nonatomic) NSString weiboVerifyInfo;
@property (nonatomic) AWEUserAccountCertInfoModel accountCertInfo;
@property (nonatomic) Q verificationType;
@property (nonatomic) NSString enterpriseVerifyInfo;
@property (nonatomic) NSArray userPermissions;
@property (nonatomic) q formatOwnerUserIDInt;
@property (nonatomic) q formatIDInt;
@property (nonatomic) BOOL formatIsShowBOOL;
@property (nonatomic) q formatDigitalIDInt;
@property (nonatomic) q formatImBotIdInt;
@property (nonatomic) q formatTeamTypeInt;
@property (nonatomic) NSString formatOwnerNickName;
@property (nonatomic) q mateAddPermission;
@property (nonatomic) NSInteger mateStatus;
@property (nonatomic) NSInteger mateApplyForward;
@property (nonatomic) NSInteger mateApplyReverse;
@property (nonatomic) NSString aiSignature;
@property (nonatomic) q aiSingleChatSwitch;
@property (nonatomic) q socialRelationType;
@property (nonatomic) q socialRelationSubType;
@property (nonatomic) BOOL hasEAccountRole;
@property (nonatomic) q latestChatTimestamp;
@property (nonatomic) q followStatus;
@property (nonatomic) q closeFriendsStatus;
@property (nonatomic) q followerStatus;
@property (nonatomic) q blockStatus;
@property (nonatomic) q hideHerPostStatus;
@property (nonatomic) NSString shortID;
@property (nonatomic) NSNumber commerceUserLevel;
@property (nonatomic) NSString secUserID;
@property (nonatomic) NSString contactName;
@property (nonatomic) Q mtShareable;
@property (nonatomic) Q recType;
@property (nonatomic) q lastUpdateTimestamp;
@property (nonatomic) NSString liveSPName;
@property (nonatomic) NSString liveSPAvatar;
@property (nonatomic) NSString avatarSmallStrUrl;
@property (nonatomic) NSArray avatarStrUrls;
@property (nonatomic) BOOL imageSendExempt;
@property (nonatomic) NSString roleTagStr;
@property (nonatomic) NSArray commerceInfoList;
@property (nonatomic) q gender;
@property (nonatomic) NSArray roleIDs;
@property (nonatomic) NSString aiCloneSecUid;
@property (nonatomic) NSString aiCloneBelongToSecUid;
@property (nonatomic) q insertFrom;
@property (nonatomic) q imActiveness;
@property (nonatomic) BOOL isIMOverseaUser;
@property (nonatomic) BOOL isTop;
@property (nonatomic) NSURL avatarURL;
@property (nonatomic) NSURL avatarURLSmall;
@property (nonatomic) NSURL loadedAvatarURL;
@property (nonatomic) NSArray avatarURLList;
@property (nonatomic) NSArray mediumAvatarURLList;
@property (nonatomic) Q showGenderStrategy;
@property (nonatomic) NSString groupAlias;
@property (nonatomic) NSString requestID;
@property (nonatomic) NSNumber isToCommerceUser;
@property (nonatomic) NSString recommendReason;
@property (nonatomic) NSString recommendReasonRelation;
@property (nonatomic) NSArray personalTagList;
@property (nonatomic) NSNumber isBlocked;
@property (nonatomic) q dataFrom;
@property (nonatomic) BOOL privateAccount;
@property (nonatomic) q age;
@property (nonatomic) NSString location;
@property (nonatomic) NSNumber hideLocation;
@property (nonatomic) NSString schoolName;
@property (nonatomic) NSNumber schoolVisibleType;
@property (nonatomic) NSDictionary logPassback;
@property (nonatomic) NSNumber favoritedCount;
@property (nonatomic) NSNumber displayedFollowerCount;
@property (nonatomic) NSNumber followingCount;
@property (nonatomic) NSString verificationDescription;
@property (nonatomic) NSString verifiedIconName;
@property (nonatomic) q hideMyPostStatus;
@property (nonatomic) NSNumber canShowGroupCard;
@property (nonatomic) NSNumber blockedStatus;
@property (nonatomic) AWEUserCommercePermissionModel commercePermission;
@property (nonatomic) NSString enterpriseUserInfo;
@property (nonatomic) NSNumber enableWish;
@property (nonatomic) AWEURLModel avatarLarger;
@property (nonatomic) NSString pigeonStatusStr;
@property (nonatomic) AWERecommendTemplateModel recommendTemplate;
@property (nonatomic) AFDRecommendReasonDataModel recommendReasonDataModel;
@property (nonatomic) NSNumber didImRealNameRebound;
@property (nonatomic) AWEURLModel avatarMedium;
@property (nonatomic) NSString pigeonDarenCustomerServiceWarning;
@property (nonatomic) NSNumber imPrimaryRoleID;
@property (nonatomic) BOOL commerceCustomActionBarEnabled;
@property (nonatomic) <AWEIMPinYinSearchProtocol> aliasPinYinSearchObj;
@property (nonatomic) <AWEIMPinYinSearchProtocol> nicknamePinYinSearchObj;
@property (nonatomic) <AWEIMPinYinSearchProtocol> contactNamePinYinSearchObj;
@property (nonatomic) <AWEIMPinYinSearchProtocol> groupAliasPinYinSearchObj;
@property (nonatomic) NSNumber hasVirtualAvatar;
@property (nonatomic) NSNumber taIsFriendSwitchStatus;
@property (nonatomic) NSString labelSting;
@property (nonatomic) q followStatusErrorCode;
@property (nonatomic) q mateStatusErrorCode;
@property (nonatomic) NSArray userTagInfo;
@property (nonatomic) BOOL isRedPhoneNumber;
@property (nonatomic) NSString phoneNumber;
@property (nonatomic) Q hash;
@property (nonatomic) # superclass;
@property (nonatomic) NSString description;
@property (nonatomic) NSString debugDescription;
- (id)shortID;
- (id)secUserID;
- (void)setSecUserID:;
- (long long)followStatus;
- (long long)blockStatus;
- (id)avatarMedium;
- (long long)relationTag;
- (id)logPassback;
- (void)setLogPassback:;
- (id)avatarURL;
- (void)setFollowStatus:;
- (long long)hideHerPostStatus;
- (void)setHideHerPostStatus:;
- (void)setBlockStatus:;
- (id)blockedStatus;
- (void)setBlockedStatus:;
- (BOOL)privateAccount;
- (BOOL)isCompanyProfile;
- (id)enterpriseUserInfo;
- (long long)followerStatus;
- (void)setAvatarURLList:;
- (id)accountCertInfo;
- (id)displayedFollowerCount;
- (void)setImActiveness:;
- (id)taIsFriendSwitchStatus;
- (void)setTaIsFriendSwitchStatus:;
- (id)initWithAweUser:;
- (void)setGroupAlias:;
- (id)avatarSmallStrUrl;
- (id)roleIDs;
- (BOOL)isNewBizAccount;
- (id)avatarURLSmall;
- (void)setAvatarMedium:;
- (void)setFollowerStatus:;
- (id)getAwemeUser;
- (long long)dataFrom;
- (void)setDataFrom:;
- (void)setRecommendReason:;
- (id)recommendReason;
- (int)mateApplyForward;
- (void)setAccountCertInfo:;
- (int)mateStatus;
- (BOOL)isSilverWingChatBot;
- (BOOL)isLiveWindowDaren;
- (id)followingCount;
- (void)setShortID:;
- (id)recommendTemplate;
- (void)setRecommendTemplate:;
- (BOOL)isRedPhoneNumber;
- (void)setIsRedPhoneNumber:;
- (id)avatarLarger;
- (id)hideLocation;
- (id)commerceUserLevel;
- (id)recommendReasonRelation;
- (unsigned long long)showGenderStrategy;
- (long long)mateAddPermission;
- (id)hasVirtualAvatar;
- (id)avatarURLList;
- (id)favoritedCount;
- (BOOL)isVerifiedEnterprise;
- (id)aliasPinYinSearchObj;
- (void)setSearchUserType:;
- (id)nicknamePinYinSearchObj;
- (id)contactNamePinYinSearchObj;
- (id)fakeUserID;
- (void)setInsertFrom:;
- (void)setIsTop:;
- (id)canShowGroupCard;
- (long long)hideMyPostStatus;
- (void)setHideMyPostStatus:;
- (unsigned long long)searchUserType;
- (id)recommendReasonDataModel;
- (id)customVerifyInfo;
- (void)setCustomVerifyInfo:;
- (id)commercePermission;
- (id)customID;
- (void)setFormatTeamTypeInt:;
- (long long)formatIDInt;
- (BOOL)formatIsShowBOOL;
- (long long)formatTeamTypeInt;
- (BOOL)isVerifiedMusician;
- (BOOL)isPersonalVerifiedEffectArtist;
- (void)setHasVirtualAvatar:;
- (id)avatarStrUrls;
- (void)setMateAddPermission:;
- (void)setRecommendReasonDataModel:;
- (id)verificationDescription;
- (id)schoolVisibleType;
- (id)verifiedIconName;
- (void)setHideLocation:;
- (id)mediumAvatarURLList;
- (void)setDisplayedFollowerCount:;
- (id)personalTagList;
- (void)setPersonalTagList:;
- (id)keyForPlaceholder;
- (id)enterpriseRoleId;
- (long long)imStrategyMateStatus;
- (id)gnp_groupAliasAccordingToConversation:;
- (BOOL)imageSendExempt;
- (long long)socialRelationSubType;
- (BOOL)isEmotionAIBot;
- (id)gnp_displayNameAccordingToIESIMConversation:;
- (id)gnp_displayNameAccordingToConversationID:;
- (BOOL)isAboveNormalPlusCompanyProfile;
- (id)groupAlias;
- (id)aiCloneBelongToSecUid;
- (BOOL)isFormat;
- (id)formatOwnerNickName;
- (void)setFormatIDInt:;
- (void)setFormatOwnerUserIDInt:;
- (id)liveSPName;
- (id)enableWish;
- (id)labelSting;
- (id)roleTagStr;
- (BOOL)isPigeonKeyUser;
- (id)gnp_displayNameAccordingToConversation:;
- (BOOL)shouldFilterInSearch;
- (BOOL)canShowFormat;
- (id)liveSPAvatar;
- (BOOL)isVerifiedUser;
- (void)setMateStatus:;
- (void)setMateApplyForward:;
- (int)mateApplyReverse;
- (void)setMateApplyReverse:;
- (long long)formatOwnerUserIDInt;
- (BOOL)isIMOverseaUser;
- (id)enterpriseVerifyInfo;
- (void)setEnterpriseVerifyInfo:;
- (void)setCustomID:;
- (long long)closeFriendsStatus;
- (void)setCloseFriendsStatus:;
- (void)updateAlias:;
- (void)updatePrivateAccount:;
- (void)configAvatarURLWithArray:;
- (BOOL)aweuemvc_isEmptyData;
- (void)setAweuemvc_isEmptyData:;
- (void)setAvatarLarger:;
- (id)userPermissions;
- (id)pigeonStatusStr;
- (id)pigeonDarenCustomerServiceWarning;
- (unsigned long long)recType;
- (void)setRecType:;
- (void)setRecommendReasonRelation:;
- (void)setEnableWish:;
- (void)setCommercePermission:;
- (void)setEnterpriseUserInfo:;
- (void)setCommerceUserLevel:;
- (void)setUserPermissions:;
- (void)setCanShowGroupCard:;
- (long long)aiSingleChatSwitch;
- (void)setAiSingleChatSwitch:;
- (id)didImRealNameRebound;
- (void)setDidImRealNameRebound:;
- (void)setPigeonStatusStr:;
- (void)setPigeonDarenCustomerServiceWarning:;
- (void)setIsIMOverseaUser:;
- (void)setImageSendExempt:;
- (void)setRoleTagStr:;
- (id)commerceInfoList;
- (void)setCommerceInfoList:;
- (long long)imActiveness;
- (long long)socialRelationType;
- (id)weiboVerifyInfo;
- (long long)latestChatTimestamp;
- (unsigned long long)mtShareable;
- (long long)formatDigitalIDInt;
- (long long)formatImBotIdInt;
- (id)aiSignature;
- (id)aiCloneSecUid;
- (long long)insertFrom;
- (long long)followStatusErrorCode;
- (long long)mateStatusErrorCode;
- (void)setAvatarStrUrls:;
- (id)yellowVIdentify;
- (id)awe_relationType;
- (BOOL)commerceCustomActionBarEnabled;
- (id)userTagInfo;
- (void)awe_assignIMUser:;
- (id)loadedAvatarURL;
- (BOOL)bdc_isFromRecentContact;
- (BOOL)isLocalLifeDaren;
- (void)setLatestChatTimestamp:;
- (void)setFormatIsShowBOOL:;
- (void)setFormatDigitalIDInt:;
- (void)setFormatImBotIdInt:;
- (void)setAiSignature:;
- (void)setFormatOwnerNickName:;
- (void)configSmallAvatarURLWithArray:;
- (id)gnp_groupAliasAccordingToConversationID:;
- (double)lastUpdateTimeFromNet;
- (void)setLastUpdateTimeFromNet:;
- (id)mergeMemoryPropertyFromLocalUser:disableMergeArray:;
- (id)um_displayName:;
- (id)groupAliasPinYinSearchObj;
- (id)isToCommerceUser;
- (void)setIsToCommerceUser:;
- (void)setAvatarURLSmall:;
- (id)attributeNicknameRange;
- (void)setAttributeNicknameRange:;
- (void)extraInit;
- (BOOL)isCompanyProfileNew;
- (BOOL)hasEAccountRole;
- (void)setSocialRelationType:;
- (void)setSocialRelationSubType:;
- (void)setWeiboVerifyInfo:;
- (void)setMtShareable:;
- (void)setAvatarSmallStrUrl:;
- (void)setLiveSPName:;
- (void)setLiveSPAvatar:;
- (void)setIsCompanyProfileNew:;
- (void)setHasEAccountRole:;
- (void)setRoleIDs:;
- (void)setAiCloneSecUid:;
- (void)setAiCloneBelongToSecUid:;
- (long long)p_ageWithAweUser:;
- (id)p_locationStringFromAweUser:;
- (void)configMediumAvatarURLWithArray:;
- (id)p_getURLDict;
- (unsigned long long)getHowOldFromBirthday:;
- (void)p_trackAvatarUrlError:from:;
- (id)p_locationDisplayTextWithCountryCode:country:province:city:district:location:;
- (void)p_appendLocationSegment:toDisplayText:;
- (void)setLoadedAvatarURL:;
- (void)setMediumAvatarURLList:;
- (id)imPrimaryRoleID;
- (void)setImPrimaryRoleID:;
- (void)setCommerceCustomActionBarEnabled:;
- (void)setLabelSting:;
- (void)setFollowStatusErrorCode:;
- (void)setMateStatusErrorCode:;
- (void)setUserTagInfo:;
- (void)configHogwartsInfoWithUserInfo:;
- (void)clearUserDisplayInfo;
- (BOOL)isCommerceProfile;
- (id)lastRawConfigAvatarURLArray;
- (void)setLastRawConfigAvatarURLArray:;
- (BOOL)nicknameValid;
- (void)setNicknameValid:;
- (BOOL)aliasValid;
- (void)setAliasValid:;
- (BOOL)signatureValid;
- (void)setSignatureValid:;
- (BOOL)contactNameValid;
- (void)setContactNameValid:;
- (void)setBdc_isFromRecentContact:;
- (id)isBlocked;
- (id)signature;
- (id)nickname;
- (void)setSignature:;
- (void)setUid:;
- (id)alias;
- (id)init;
- (unsigned long long)hash;
- (id)displayName;
- (id)requestID;
- (id)location;
- (void)setLock:;
- (id)uid;
- (void)setRequestID:;
- (void)setGender:;
- (void)encodeWithCoder:;
- (void)setLocation:;
- (id)lock;
- (id)contactName;
- (id)phoneNumber;
- (long long)age;
- (void)setPhoneNumber:;
- (long long)gender;
- (void).cxx_destruct;
- (void)setAge:;
- (void)setValue:forUndefinedKey:;
- (BOOL)isEqual:;
- (void)setAlias:;
- (void)setNickname:;
- (id)valueForUndefinedKey:;
- (id)initWithCoder:;
- (id)copyWithZone:;
- (void)setIsBlocked:;
- (void)setVerificationType:;
- (unsigned long long)verificationType;
- (void)setContactName:;
- (BOOL)isTop;
- (long long)lastUpdateTimestamp;
- (void)setLastUpdateTimestamp:;
- (id)schoolName;
- (id)matchRange;
- (void)setMatchRange:;
+ (id)shortID;
+ (id)secUserID;
+ (id)followStatus;
+ (id)blockStatus;
+ (id)hideHerPostStatus;
+ (id)followerStatus;
+ (id)accountCertInfo;
+ (id)avatarSmallStrUrl;
+ (id)roleIDs;
+ (id)mateApplyForward;
+ (id)mateStatus;
+ (id)objectRelationalMappingForWCDB;
+ (id)AllProperties;
+ (id)AnyProperty;
+ (id)PropertyNamed;
+ (id)commerceUserLevel;
+ (id)mateAddPermission;
+ (id)customVerifyInfo;
+ (id)customID;
+ (id)formatIDInt;
+ (id)formatIsShowBOOL;
+ (id)formatTeamTypeInt;
+ (id)avatarStrUrls;
+ (id)convertUserRoleToDescribeWithRole:;
+ (id)imageSendExempt;
+ (id)socialRelationSubType;
+ (id)aiCloneBelongToSecUid;
+ (id)formatOwnerNickName;
+ (id)liveSPName;
+ (id)createUserWithJsonDictionary:;
+ (id)roleTagStr;
+ (id)liveSPAvatar;
+ (id)mateApplyReverse;
+ (id)formatOwnerUserIDInt;
+ (id)isIMOverseaUser;
+ (id)enterpriseVerifyInfo;
+ (id)closeFriendsStatus;
+ (id)userPermissions;
+ (id)recType;
+ (id)aiSingleChatSwitch;
+ (id)imActiveness;
+ (id)socialRelationType;
+ (id)weiboVerifyInfo;
+ (id)latestChatTimestamp;
+ (id)mtShareable;
+ (id)formatDigitalIDInt;
+ (id)formatImBotIdInt;
+ (id)aiSignature;
+ (id)aiCloneSecUid;
+ (id)insertFrom;
+ (id)gnp_displayNameAccordingToConversationID:uid:scene:;
+ (id)groupAliasWithUid:conversationID:;
+ (id)groupAliasWithUid:conversation:;
+ (id)commercePermissionModelFromDict:;
+ (id)signature;
+ (id)nickname;
+ (id)alias;
+ (id)tableName;
+ (id)uid;
+ (id)contactName;
+ (id)gender;
+ (id)verificationType;
+ (id)lastUpdateTimestamp;
@end
