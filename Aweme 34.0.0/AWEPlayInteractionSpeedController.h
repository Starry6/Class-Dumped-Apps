@interface AWEPlayInteractionSpeedController : AWEPlayInteractionBaseController
@property (nonatomic) BOOL ifSlideHorizontally;
@property (nonatomic) UILongPressGestureRecognizer longPressFastSpeedGesture;
@property (nonatomic) UIView<AFDFastSpeedViewProtocol> longPressFastSpeedView;
@property (nonatomic) double speedBeforeLongPress;
@property (nonatomic) NSString enterMethodBeforeLongPress;
@property (nonatomic) {CGPoint=dd} tappedPointWhenLongPressStart;
@property (nonatomic) {CGPoint=dd} tappedPointWhenLongPressEnd;
@property (nonatomic) BOOL disableFastSpeed;
@property (nonatomic) {CGPoint=dd} tappedPoint;
@property (nonatomic) NSTimer timer;
@property (nonatomic) BOOL longPressTimeExceeded;
@property (nonatomic) BOOL isInMockPureMode;
@property (nonatomic) Q enterMockViewMethod;
@property (nonatomic) BOOL shouldUpdateSpeedAfterFastSpeedEnd;
@property (nonatomic) BOOL isAppearing;
@property (nonatomic) <AWEFeedSpeedTopCapsuleViewProtocol> speedCapsuleController;
@property (nonatomic) BOOL isShake;
@property (nonatomic) BOOL isCanLock;
@property (nonatomic) NSDate touchStartTime;
@property (nonatomic) BOOL isSwipeDown;
@property (nonatomic) BOOL isBeingGuided;
@property (nonatomic) Q speedVerticalType;
@property (nonatomic) BOOL alreadyTriggerSpeed;
@property (nonatomic) NSString longPressSpeedNextEnterMethod;
@property (nonatomic) double fastSpeedStartTimestamp;
@property (nonatomic) double firstTriggerSpeedTimestamp;
@property (nonatomic) double firstTriggerProgressTimestamp;
@property (nonatomic) UILongPressGestureRecognizer realGesture;
@property (nonatomic) Q hash;
@property (nonatomic) # superclass;
@property (nonatomic) NSString description;
@property (nonatomic) NSString debugDescription;
@property (nonatomic) q gestureFrom;
- (id)playVideoViewController;
- (id)aAWEPadModuleAdapter;
- (BOOL)isSlidingVertically;
- (void)onPlayerPlay:ifPlay:;
- (void)setContainerHidden:;
- (id)aAWEPadSplitScreenAdapter;
- (id)aAWEPlayInteractionAdapter;
- (void)rotated:;
- (double)longPressFastSpeedValue;
- (id)contentTypeWithModel:;
- (id)longPressFastSpeedGesture;
- (void)setUpEvent;
- (void)handleShowLockHotAreaViewNotification:;
- (id)longPressFastSpeedView;
- (void)triggerForAlbumFastPlay;
- (void)setRealGesture:;
- (void)handleGestureBegin:;
- (BOOL)canShowLockSpeed;
- (BOOL)shouldLockSpeedFixedArea;
- (id)realGesture;
- (BOOL)shouldContainsPointInLongPressLocked:;
- (id)tappedPointWhenLongPressStart;
- (void)hideSwipeDownGuideViewIfNeeded;
- (void)handleLongPressLockedDoubleSpeedChanged:gesture:;
- (void)handleLongPressFastSpeedEnd:;
- (void)setSpeedBeforeLongPress:;
- (void)setTappedPointWhenLongPressStart:;
- (void)trackSpeedModePlayTimeWithLongPressStart:;
- (void)setTappedPointWhenLongPressEnd:;
- (void)trackLongPressChangeSpeedMode:model:params:;
- (double)speedBeforeLongPress;
- (void)setLongPressSpeedShowText;
- (void)showSwipeDownGuideViewIfNeeded;
- (BOOL)shouldShowLockedDoubleSpeed;
- (void)setIsCanLock:;
- (void)setIsSwipeDown:;
- (long long)getLockSpeedGuideCount;
- (void)setLockSpeedGuideCount;
- (BOOL)isShake;
- (void)setIsShake:;
- (id)getBottomLockSpeedTriggerText;
- (id)tappedPointWhenLongPressEnd;
- (BOOL)isCanLock;
- (void)changeSpeed:;
- (id)lockingEnterMethod;
- (id)getLockSpeedGuideKey;
- (BOOL)isSwipeDown;
- (void)setIsBeingGuided:;
- (BOOL)isBeingGuided;
- (void)changeEnterMethodForLockSpeed;
- (void)setEnterMethodBeforeLongPress:;
- (id)changeModeEnterMethod;
- (id)enterMethodBeforeLongPress;
- (void)handleLongPressFastSpeed:;
- (void)handleLongPressFastSpeedStart:;
- (void)handleLongPressLockedSpeedBegan;
- (long long)gestureFrom;
- (BOOL)enableToSpeedControl;
- (void)setGestureFrom:;
- (void)setLongPressFastSpeedView:;
- (void)setLongPressFastSpeedGesture:;
- (void)invalidTimer;
- (void)handleFeedRefreshCompletion:;
- (BOOL)isVideoUnavailable;
- (void)handleHorizontalSlideNotification:;
- (void)longPressSpeedControlDidChangeSpeed:;
- (void)handleLandScapeSpeedChangeNotification:;
- (void)setDisableFastSpeed:;
- (void)setIsInMockPureMode:;
- (void)setEnterMockViewMethod:;
- (void)removeFastSpeed:;
- (void)setLongPressSpeedNextEnterMethod:;
- (id)tappedPoint;
- (id)longPressSpeedNextEnterMethod;
- (Class)fastSpeedHelper;
- (BOOL)longPressTimeExceeded;
- (void)addMockPureModePageWithMethod:;
- (void)removeMockView:;
- (BOOL)isInMixInnerPage;
- (void)setIfSlideHorizontally:;
- (void)cancleFastForwardAnimationIfNeeded;
- (BOOL)shouldLongPressEnableFastSpeed;
- (BOOL)ifSlideHorizontally;
- (BOOL)isInWatchLaterInnerPage;
- (void)setTappedPoint:;
- (void)handleEnterPureMode:;
- (void)handleFastSpeed:;
- (BOOL)disableFastSpeed;
- (BOOL)isInMockPureMode;
- (unsigned long long)enterMockViewMethod;
- (void)removeMockViewAndEnterPureMode:;
- (void)updateSpeedBeforePushPureMode:;
- (void)pushIntoPureModeByMethod:;
- (void)setShouldUpdateSpeedAfterFastSpeedEnd:;
- (void)setLongPressTimeExceeded:;
- (BOOL)isBasicConditionReadyForSpeedOptimize;
- (void)handleLongPressFastSpeedOptimizeChanged:gesture:;
- (void)handleLongPressLockedDoubleSpeedEnded:gesture:;
- (void)setFirstTriggerSpeedTimestamp:;
- (void)setFirstTriggerProgressTimestamp:;
- (void)setFastSpeedStartTimestamp:;
- (void)setSpeedVerticalType:;
- (void)setAlreadyTriggerSpeed:;
- (double)fastSpeedStartTimestamp;
- (void)triggerShowGuideViewIfNeeded;
- (void)setupTimerIfNeeded;
- (BOOL)shouldUpdateSpeedAfterFastSpeedEnd;
- (unsigned long long)speedVerticalType;
- (id)speedCapsuleController;
- (void)handleTriggerSpeedIssues;
- (BOOL)alreadyTriggerSpeed;
- (double)firstTriggerProgressTimestamp;
- (BOOL)enableSceneReadyForSpeedOptimize;
- (BOOL)isModelReadyForSpeedOptimize;
- (double)firstTriggerSpeedTimestamp;
- (void)setSpeedCapsuleController:;
- (void)setTimer:;
- (void)dealloc;
- (id)timer;
- (void)viewDidLoad;
- (BOOL)gestureRecognizer:shouldBeRequiredToFailByGestureRecognizer:;
- (BOOL)gestureRecognizerShouldBegin:;
- (BOOL)isAppearing;
- (void)setData:;
- (void)viewWillAppear;
- (void).cxx_destruct;
- (void)setIsAppearing:;
- (BOOL)gestureRecognizer:shouldRequireFailureOfGestureRecognizer:;
- (void)reset;
- (void)viewDidAppear;
- (void)viewWillDisappear;
- (void)setTouchStartTime:;
- (id)touchStartTime;
- (void)willDisplay;
+ (Class)aAWEPadModuleAdapterClass;
+ (Class)aAWEPadSplitScreenAdapterClass;
+ (Class)aAWEPlayInteractionAdapterClass;
@end
