@interface AWESearchUserCachalotViewController : AWESearchResultVerticalBaseViewController
@property (nonatomic) AWESearchUserCachalotDataController userDataController;
@property (nonatomic) AWESearchUserCachalotLynxPipeline lynxPipeline;
@property (nonatomic) BOOL isPullToRefresh;
@property (nonatomic) BOOL isLoading;
@property (nonatomic) BOOL loadmoreRecording;
@property (nonatomic) BOOL fromHotSearch;
@property (nonatomic) double refreshLoadTime;
@property (nonatomic) NSDictionary currFilterText;
@property (nonatomic) BOOL filterOnTab;
@property (nonatomic) double lastContentOffsetY;
@property (nonatomic) BOOL lastDragDidTriggerHeaderTopChange;
@property (nonatomic) BOOL headerViewIsFloating;
@property (nonatomic) NSDictionary attributes;
@property (nonatomic) AWESearchUtility searchUtility;
@property (nonatomic) BOOL fromGeneralSearchMoreClick;
@property (nonatomic) UITapGestureRecognizer emptyTapRecognizer;
@property (nonatomic) Q hash;
@property (nonatomic) # superclass;
@property (nonatomic) NSString description;
@property (nonatomic) NSString debugDescription;
- (id)aweui_emptyPageConfigForState:;
- (id)enterFrom;
- (BOOL)btm_autoManaged;
- (id)btm_pageIdentifier;
- (id)tabConfig;
- (double)lastContentOffsetY;
- (void)setLastContentOffsetY:;
- (id)searchEnterMethod;
- (void)p_backBtnClicked;
- (id)getCurrentSearchId;
- (void)fetchDataWithKeyWord:enterFrom:extraLogParams:isSearchByUserClick:animated:completion:;
- (id)getCurrentLogId;
- (id)searchUtility;
- (void)setSearchUtility:;
- (BOOL)shouldSkipFetchWithKeyWord:animated:;
- (BOOL)isPullToRefresh;
- (void)setIsPullToRefresh:;
- (void)attributesForTrackSearchEventWithKeyWord:enterFrom:extraLogParams:;
- (BOOL)fromHotSearch;
- (void)setFromHotSearch:;
- (void)hideBlankView;
- (id)lynxPipeline;
- (void)setLynxPipeline:;
- (id)followLabel;
- (void)setEmptyTapRecognizer:;
- (id)emptyTapRecognizer;
- (void)setLastDragDidTriggerHeaderTopChange:;
- (BOOL)lastDragDidTriggerHeaderTopChange;
- (void)customRefreshResponseCompletion:withParams:;
- (void)customHandleNodeViewModelsReady:withResponseParams:isLoadmore:;
- (id)customContainerConfig;
- (id)customPageScrollFpsSceneName;
- (Class)customDataControllerClass;
- (double)loadMoreMarigin;
- (void)customFeedWillBeginDragging:;
- (void)customAnylyseResponseDataModelsReadyBlock:withParams:isLoadMore:;
- (void)customEmptyResponseCompletion:withParams:isLoadMore:;
- (void)customLoadmoreResponseCompletion:withParams:;
- (BOOL)loadmoreRecording;
- (void)setLoadmoreRecording:;
- (BOOL)customShouldTurnOnAutoPreloadMoreWhenEndRefreshingCompleted;
- (void)configFilter;
- (BOOL)filterOnTab;
- (id)currFilterText;
- (void)setCurrFilterText:;
- (void)setHeaderViewIsFloating:;
- (BOOL)headerViewIsFloating;
- (void)setFilterOnTab:;
- (BOOL)isSupportFilterViews;
- (id)fetchFilterDataModel;
- (id)fetchTrackData;
- (void)refreshDataWithFilterParams:isSearchFilter:isFetchData:;
- (void)setBeforeBuildRefreshRequestBlock:;
- (BOOL)fromGeneralSearchMoreClick;
- (void)setFromGeneralSearchMoreClick:;
- (void)clearSearchSpamTrackingData;
- (void)trackerForBlankViewClick;
- (void)fetchUserDataCompletion:;
- (void)setRefreshLoadTime:;
- (double)refreshLoadTime;
- (void)shouldShowFilterView:;
- (BOOL)searchEngineForceLayoutAfterReloadWhenNilWindow;
- (void)trackerForBlankViewDisplay;
- (id)searchFollowEnterFrom;
- (void)updateSearchSpamTrackingStatus;
- (void)viewWillDisappear:;
- (id)init;
- (BOOL)isLoading;
- (void)dealloc;
- (id)attributes;
- (void)viewDidLoad;
- (BOOL)gestureRecognizerShouldBegin:;
- (void)viewDidDisappear:;
- (void)scrollViewDidScroll:;
- (void)setAttributes:;
- (void)scrollViewWillBeginDragging:;
- (void)scrollViewDidEndDecelerating:;
- (void)viewWillAppear:;
- (void).cxx_destruct;
- (BOOL)gestureRecognizer:shouldReceiveTouch:;
- (void)viewDidAppear:;
- (void)scrollViewDidEndDragging:willDecelerate:;
- (void)reset;
- (void)setIsLoading:;
- (void)setUserDataController:;
- (id)userDataController;
+ (long long)dispatchStrategy;
+ (void)preprocessModel:;
+ (double)maxAccumulatedHeight;
+ (long long)loopDispatchSize;
+ (BOOL)disableCustomAnylyseResponse;
+ (BOOL)fixCustomAnylyseResponse;
+ (BOOL)enablePreLoadMore;
+ (double)loadMoreMaginConfig;
@end
