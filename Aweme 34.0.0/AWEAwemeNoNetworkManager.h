@interface AWEAwemeNoNetworkManager : NSObject
@property (nonatomic) BFCancellationTokenSource requestingTokenSource;
@property (nonatomic) AWENetworkPingTask pingTask;
@property (nonatomic) NSDate lastSuccessDetectionDate;
@property (nonatomic) Q recentDetectionResult;
@property (nonatomic) Q detectionStage;
@property (nonatomic) @? statusCompletionBlock;
@property (nonatomic) NSMutableArray disposeTokens;
@property (nonatomic) BOOL shouldEnableByPassDetection;
@property (nonatomic) NSArray detectSources;
@property (nonatomic) BOOL markByPassDetectionOnNetChanged;
@property (nonatomic) NSString currentDisplayingItemID;
- (void)startNetworkDetection;
- (void)startNetworkByPassOnlyDetectionIfNeeded;
- (void)onFeedContentReceived:withError:;
- (BOOL)isInDetectingProcess;
- (BOOL)isInNoNetworkState;
- (void)checkNoNetworkNoticeStatusWithDelay:completion:;
- (id)currentDisplayingItemID;
- (void)handleConnectionChanged:;
- (void)handleResignActiveNotification;
- (void)setShouldEnableByPassDetection:;
- (void)setPingTask:;
- (void)cancelCurrentDetectionRequest;
- (void)startNetworkDetectionWithPingOnly:;
- (BOOL)markByPassDetectionOnNetChanged;
- (BOOL)shouldEnableByPassDetection;
- (unsigned long long)recentDetectionResult;
- (void)setRecentDetectionResult:;
- (void)broadcastResult;
- (void)setMarkByPassDetectionOnNetChanged:;
- (unsigned long long)detectionStage;
- (void)broadcastWithResult:;
- (void)startWithCompletion:pingOnly:;
- (id)requestingTokenSource;
- (void)setRequestingTokenSource:;
- (void)setDetectionStage:;
- (id)startTaskWithDelay:;
- (double)detectionTimeout;
- (id)targetURLs;
- (id)startNoNetworkDetectionWithTimeout:targetURL:cancellationToken:;
- (double)freqLimitOnSuccess;
- (BOOL)shouldStartNewDetection:;
- (void)setLastSuccessDetectionDate:;
- (id)disposeTokens;
- (id)detectSources;
- (id)pingTask;
- (id)lastSuccessDetectionDate;
- (void)setCurrentDisplayingItemID:;
- (void)setDisposeTokens:;
- (void)setDetectSources:;
- (BOOL)isDetectionEnabled;
- (void)performBlock;
- (void).cxx_destruct;
- (double)startDelay;
- (void)setStatusCompletionBlock:;
- (id)statusCompletionBlock;
+ (double)timeDelayFirstFrameWithFlag:;
+ (id)sharedInstance;
@end
