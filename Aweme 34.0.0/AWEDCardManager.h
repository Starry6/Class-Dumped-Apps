@interface AWEDCardManager : NSObject
@property (nonatomic) NSObject<OS_dispatch_semaphore> lock;
@property (nonatomic) NSMutableDictionary exposedCards;
@property (nonatomic) NSMutableDictionary unselectedCards;
@property (nonatomic) NSMutableArray dcardsInHotFeed;
@property (nonatomic) NSDictionary exposedAwemeCards;
@property (nonatomic) Q hash;
@property (nonatomic) # superclass;
@property (nonatomic) NSString description;
@property (nonatomic) NSString debugDescription;
- (void)removeAllDCardsInHotFeed;
- (void)addDCardsInHotFeedFromArray:;
- (BOOL)acceptDCard:;
- (void)addDCardInHotFeed:;
- (void)insertDCard:isFromCardTool:fallbackEnabled:insertCompletion:interception:;
- (id)dcardsInHotFeed;
- (int)dcardsAcceptionBitsForContainerType:;
- (void)cleanCardForScene:;
- (id)createDCardWithAwemeModel:loadCompletion:;
- (BOOL)resourcesExistInChannel:;
- (void)registerBSyncGeckoActionMessageWithCallback:;
- (id)removeNullFromDict:;
- (void)preloadLynxWithAwemeModel:completion:;
- (id)cardCachedForScene:;
- (BOOL)dcardCompensateDisplayEventEnable;
- (int)delayCallDidDisplay;
- (void)unregisterScene:;
- (BOOL)dcardUpdateEnable;
- (void)registerScene:withContext:;
- (void)updateFreqRulesWithModel:;
- (void)loadResourcesFromChannel:enableRetry:completion:;
- (id)statsForScene:;
- (id)contextOfScene:;
- (void)testFreqControlWithAwemeModel:testResult:;
- (void)updateStats:containerType:;
- (id)exposedAwemeCards;
- (id)exposedCards;
- (id)unselectedCards;
- (void)updateLocalStats:forScene:;
- (void)trackInsertDCard:;
- (void)trackDCardStatus:extra:;
- (void)trackInsertWithDCard:result:expectedIndex:insertedIndex:fallbackEnabled:startTime:endTime:rejectReason:;
- (void)trackDCardError:errorMsg:;
- (id)getCardType:status:extra:;
- (BOOL)inflowPageRollBack;
- (void)recordMultiPOICardShowWithModel:;
- (void)cleanExposedCards;
- (void)exposeDCard:;
- (id)exposedForKey:;
- (void)unselectedDCard:;
- (id)unselectedDCardForKey:;
- (void)setExposedCards:;
- (void)setUnselectedCards:;
- (id)init;
- (void)setLock:;
- (id)lock;
- (void).cxx_destruct;
+ (id)shared;
@end
