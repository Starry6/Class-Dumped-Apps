@interface AWELivePrivacyApiServiceImpl : NSObject
@property (nonatomic) Q hash;
@property (nonatomic) # superclass;
@property (nonatomic) NSString description;
@property (nonatomic) NSString debugDescription;
- (void)openURL:withCert:options:completionHandler:;
- (void)openURL:withCert:error:;
- (void)requestRecordPermission:audioSession:privacyCert:;
- (void)requestAccessCameraWithPrivacyCert:completionHandler:;
- (int)startAudioOutputUnitWithAudioUnit:privacyCert:error:;
- (int)stopAudioOutputUnitWithAudioUnit:privacyCert:error:;
- (void)startRunningWithCaptureSession:privacyCert:error:;
- (void)stopRunningWithCaptureSession:privacyCert:error:;
- (void)requestAccessToEntityType:eventStore:privacyCert:completion:;
- (id)calendarsForEntityType:eventStore:privacyCert:error:;
- (long long)authorizationStatusForEntityType:privacyCert:error:;
- (void)getPasteboardContentWithCert:completion:;
- (void)requestAccessMicrophoneWithPrivacyCert:completionHandler:;
- (id)predicateForEventsWithStartDate:endDate:calendars:eventStore:privacyCert:error:;
- (id)eventsMatchingPredicate:eventStore:privacyCert:error:;
- (BOOL)saveEvent:span:eventStore:privacyCert:error:;
- (BOOL)removeEvent:span:eventStore:privacyCert:error:;
- (id)createSKStoreWithCert:error:;
- (void)requestAccessMicrophoneWithPrivacyHybridCert:context:completionHandler:;
- (void)setString:privacyCert:error:;
- (void)setItems:options:privacyCert:error:;
- (void)setItems:privacyCert:error:;
- (void)getPasteboardContentWithCert:isNeedConsumeRepeatedly:completion:;
- (void)requestAccessCameraWithPrivacyHybridCert:context:completionHandler:;
- (id)IESLivePrivacyCert:;
- (void)openURL:withHybridCert:context:error:;
- (void)openURL:withHybridCert:context:options:completionHandler:;
- (void)jumpSystemNotification;
- (BOOL)simplifyJump;
- (void)setString:privacyHybridCert:context:error:;
- (void)getPasteboardContentWithHybridCert:context:completion:;
- (void)requestAccessToEntityType:eventStore:privacyHybridCert:context:completion:;
- (long long)authorizationStatusForEntityType:privacyHybridCert:context:error:;
- (id)calendarsForEntityType:eventStore:privacyHybridCert:context:error:;
- (id)eventsMatchingPredicate:eventStore:privacyHybridCert:context:error:;
- (id)predicateForEventsWithStartDate:endDate:calendars:eventStore:privacyHybridCert:context:error:;
- (BOOL)saveEvent:span:eventStore:privacyHybridCert:context:error:;
- (BOOL)removeEvent:span:eventStore:privacyHybridCert:context:error:;
- (void)requestUserNotificationsAuthorizationWithOptions:privacyHybridCert:context:completionHandler:;
- (void)requestPhotoAlbumAuthorizationWithCert:context:accessLevel:completionHandler:;
- (id)fetchAssetsWithLocalIdentifiers:options:cert:context:error:;
- (int)requestImageForAsset:targetSize:contentMode:options:resultHandler:cert:error:;
- (int)requestAVAssetForVideo:options:resultHandler:cert:error:;
- (id)createHybridCertWithToken:context:;
@end
