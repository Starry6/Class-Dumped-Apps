@interface AWESearchLiveView : UIView
@property (nonatomic) AWEAwemeModel awemeModel;
@property (nonatomic) BOOL isActiveBySingleClick;
@property (nonatomic) double startPlayerTime;
@property (nonatomic) double startLoadingTime;
@property (nonatomic) q payStatus;
@property (nonatomic) NSObject<AWELiveRoomFinishedListenerProtocol> roomFinishListener;
@property (nonatomic) UIView vsWatermarkView;
@property (nonatomic) <AWELiveVSMessageService> messageService;
@property (nonatomic) BOOL isWaitingChunkModel;
@property (nonatomic) BOOL isPlayedBeforeChunkModel;
@property (nonatomic) <IESLivePlayerProtocol> playerHolder;
@property (nonatomic) BOOL hasEnterLiveRoom;
@property (nonatomic) IESLivePlayerAudioLoudness sourceLoudness;
@property (nonatomic) BOOL isMultiLinkerGoingOn;
@property (nonatomic) {CGRect={CGPoint=dd}{CGSize=dd}} multiLinkerCropSize;
@property (nonatomic) NSString btm;
@property (nonatomic) NSTimer timer;
@property (nonatomic) <AWESearchLiveViewPlayerDelegate> delegate;
@property (nonatomic) q scaleMode;
@property (nonatomic) BOOL mute;
@property (nonatomic) double volume;
@property (nonatomic) q playState;
@property (nonatomic) NSDictionary logExtra;
@property (nonatomic) NSString referString;
@property (nonatomic) double adLiveDuration;
@property (nonatomic) BOOL livePlay;
@property (nonatomic) NSArray coverArray;
@property (nonatomic) <AWELiveStreamPlayer> playerController;
@property (nonatomic) NSDictionary btmInfo;
@property (nonatomic) BOOL isPlayClipMode;
@property (nonatomic) double clipDuration;
@property (nonatomic) @? didVideoClipPlaycompletion;
@property (nonatomic) Q hash;
@property (nonatomic) # superclass;
@property (nonatomic) NSString description;
@property (nonatomic) NSString debugDescription;
- (id)awemeModel;
- (void)setAwemeModel:;
- (id)referString;
- (void)setReferString:;
- (void)setLogExtra:;
- (id)logExtra;
- (id)btmInfo;
- (void)setBtmInfo:;
- (void)audienceWillEnterLiveRoom:anchorID:;
- (void)updateLogExtra:;
- (id)btm;
- (void)setBtm:;
- (void)setPayStatus:;
- (long long)payStatus;
- (void)onLoudness:soucePeak:targetLufs:isEnableExternalAETargetLufs:;
- (void)player:loadStateDidChange:;
- (void)player:mediaSizeDidChange:;
- (void)player:didReceiveMetaInfo:processed:;
- (void)player:didReceiveError:;
- (void)playerFrozen:;
- (void)audienceQuitAllRoomWithSlideVC:player:context:;
- (BOOL)isValidRect:;
- (double)adLiveDuration;
- (id)livePlayerView;
- (void)trackLiveSdkDurationV2;
- (void)trialTimeDidChange:;
- (void)viewStatusDidChange:hasShareTickets:;
- (void)dequeuePlayer;
- (void)setCoverArray:;
- (BOOL)enableSearchOptimizeLiveCloseRoom;
- (id)sizeWithSizeString:;
- (void)updatePlayerCover;
- (void)_startPlayLiveWithSteamData:orStreamURL:;
- (void)_stopPlayer;
- (BOOL)isActiveBySingleClick;
- (void)setIsActiveBySingleClick:;
- (double)startPlayerTime;
- (void)setStartPlayerTime:;
- (id)roomFinishListener;
- (void)setRoomFinishListener:;
- (void)resetPlayerViewControllerProps;
- (BOOL)shouldEnterFullScreenWithPlayer;
- (void)installMessageChannel;
- (void)trackLiveDurationLog;
- (void)uninstallMessageChannel;
- (void)setStartLoadingTime:;
- (id)vsWatermarkView;
- (void)setVsWatermarkView:;
- (double)startLoadingTime;
- (id)sourceLoudness;
- (id)messageService;
- (void)setMessageService:;
- (void)onMessageReceivce:messageStr:;
- (void)openPaidPanel;
- (void)setSourceLoudness:;
- (BOOL)isPaidLive;
- (void)addWatermark;
- (BOOL)isMultiLinkerGoingOn;
- (void)resetMultiLinkerParams;
- (void)setupMultiLinkerPlayerParamIfNeeded;
- (void)setIsMultiLinkerGoingOn:;
- (id)losePrecisionRectWith:;
- (void)trackLiveDuration;
- (void)trackLiveSdkDuration;
- (BOOL)isLivePlaying;
- (void)updateWithChunkModel:;
- (void)setIsPlayClipMode:;
- (BOOL)isWaitingChunkModel;
- (void)setIsWaitingChunkModel:;
- (void)setIsPlayedBeforeChunkModel:;
- (void)restoreStateAfterChunkModel;
- (BOOL)isPlayedBeforeChunkModel;
- (void)addObserverForChunkModel;
- (void)resetWaitingChunkModel;
- (BOOL)isPlayClipMode;
- (id)didVideoClipPlaycompletion;
- (void)trackLivePlay;
- (void)setAdLiveDuration:;
- (void)setDidVideoClipPlaycompletion:;
- (id)obtainNewPlayerViewController;
- (void)addRoomFinishListener;
- (id)coverArray;
- (void)clipPlayEnd;
- (void)livePreStreamPlayerReplaced;
- (void)updateMuteStatus;
- (void)updatePlayerContontroller;
- (void)updatePlayerWithChunkModel;
- (void)setLivePlay:;
- (void)dealMultiLinkerSEIWithMetaInfo:;
- (void)dealPCStreamMultiLinkerCropSize:;
- (void)setMultiLinkerCropSize:;
- (id)multiLinkerCropSize;
- (BOOL)hasEnterLiveRoom;
- (void)addPlayerViewToSearchLiveView;
- (void)setHasEnterLiveRoom:;
- (void)handleAudienceWillEnterLiveRoom;
- (void)setPlayerHolder:;
- (id)playerHolder;
- (void)trackLiveSdkPlay;
- (BOOL)mute;
- (double)volume;
- (void)setTimer:;
- (void)dealloc;
- (void)play;
- (id)timer;
- (id)delegate;
- (void)setVolume:;
- (void)setPlayerController:;
- (id)initWithFrame:;
- (void)setMute:;
- (id)transitionContext;
- (id)playerController;
- (void).cxx_destruct;
- (void)reset;
- (void)setDelegate:;
- (void)layoutSubviews;
- (void)stop;
- (void)willEnterFullScreen;
- (long long)playState;
- (void)updateWithModel:;
- (long long)scaleMode;
- (void)setScaleMode:;
- (void)didStop;
- (double)clipDuration;
- (void)setClipDuration:;
- (id)livePlayer;
+ (BOOL)isEnableStopAsyncOptimize;
+ (BOOL)isEnablePrepareConnectOptimize;
+ (BOOL)isEnableReuseOptimize;
@end
