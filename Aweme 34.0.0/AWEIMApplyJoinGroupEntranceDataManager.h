@interface AWEIMApplyJoinGroupEntranceDataManager : NSObject
@property (nonatomic) BOOL isRequesting;
@property (nonatomic) BOOL hasInitialFetched;
@property (nonatomic) <IESIMThrottleDebounceAction> throttle;
@property (nonatomic) AWEIMChatModel applyChat;
@property (nonatomic) <AWEIMApplyJoinGroupEntranceDataManagerDelegate> delegate;
@property (nonatomic) AWEIMApplyJoinGroupModel latestApplyModel;
@property (nonatomic) q applyUnreadCount;
@property (nonatomic) q promptUnreadCount;
@property (nonatomic) q dataStatus;
@property (nonatomic) Q hash;
@property (nonatomic) # superclass;
@property (nonatomic) NSString description;
@property (nonatomic) NSString debugDescription;
- (void)didFinishLogoutWithUid:;
- (id)conversationDataManager;
- (void)fetchAuditSwitchStatusWithShortID:type:completion:;
- (id)auditManager;
- (long long)applyUnreadCount;
- (void)markReadAllApply;
- (void)markConversationApplyReadWithConShortId:;
- (void)fetchLatestApply;
- (BOOL)isRequesting;
- (void)setIsRequesting:;
- (void)handleEnterMessageTabEvent;
- (void)updateAuditSwitchStatusWithCon:type:switchStatus:completion:;
- (void)tryFetchLatestApply;
- (void)iesim_briefDataSource:onNewConversationApply:;
- (void)iesim_briefDataSource:onNewApplyAck:;
- (void)handleTabChangedNotification:;
- (void)setLatestApplyModel:;
- (void)setPromptUnreadCount:;
- (void)setApplyUnreadCount:;
- (BOOL)hasInitialFetched;
- (void)fetchLatestApplyWithContext:;
- (void)__fetchLatestApplyWithContext:;
- (void)__resetDataForNextFetch;
- (void)setHasInitialFetched:;
- (void)__fetchUnreadDataWithContext:;
- (void)__fetchUnreadAudit;
- (long long)promptUnreadCount;
- (void)updateLatestApplyChat:;
- (void)generateChatModelWithompletion:;
- (id)applyChat;
- (void)__markReadAllPrompt;
- (void)setApplyChat:;
- (void)__updateLatestApplyChat;
- (id)latestApplyModel;
- (id)__generateApplyChatModelWithDisplayText:updateDate:;
- (void)__dealWithDataIfAllReady;
- (void)fetchLatestApplyAtCodeStart;
- (void)removeEntrance;
- (id)__displayTextForPromptHintWithCount:;
- (id)throttle;
- (id)init;
- (void)dealloc;
- (id)delegate;
- (void)applicationWillEnterForeground:;
- (long long)dataStatus;
- (void).cxx_destruct;
- (void)setDelegate:;
- (void)setDataStatus:;
- (void)setThrottle:;
+ (id)sharedInstance;
@end
