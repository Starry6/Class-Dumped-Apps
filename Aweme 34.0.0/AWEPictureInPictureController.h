@interface AWEPictureInPictureController : NSObject
@property (nonatomic) AVPictureInPictureController pipController;
@property (nonatomic) UIViewController pipViewController;
@property (nonatomic) UIView<AWEPictureInPicturePlayerView> pipPlayerView;
@property (nonatomic) UIView realPlayerView;
@property (nonatomic) C restoreType;
@property (nonatomic) BOOL isShowed;
@property (nonatomic) BOOL isActive;
@property (nonatomic) BOOL shouldStopOnActive;
@property (nonatomic) BOOL started;
@property (nonatomic) BOOL isForeground;
@property (nonatomic) BOOL aboutToRestore;
@property (nonatomic) BOOL readyToPlay;
@property (nonatomic) BOOL observedSubLayer;
@property (nonatomic) NSInteger startCheckCount;
@property (nonatomic) @? finishBlock;
@property (nonatomic) double duration;
@property (nonatomic) <AWEPictureInPictureControllerDelegate> delegate;
@property (nonatomic) BOOL canStartAutomaticallyFromInline;
@property (nonatomic) BOOL controlsHidden;
@property (nonatomic) BOOL canPauseWhenExiting;
@property (nonatomic) double rate;
@property (nonatomic) Q hash;
@property (nonatomic) # superclass;
@property (nonatomic) NSString description;
@property (nonatomic) NSString debugDescription;
- (void)setIsShowed:;
- (BOOL)isShowed;
- (void)setupBindings;
- (id)realPlayerView;
- (id)pipPlayerView;
- (void)preparePictureInPicture;
- (void)setCanStartAutomaticallyFromInline:;
- (void)resetVideoDuration:videoSize:playerFrame:completion:;
- (void)stopWithFinishBlock:;
- (void)preparePlayerLayerIfNeededWithLayer:;
- (void)setRealPlayerView:;
- (void)preparePlayerView;
- (void)stopPictureInPictureAndRestore:;
- (void)stopAndRestore:finishBlock:;
- (void)appendFinishBlock:;
- (void)notifyWillStop;
- (void)notifyDidStop;
- (id)readPipViewController;
- (void)hiddPipOtherSubViews;
- (void)clearStartedKVO;
- (void)initPipController;
- (BOOL)canSyncPlaybackStatus:;
- (BOOL)observedSubLayer;
- (BOOL)canPauseWhenExiting;
- (void)makePipController;
- (void)configsControlsHidden;
- (void)configAutomaticallyStart;
- (void)configCanPauseWhenExiting;
- (void)playerViewPreparation;
- (void)ensureCategory;
- (void)pictureInPicturePlayerViewReadyToPlay;
- (void)pictureInPicturePlayerViewFailed:;
- (void)pictureInPicturePlayerViewPlaying:;
- (void)pictureInPicturePlayerViewSeekToTime:completion:;
- (void)pictureInPictureDidTransToNewSize:;
- (double)currentTimeOfPictureInPicturePlayerView;
- (void)pictureInPicturePlayerViewTrackForClickVideoPlay;
- (void)pictureInPicturePlayerViewTrackForProgressSpeed:;
- (void)stopAndRestore;
- (void)setCanPauseWhenExiting:;
- (BOOL)canStartAutomaticallyFromInline;
- (void)setPipPlayerView:;
- (void)setRestoreType:;
- (BOOL)shouldStopOnActive;
- (void)setShouldStopOnActive:;
- (BOOL)aboutToRestore;
- (void)setAboutToRestore:;
- (void)setObservedSubLayer:;
- (int)startCheckCount;
- (void)setStartCheckCount:;
- (void)setRate:;
- (double)rate;
- (void)seekToTime:;
- (id)init;
- (void)setIsActive:;
- (id)pipController;
- (void)dealloc;
- (void)play;
- (id)delegate;
- (void)startPictureInPicture;
- (void)pictureInPictureController:restoreUserInterfaceForPictureInPictureStopWithCompletionHandler:;
- (void)stopPictureInPictureEvenWhenInBackground;
- (void)pictureInPictureController:failedToStartPictureInPictureWithError:;
- (void)pictureInPictureControllerDidStartPictureInPicture:;
- (void)setDuration:;
- (void)setPipController:;
- (void)stopPictureInPicture;
- (void)clear;
- (void)pictureInPictureControllerWillStartPictureInPicture:;
- (void)pictureInPictureControllerWillStopPictureInPicture:;
- (void)pictureInPictureControllerDidStopPictureInPicture:;
- (BOOL)started;
- (void).cxx_destruct;
- (BOOL)isForeground;
- (double)duration;
- (double)currentPlaybackTime;
- (void)setIsForeground:;
- (void)setDelegate:;
- (BOOL)isActive;
- (void)pause;
- (void)setStarted:;
- (BOOL)controlsHidden;
- (void)setControlsHidden:;
- (BOOL)readyToPlay;
- (unsigned char)restoreType;
- (void)syncProgress;
- (void)setFinishBlock:;
- (id)finishBlock;
- (id)pipViewController;
- (void)setReadyToPlay:;
- (void)setPipViewController:;
+ (id)currentInstance;
+ (BOOL)isPictureInPictureSupported;
+ (BOOL)isActive;
@end
