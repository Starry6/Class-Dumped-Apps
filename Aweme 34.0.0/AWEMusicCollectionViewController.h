@interface AWEMusicCollectionViewController : AWEMiniLunaBaseViewController
@property (nonatomic) UITableView tableView;
@property (nonatomic) AWEMusicCollectionVCViewModel viewModel;
@property (nonatomic) AWEUILoadingView loadingView;
@property (nonatomic) BOOL isCurrentUser;
@property (nonatomic) <MusicService> musicService;
@property (nonatomic) AWEMusicPrivacyManager privacyManager;
@property (nonatomic) AWEMusicExceptionalView exceptionView;
@property (nonatomic) AWEMusicGuideService guideService;
@property (nonatomic) BOOL isFirstRequest;
@property (nonatomic) double enterTime;
@property (nonatomic) AWEUserModel userModel;
@property (nonatomic) BOOL firstViewDidAppear;
@property (nonatomic) BOOL needShowSubVc;
@property (nonatomic) BOOL shouldReportCollectionPlayTime;
@property (nonatomic) AWELunaUgPopView lunaUgPopView;
@property (nonatomic) q BgGuideDismissMethod;
@property (nonatomic) BOOL isMiniLuna;
@property (nonatomic) BOOL canAutoStartPlay;
@property (nonatomic) BOOL canShowPrivacyPopGuide;
@property (nonatomic) BOOL canAutoCreatePlaylist;
@property (nonatomic) AWEMusicDSPEventModel eventModel;
@property (nonatomic) @? changeTabTypeBlock;
@property (nonatomic) BOOL isVCAppearing;
@property (nonatomic) Q hash;
@property (nonatomic) # superclass;
@property (nonatomic) NSString description;
@property (nonatomic) NSString debugDescription;
- (void)didFinishLogin;
- (BOOL)isMiniLuna;
- (void)setIsMiniLuna:;
- (void)musicService:playStatusChanged:;
- (BOOL)isFirstRequest;
- (void)setIsFirstRequest:;
- (void)configSubviews;
- (id)privacyManager;
- (void)setFirstViewDidAppear:;
- (BOOL)firstViewDidAppear;
- (id)lunaUgPopView;
- (void)setLunaUgPopView:;
- (id)musicService;
- (void)setMusicService:;
- (id)eventModel;
- (void)setEventModel:;
- (void)noNetViewDidTapTryAgain:;
- (id)exceptionView;
- (void)setExceptionView:;
- (void)setChangeTabTypeBlock:;
- (void)setCanShowPrivacyPopGuide:;
- (BOOL)canShowPrivacyPopGuide;
- (void)setCanAutoCreatePlaylist:;
- (BOOL)canAutoCreatePlaylist;
- (void)setIsVCAppearing:;
- (id)guideService;
- (BOOL)canAutoStartPlay;
- (void)setCanAutoStartPlay:;
- (id)initWithUserModel:musicService:eventModel:isMiniLuna:;
- (void)p_checkShowCreatePlaylist;
- (id)etPageName;
- (void)setPrivacyManager:;
- (void)reloadDataWithError:;
- (void)etReportPageShowTime:;
- (void)viewModelClickCreatePlaylist:isBannerClick:;
- (id)changeTabTypeBlock;
- (BOOL)isVCAppearing;
- (id)p_cellViewModelAtIndexPath:;
- (void)p_deleteInvalidPlaylist:;
- (id)p_sectionViewModelAtIndex:;
- (void)viewModelClickLunaBanner:;
- (void)viewModelClickCreatePlaylist:;
- (void)viewModelReloadTableView:;
- (void)viewModel:ChangeToTabType:;
- (void)bottomPlayerStatusChanged:;
- (BOOL)canShowBgGuideNow;
- (void)onBgGuideShow;
- (void)onBgGuideDismissWithMethod:;
- (id)p_convertCollectSongsModel;
- (void)et_reportCollectionPlayTime;
- (void)setGuideService:;
- (long long)BgGuideDismissMethod;
- (void)setBgGuideDismissMethod:;
- (void)viewModelFirstPageLoadFinish:allMusicModels:;
- (void)viewModelStartPlay:musicModel:allMusicModels:;
- (void)viewModel:gotoPlaylistPageIsClick:;
- (void)viewModel:gotoPlaylistDetail:;
- (void)p_checkShowSubVC;
- (BOOL)p_should_hide_privacy_pop_up;
- (BOOL)showBGGuideView;
- (BOOL)p_isNeedShowEmpty;
- (void)p_startPlayWithCurrentMusic:allMusic:showSubPlayer:;
- (void)setShouldReportCollectionPlayTime:;
- (void)setNeedShowSubVc:;
- (void)p_lunaBannerDiversion;
- (BOOL)shouldReportCollectionPlayTime;
- (BOOL)needShowSubVc;
- (void)onPrivacyGuideDismissWithMethod:;
- (id)initWithUserModel:musicService:eventModel:;
- (void)requestData;
- (id)tableView:viewForHeaderInSection:;
- (id)tableView:cellForRowAtIndexPath:;
- (long long)tableView:numberOfRowsInSection:;
- (long long)numberOfSectionsInTableView:;
- (void)tableView:didSelectRowAtIndexPath:;
- (void)setTableView:;
- (void)setLoadingView:;
- (id)viewModel;
- (void)viewDidLoad;
- (id)tableView;
- (id)loadingView;
- (void)setUserModel:;
- (void)setViewModel:;
- (void).cxx_destruct;
- (double)tableView:heightForRowAtIndexPath:;
- (id)userModel;
- (void)viewDidAppear:;
- (double)tableView:heightForHeaderInSection:;
- (double)tableView:heightForFooterInSection:;
- (id)tableView:viewForFooterInSection:;
- (BOOL)isCurrentUser;
- (double)enterTime;
- (void)setEnterTime:;
@end
