@interface AWEPrivatePostsViewController : UIViewController
@property (nonatomic) Q hash;
@property (nonatomic) # superclass;
@property (nonatomic) NSString description;
@property (nonatomic) NSString debugDescription;
@property (nonatomic) Q hash;
@property (nonatomic) # superclass;
@property (nonatomic) NSString description;
@property (nonatomic) NSString debugDescription;
@property (nonatomic) AWEPrivatePostsViewModel privatePostsViewModel;
@property (nonatomic) UILabel topTipsLabel;
@property (nonatomic) UIImageView lockImageView;
@property (nonatomic) AWEUILoadingView loadingView;
@property (nonatomic) {CGPoint=dd} savedContentOffset;
@property (nonatomic) BOOL isViewAppear;
@property (nonatomic) BOOL needRefreshWhenViewAppear;
@property (nonatomic) BOOL shouldTrackShowCount;
@property (nonatomic) NSHashTable animatedCoverCells;
@property (nonatomic) AWEUserModel targetUser;
@property (nonatomic) <AWESharedPostsInjector> sharedPostsInjector;
@property (nonatomic) BOOL needRefreshData;
@property (nonatomic) UIView<AWECloudAlbumUploadIconViewProtocol> cloudAlbumButton;
@property (nonatomic) BOOL cloudAlbumButtonHidden;
@property (nonatomic) BOOL cloudAlbumSlidingHidden;
@property (nonatomic) <AWEUserWorkCellViewModelPoolProtocol> viewModelPool;
@property (nonatomic) BOOL needRefreshDataAfterLogin;
@property (nonatomic) NSString referString;
@property (nonatomic) NSString enterMethod;
@property (nonatomic) NSDictionary logExtra;
@property (nonatomic) BOOL fromHome;
@property (nonatomic) BOOL isProfileDidAppear;
@property (nonatomic) BOOL isSplitScreen;
@property (nonatomic) BOOL isFromHomepageDetail;
@property (nonatomic) NSString currentItemID;
@property (nonatomic) UICollectionView collectionView;
@property (nonatomic) <AWEUserProfileTabVCDelegate> delegate;
@property (nonatomic) @? requestDataCompletionBlock;
@property (nonatomic) @? selectVideoForDetail;
@property (nonatomic) @? privateNumUpdateBlock;
@property (nonatomic) Q hash;
@property (nonatomic) # superclass;
@property (nonatomic) NSString description;
@property (nonatomic) NSString debugDescription;
- (id)referString;
- (id)aweui_emptyPageConfigForState:;
- (void)aweui_emptyPagePrimaryButtonTapped:;
- (id)aweui_emptyPageEdgeInsets;
- (void)didFinishLogin;
- (id)zoomTransitionStartViewForOffset:;
- (void)setEnterMethod:;
- (BOOL)configWithRouterParamDict:;
- (BOOL)detailTableViewControllerNeedUpdateBottomBarWhenReload:;
- (void)setReferString:;
- (void)setLogExtra:;
- (id)logExtra;
- (id)enterMethod;
- (id)aweui_emptyPageBelowView;
- (void)setIsSplitScreen:;
- (id)privatePostsViewModel;
- (void)setPrivatePostsViewModel:;
- (void)didChangeVideoPrivacy:;
- (void)didDeleteAweme:;
- (BOOL)isViewAppear;
- (BOOL)isFromHomepageDetail;
- (void)setIsFromHomepageDetail:;
- (double)contentOffsetY;
- (void)adjustContentOffset:animated:;
- (double)contentSizeHeight;
- (void)setIsViewAppear:;
- (void)_refreshData;
- (void)_loadMoreData;
- (BOOL)shouldHideNoMoreText;
- (void)setNeedRefreshData:;
- (BOOL)needRefreshData;
- (id)previewingViewControllerForView:atPoint:;
- (id)previewingSourceRectForView:atPoint:;
- (void)setTargetUser:;
- (BOOL)fromHome;
- (void)setFromHome:;
- (void)setSavedContentOffset:;
- (id)savedContentOffset;
- (void)setCurrentItemID:;
- (id)currentItemID;
- (void)didPostAweme:;
- (void)memoriesSwitchDidChange:;
- (id)aAWEPadUserPageAdapter;
- (id)initWithTargetUser:;
- (id)viewModelPool;
- (void)handleRecycledWorksNotification:;
- (id)selectVideoForDetail;
- (void)setSelectVideoForDetail:;
- (void)setViewModelPool:;
- (void)trackAllCellShowIfNeeded;
- (void)removePadTrackItemIDs;
- (void)trackPadCellShowWithModel:indexPath:;
- (id)requestDataCompletionBlock;
- (void)setRequestDataCompletionBlock:;
- (void)handleVideoFavoriteNotification:;
- (void)cloudAlbumStatusOpenNotification:;
- (void)cloudAlbumStatusCloseNotification:;
- (void)handleIMMessageRecalledNotification:;
- (void)setAnimatedCoverCells:;
- (void)_startTimingForTrack;
- (id)cloudAlbumButton;
- (void)setCloudAlbumButtonHidden:;
- (BOOL)cloudAlbumSlidingHidden;
- (void)setShouldTrackShowCount:;
- (BOOL)needRefreshWhenViewAppear;
- (void)setNeedRefreshWhenViewAppear:;
- (void)updateMemoriesData;
- (void)_trackEventForStayTime;
- (id)privateNumUpdateBlock;
- (id)animatedCoverCells;
- (void)p_refreshFooter;
- (void)showTopTipsLabel:;
- (id)sharedPostsInjector;
- (void)cloudAlbumUpdate;
- (void)setNeedRefreshDataAfterLogin:;
- (BOOL)isProfileDidAppear;
- (id)p_tipContent;
- (id)topTipsLabel;
- (BOOL)needRefreshDataAfterLogin;
- (void)p_endRefreshingWithMore:list:error:beginDate:;
- (void)loadMoreDataWhenRefresh:;
- (BOOL)shouldTrackShowCount;
- (void)_trackEventForShowCount;
- (void)setIsProfileDidAppear:;
- (void)setPrivateNumUpdateBlock:;
- (void)setTopTipsLabel:;
- (void)setSharedPostsInjector:;
- (void)setCloudAlbumButton:;
- (BOOL)cloudAlbumButtonHidden;
- (void)setCloudAlbumSlidingHidden:;
- (void)cloudAlbumDelete:;
- (id)collectionView:layout:referenceSizeForFooterInSection:;
- (void)reloadData;
- (id)collectionView:layout:referenceSizeForHeaderInSection:;
- (void)viewWillDisappear:;
- (id)collectionView;
- (double)collectionView:layout:minimumLineSpacingForSectionAtIndex:;
- (void)dealloc;
- (double)collectionView:layout:minimumInteritemSpacingForSectionAtIndex:;
- (id)delegate;
- (void)viewWillLayoutSubviews;
- (id)collectionView:viewForSupplementaryElementOfKind:atIndexPath:;
- (id)collectionView:cellForItemAtIndexPath:;
- (void)setLoadingView:;
- (void)viewDidLoad;
- (void)viewWillTransitionToSize:withTransitionCoordinator:;
- (id)contentView;
- (id)loadingView;
- (void)collectionView:willDisplayCell:forItemAtIndexPath:;
- (void)setCollectionView:;
- (void)viewDidDisappear:;
- (void)scrollViewDidScroll:;
- (void)collectionView:didSelectItemAtIndexPath:;
- (void)scrollViewWillBeginDragging:;
- (void)viewWillAppear:;
- (void).cxx_destruct;
- (long long)collectionView:numberOfItemsInSection:;
- (id)collectionView:layout:sizeForItemAtIndexPath:;
- (void)viewDidAppear:;
- (void)scrollViewDidEndDragging:willDecelerate:;
- (void)setDelegate:;
- (void)refreshData;
- (id)tabName;
- (void)_setupUI;
- (id)lockImageView;
- (void)setLockImageView:;
- (BOOL)isSplitScreen;
- (id)targetUser;
+ (Class)aAWEPadUserPageAdapterClass;
@end
