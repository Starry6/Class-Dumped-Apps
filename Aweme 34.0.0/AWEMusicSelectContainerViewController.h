@interface AWEMusicSelectContainerViewController : AWEMiniLunaBaseViewController
@property (nonatomic) NSString playlistID;
@property (nonatomic) AWEMusicSelectTopView topView;
@property (nonatomic) UIView contentView;
@property (nonatomic) AWEMusicSongListSelectViewController recommendListVC;
@property (nonatomic) AWEMusicSelectSearchViewController searchListVC;
@property (nonatomic) NSObject<MusicService> musicService;
@property (nonatomic) AWEMusicPlayEventService playEventService;
@property (nonatomic) LunaPlayEventService lunaPlayEventService;
@property (nonatomic) q addMusicNum;
@property (nonatomic) NSString enterFrom;
@property (nonatomic) NSString enterMethod;
@property (nonatomic) NSString previousPage;
@property (nonatomic) NSString pageName;
@property (nonatomic) UIViewController currentVC;
@property (nonatomic) NSMutableArray allTrackIDs;
@property (nonatomic) AWEPlaylistInfoModel playlistInfo;
@property (nonatomic) BOOL isEmpty;
@property (nonatomic) <AWEMusicSelectContainerViewControllerDelegate> delegate;
@property (nonatomic) BOOL isMiniLuna;
@property (nonatomic) BOOL needOffline;
@property (nonatomic) AWEMusicDSPEventModel eventModel;
@property (nonatomic) NSDictionary trackParams;
@property (nonatomic) Q hash;
@property (nonatomic) # superclass;
@property (nonatomic) NSString description;
@property (nonatomic) NSString debugDescription;
- (void)initSubviews;
- (void)setEnterFrom:;
- (void)setEnterMethod:;
- (id)enterMethod;
- (id)enterFrom;
- (id)trackParams;
- (BOOL)isMiniLuna;
- (id)playlistInfo;
- (void)setPlaylistInfo:;
- (void)setTrackParams:;
- (void)setIsMiniLuna:;
- (void)setPlaylistID:;
- (id)currentVC;
- (void)setCurrentVC:;
- (id)playEventService;
- (void)setPlayEventService:;
- (id)musicService;
- (void)setMusicService:;
- (id)recommendListVC;
- (id)searchListVC;
- (id)eventModel;
- (void)setEventModel:;
- (void)setRecommendListVC:;
- (void)setSearchListVC:;
- (id)lunaPlayEventService;
- (void)setLunaPlayEventService:;
- (id)allTrackIDs;
- (void)setAllTrackIDs:;
- (id)initWithPlaylistInfo:enterFrom:enterMethod:previousPage:pageName:;
- (void)setNeedOffline:;
- (void)playlistSongsChangedWithType:playlistId:changeModels:from:;
- (void)reportCollectEventModel:isSuccess:code:isRepeatCollect:;
- (long long)addMusicNum;
- (BOOL)needOffline;
- (void)p_offlineAddMusicWithModel:scene:params:completion:;
- (void)p_addMusicWithModel:scene:params:completion:;
- (void)p_trackAddSongEventWithItem:params:;
- (void)setAddMusicNum:;
- (long long)topViewStyle;
- (void)addMusicWithModel:scene:params:completion:;
- (void)didFetchAllTrackIDs:;
- (void)viewWillDisappear:;
- (BOOL)shouldAutomaticallyForwardAppearanceMethods;
- (void)dealloc;
- (id)delegate;
- (void)viewDidLoad;
- (id)contentView;
- (id)subTitle;
- (void)setIsEmpty:;
- (void)viewDidDisappear:;
- (BOOL)isEmpty;
- (void)viewWillAppear:;
- (void).cxx_destruct;
- (void)setContentView:;
- (id)title;
- (void)viewDidAppear:;
- (void)setDelegate:;
- (void)closeAction;
- (id)topView;
- (id)previousPage;
- (void)setPreviousPage:;
- (void)setTopView:;
- (id)playlistID;
- (void)searchTextChanged:;
- (id)pageName;
- (void)setPageName:;
@end
