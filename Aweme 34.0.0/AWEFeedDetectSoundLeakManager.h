@interface AWEFeedDetectSoundLeakManager : NSObject
@property (nonatomic) UIViewController<AWEFeedContainerProtocol> weakFeedTableVC;
@property (nonatomic) NSMutableArray feedCellWrappers;
@property (nonatomic) q currentPageStatus;
@property (nonatomic) Q hash;
@property (nonatomic) # superclass;
@property (nonatomic) NSString description;
@property (nonatomic) NSString debugDescription;
- (id)aAWEPadModuleAdapter;
- (void)startObserveRecommendFeed:;
- (void)pauseAllCell;
- (void)updateFeedRecommendPageStatus:;
- (void)startObserveFeedCell:;
- (BOOL)enableFeedSoundLeakDetect;
- (void)setWeakFeedTableVC:;
- (BOOL)enablePauseOptimize;
- (id)feedCellWrappers;
- (void)setFeedCellWrappers:;
- (void)setCurrentPageStatus:;
- (long long)currentPageStatus;
- (void)cancelDetectFeedSoundLeak;
- (BOOL)enableDetectFeedSoundLeakForPageStatus:;
- (void)tryDetectFeedSoundLeak;
- (BOOL)checkFeedCellWrapperIsPlaying:;
- (void)trackPauseAllCellWithPlayingCellWrapper:;
- (double)detectDelayTime;
- (void)detectFeedSoundLeak;
- (void)trackSoundLeakWithPlayingCellWrappers:;
- (void)tryCompensatoryPauseForPlayingCellWrappers:;
- (BOOL)enableFeedSoundLeakCompensatoryPauseWithPageStatus:;
- (id)weakFeedTableVC;
- (void)pauseFeedCellWrapperIfPlaying:;
- (id)soundLeakDetectABConfigDict;
- (void)leaveTopTabChannelWithTabId:leaveModel:;
- (void)leaveBottomTabChannelWithTabId:leaveModel:;
- (void)enterHPSearchEntrance;
- (void)enterPublishEntrance;
- (void).cxx_destruct;
+ (Class)aAWEPadModuleAdapterClass;
+ (void)registerHPLifeCycleIfNeeded;
+ (id)sharedInstance;
@end
