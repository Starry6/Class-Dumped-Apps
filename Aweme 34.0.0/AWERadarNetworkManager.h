@interface AWERadarNetworkManager : NSObject
@property (nonatomic) BOOL isHeartBreak;
@property (nonatomic) @? completion;
@property (nonatomic) NSTimer timer;
@property (nonatomic) BOOL isHeartBreakRequestOnAir;
@property (nonatomic) BOOL isFollowRequestOnAir;
@property (nonatomic) double headBreakFrequency;
@property (nonatomic) BOOL isErrorToastShown;
@property (nonatomic) BOOL isFirstHeartBeat;
@property (nonatomic) NSMutableDictionary requestInfoParams;
@property (nonatomic) NSMutableDictionary requestErrorInfoParams;
@property (nonatomic) BOOL isNeedErrorMsg;
@property (nonatomic) BOOL isDataEmpty;
@property (nonatomic) BOOL isBackDataEmpty;
@property (nonatomic) NSMutableSet fakeFollowingSet;
@property (nonatomic) BOOL needNeighbourhoodGroup;
@property (nonatomic) <AWEHttpTask> currentHbgetTask;
@property (nonatomic) NSMutableDictionary noticeMap;
@property (nonatomic) BOOL isNeedBackup;
@property (nonatomic) Q strategyType;
@property (nonatomic) BOOL shareAwemeEnabled;
- (BOOL)isFollowRequestOnAir;
- (void)setStrategyType:;
- (unsigned long long)strategyType;
- (void)p_clearRequestCount;
- (void)p_addRequestCount:;
- (void)errorLogs:andUrl:andRequestID:;
- (id)requestInfoParams;
- (id)requestErrorInfoParams;
- (void)p_trackRequestErrorInfo:;
- (void)p_clientError:urlType:;
- (void)p_addRequestErrorCount:;
- (BOOL)isNeedErrorMsg;
- (void)setRequestInfoParams:;
- (void)setRequestErrorInfoParams:;
- (void)setIsNeedErrorMsg:;
- (BOOL)isDataEmpty;
- (void)setIsFollowRequestOnAir:;
- (void)removeItemFromFakeFollowingSet:;
- (void)requestFollowWithUserID:extra:prepare:finish:;
- (void)addItemToFakeFollowingSet:;
- (BOOL)isFakeFollowing:;
- (void)updateNoticeMap:;
- (id)noticeMap;
- (BOOL)isHeartBreak;
- (void)setIsHeartBreak:;
- (void)p_trackRequestInfo;
- (id)currentHbgetTask;
- (void)setIsHeartBreakRequestOnAir:;
- (void)setIsErrorToastShown:;
- (double)headBreakFrequency;
- (void)heartBreak;
- (BOOL)isHeartBreakRequestOnAir;
- (void)setIsDataEmpty:;
- (void)setIsBackDataEmpty:;
- (void)requestHeartBreakWithCompletion:;
- (BOOL)shareAwemeEnabled;
- (BOOL)isFirstHeartBeat;
- (BOOL)isNeedBackup;
- (void)onHeartBreakRequestCompleteWithModel:error:completion:;
- (void)setCurrentHbgetTask:;
- (void)monitorHbGet:error:;
- (void)p_logAFDRadarHeartBeatResponse:;
- (void)p_filterDuplicatedUserWithModel:;
- (BOOL)isErrorToastShown;
- (void)setIsFirstHeartBeat:;
- (void)p_checkIsErrorInfo:response:error:;
- (void)setHeadBreakFrequency:;
- (void)setNeedNeighbourhoodGroup:;
- (void)setIsNeedBackup:;
- (id)p_filterWithexistedUsers:list:;
- (void)requestFollowWithUserID:extra:completion:;
- (id)fakeFollowingSet;
- (BOOL)switchShakeIsOpen;
- (void)startHeartBreakWithCompletion:;
- (void)stopHeartBreak;
- (void)requestExitRadarWithCompletion:;
- (void)requestExitRadarIfNeeded;
- (BOOL)switchHistroyIsOpen;
- (void)setSwitchShake:completion:;
- (void)setSwitchHistroy:completion:;
- (void)initEmptyDataFlag;
- (void)trackEmptyDataFlag;
- (void)setNoticeMap:;
- (void)setShareAwemeEnabled:;
- (BOOL)isBackDataEmpty;
- (void)setFakeFollowingSet:;
- (BOOL)needNeighbourhoodGroup;
- (void)setTimer:;
- (id)init;
- (void)dealloc;
- (id)timer;
- (id)completion;
- (void)startTimer;
- (void)setCompletion:;
- (void)stopTimer;
- (void).cxx_destruct;
- (id)mutableCopyWithZone:;
- (id)copyWithZone:;
- (BOOL)isNetworkError:;
+ (id)sharedInstance;
+ (id)allocWithZone:;
@end
