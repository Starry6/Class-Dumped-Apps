@interface SUCoreEventReporter : NSObject
@property (nonatomic) NSMutableArray awaitingRetry;
@property (nonatomic) NSURL splunkURL;
@property (nonatomic) NSObject<OS_dispatch_queue> splunkStateQueue;
@property (nonatomic) NSURLSessionConfiguration inProcessConfig;
@property (nonatomic) NSOperationQueue inProcessOperationQueue;
@property (nonatomic) NSURLSession inProcessSession;
@property (nonatomic) SUCoreEventReporterDelegate reporterDelegate;
@property (nonatomic) NSString storeToPath;
@property (nonatomic) NSString persistedStatePath;
@property (nonatomic) q accessControl;
@property (nonatomic) SUCorePersistedState activeEventsState;
@property (nonatomic) SUCoreEvent lastErrorEvent;
@property (nonatomic) BOOL splunkAccessCreated;
@property (nonatomic) BOOL eventExtensionsDetermined;
@property (nonatomic) NSMutableDictionary eventExtensions;
@property (nonatomic) NSInteger activeSendTaskCount;
@property (nonatomic) BOOL dropEventsOnSendFailure;
@property (nonatomic) @? onceIdleCompletion;
- (id)inProcessConfig;
- (id)_synchonizeDiscoveredCanceling:forActiveEvent:withFileUUIDsToRetry:;
- (BOOL)sendEvent:;
- (id)_getSplunkRequestForURL:;
- (void)_sendAllAwaitingRetry;
- (id)_buildContextFromNVRAMBootArgs;
- (long long)currentAccessControl;
- (long long)accessControl;
- (void)setInProcessOperationQueue:;
- (void)setEventExtensions:;
- (void)setAwaitingRetry:;
- (void)setPersistedStatePath:;
- (void)setDropEventsOnSendFailure:;
- (id)eventExtensions;
- (id)_copyEscapeStringsForEventData:;
- (void)_sendSplunkEvents:forEventUUID:toServerURL:;
- (void)setEventExtensionsDetermined:;
- (id)reporterDelegate;
- (id)_storeJSONData:withFileUUID:forEventUUID:;
- (id)_getJSONDataFromPayload:withFileUUID:forEventUUID:;
- (BOOL)_sendFirstAwaitingRetry;
- (BOOL)sendEvent:toServerURL:;
- (void)_incrementActiveSendCount:;
- (id)persistedStatePath;
- (id)_synchonizeDiscoveredRunning:forActiveEvent:withFileUUIDsToRetry:;
- (id)onceIdleCompletion;
- (void)_splunkAccessSetup;
- (int)activeSendTaskCount;
- (void)setActiveEventsState:;
- (void)dropOnSendFailure:;
- (void)setLastErrorEvent:;
- (id)_removeFileUUID:fromFilesToRetry:;
- (id)_synchonizeDiscoveredUnknown:forActiveEvent:withFileUUIDsToRetry:;
- (void)setInProcessConfig:;
- (void)_synchronizeWithNSURLSessionExpecting:;
- (id)_activeEventForFileUUID:;
- (void)setSplunkAccessCreated:;
- (void)_awaitRetryingFileUUID:;
- (void)setAccessControl:;
- (void)setActiveSendTaskCount:;
- (void)_sendCoreEvents:secondEvent:;
- (id)_newScrubbedEvents:;
- (void)setSplunkURL:;
- (void)_sendInterruptedFromStorage:;
- (BOOL)splunkAccessCreated;
- (void)_uploadFromFile:withFileUUID:forEventUUID:toServerURL:;
- (id)_synchonizeDiscoveredCompleted:forActiveEvent:withFileUUIDsToRetry:;
- (BOOL)eventExtensionsDetermined;
- (id)sendEventReturningAugmented:toServerURL:;
- (void)_removeActiveEventForFileUUID:;
- (void)flushEvent;
- (void).cxx_destruct;
- (void)_checkWhetherIdle:;
- (void)handleSendFinishedInvalidFileUUID:withError:;
- (void)_decrementActiveSendCount;
- (void)setReporterDelegate:;
- (BOOL)_storeServerURLMetadata:toFileUUID:;
- (void)setOnceIdleCompletion:;
- (void)_removeFileUUID:loggingError:forReason:;
- (void)_updateActiveEvent:forFileUUID:;
- (id)lastErrorEvent;
- (id)inProcessOperationQueue;
- (id)inProcessSession;
- (void)_sendCoreEvent:;
- (id)activeEventsState;
- (id)_alignPersistedStateWithExistingFileUUIDs:;
- (BOOL)dropEventsOnSendFailure;
- (void)_determineEventExtensions;
- (id)storeToPath;
- (id)initStoringToPath:withAccessControl:;
- (void)indicateOnceIdle:;
- (id)_getSplunkServerURL:;
- (void)_adoptLastErrorEvent:;
- (id)_synchonizeDiscoveredSuspended:forActiveEvent:withFileUUIDsToRetry:;
- (void)setInProcessSession:;
- (void)handleSendFinishedWithFileUUID:sendSucceeded:withStatusCode:withError:;
- (void)setStoreToPath:;
- (id)splunkURL;
- (id)initStoringToPath:;
- (id)awaitingRetry;
- (id)_newExistingFileUUIDs;
- (id)splunkStateQueue;
+ (id)sharedReporter;
+ (id)_sharedReporter:withAccessControl:;
+ (id)initSharedReporterStoringToPath:withAccessControl:;
+ (id)_errorDomainAbbreviation:;
+ (void)augmentEvent:withError:;
+ (id)_nsURLSessionTaskNameForState:;
+ (id)buildSplunkServerURLFromBase:;
+ (id)initSharedReporterStoringToPath:;
+ (id)accessControlSummary:;
@end
