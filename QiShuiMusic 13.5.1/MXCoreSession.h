@interface MXCoreSession : MXCoreSessionBase
@property (nonatomic) NSArray activeRoutesWhenInterrupted;
@property (nonatomic) NSDictionary audioBehaviour;
@property (nonatomic) NSArray audioDestinationPriority;
@property (nonatomic) NSDictionary bundleIdToPAAccessIntervalMap;
@property (nonatomic) NSString defaultVPChatMode;
@property (nonatomic) NSArray duckerSourceAudioBudgetRef;
@property (nonatomic) NSArray duckerSourceSessionRef;
@property (nonatomic) NSArray duckerSourceSystemSoundRef;
@property (nonatomic) NSArray hostProcessAttribution;
@property (nonatomic) NSArray hostProcessInfo;
@property (nonatomic) NSDictionary hostProcessPlaybackAssertions;
@property (nonatomic) NSDate idleSleepPreventorCreationTime;
@property (nonatomic) NSString idleSleepPreventorName;
@property (nonatomic) NSDate isPlayingStartTime;
@property (nonatomic) NSDate isPlayingStopTime;
@property (nonatomic) NSArray parentProcessAuditTokens;
@property (nonatomic) RBSAssertion playbackAssertionRef;
@property (nonatomic) RBSAssertion resumeAssertionRef;
@property (nonatomic) NSString waitingForRemoteInterruptionDoneIdentifier;
@property (nonatomic) {?=[8I]} auditToken;
@property (nonatomic) BOOL notFullyInactive;
@property (nonatomic) NSObject<OS_dispatch_source> sessionDeactivateTimer;
@property (nonatomic) BOOL someMXSessionIsPlaying;
@property (nonatomic) BOOL clientIsPlaying;
@property (nonatomic) BOOL hapticEngineIsPlaying;
@property (nonatomic) BOOL isRecordingMuted;
@property (nonatomic) BOOL isVibrating;
@property (nonatomic) BOOL isUsingCamera;
@property (nonatomic) BOOL mixesWithEveryone;
@property (nonatomic) BOOL stopsWhenDeviceLocks;
@property (nonatomic) BOOL hasInput;
@property (nonatomic) I currentlyControllingFlags;
@property (nonatomic) I savedCurrentlyControllingFlags;
@property (nonatomic) I savedHWControlFlagsForClientThatDoesNotActuallyPlayAudio;
@property (nonatomic) BOOL systemSoundHasModifiedCurrentlyControllingFlags;
@property (nonatomic) I applicationState;
@property (nonatomic) BOOL hasPhoneCallBehavior;
@property (nonatomic) BOOL makesMusicResume;
@property (nonatomic) BOOL mustUseDefaultClientPriority;
@property (nonatomic) BOOL handsOverInterruptionsToInterruptor;
@property (nonatomic) BOOL allowedToBeNowPlayingApp;
@property (nonatomic) BOOL isPiPPossible;
@property (nonatomic) BOOL allowsBluetoothRecordingCustomization;
@property (nonatomic) BOOL allowsDefaultBuiltInRouteCustomization;
@property (nonatomic) MXCoreSession interruptingSession;
@property (nonatomic) BOOL wasInterruptedByNowPlayingApp;
@property (nonatomic) BOOL wasInterruptedWhileSuspended;
@property (nonatomic) BOOL wasInterruptedWhileRecording;
@property (nonatomic) BOOL wasRecordingBeforeBeingInterrupted;
@property (nonatomic) BOOL waitingToResumeWhenDeviceUnlocksOrInForeground;
@property (nonatomic) BOOL waitingForEndInterruptionWhenDeviceUnlocksOrInForeground;
@property (nonatomic) BOOL waitingToResume;
@property (nonatomic) BOOL needToEndInterruption;
@property (nonatomic) BOOL wasMutedBeforeInterruption;
@property (nonatomic) q timestampWhenMostRecentlyInterrupted;
@property (nonatomic) q timestampWhenMostRecentResumableEndInterruptionWasSent;
@property (nonatomic) BOOL nowPlayingAppWasStoppedOnMostRecentActivation;
@property (nonatomic) BOOL nowPlayingAppThatWasStoppedOnMostRecentActivationWasDoingSpokenAudio;
@property (nonatomic) q timestampWhenRecordingInBackgroundMostRecentlyStopped;
@property (nonatomic) NSObject<OS_dispatch_source> resumeBackgroundAppUpdaterTimer;
@property (nonatomic) NSObject<OS_dispatch_source> extendBackgroundAppAssertionTimer;
@property (nonatomic) NSObject<OS_dispatch_source> interruptSessionWithoutValidAssertionsTimer;
@property (nonatomic) BOOL isActiveOverAirPlayVideo;
@property (nonatomic) BOOL isAudioOnlyAirPlayVideoActive;
@property (nonatomic) BOOL isNowPlayingApp;
@property (nonatomic) BOOL recentlyWantedToPauseSpokenAudio;
@property (nonatomic) BOOL waitingToSendEndInterruptionToSpokenAudioApp;
@property (nonatomic) BOOL idleSleepPreventorAllocated;
@property (nonatomic) NSObject<OS_os_transaction> playingOSTransaction;
@property (nonatomic) NSObject<OS_os_transaction> vibratingOSTransaction;
@property (nonatomic) I idleSleepPreventor;
@property (nonatomic) NSObject<OS_dispatch_source> idleSleepPreventorUpdaterTimer;
@property (nonatomic) BOOL silentMuted;
@property (nonatomic) BOOL isDucked;
@property (nonatomic) BOOL duckedOnVAD;
@property (nonatomic) I starkBorrowCount;
@property (nonatomic) BOOL tookControlOfStarkMainAudio;
@property (nonatomic) BOOL duckCommandSentToCarSession;
@property (nonatomic) BOOL triggeredRemoteInterruption;
@property (nonatomic) BOOL mustRestoreCurrentlyControllingFlags;
@property (nonatomic) BOOL willSetScreenDarkModeOnVAD;
@property (nonatomic) BOOL addSharedAudioRouteToRoutablePorts;
@property (nonatomic) BOOL hasFetchedBackgroundPrivileges;
@property (nonatomic) BOOL hasFetchedGPSPrivileges;
@property (nonatomic) BOOL interruptionFadeDurationSetByClient;
@property (nonatomic) BOOL interruptionStyleSetByClient;
@property (nonatomic) BOOL duckFadeDurationSetByClient;
@property (nonatomic) BOOL unduckFadeDurationSetByClient;
@property (nonatomic) BOOL audioHWControlFlagsSetByClient;
@property (nonatomic) BOOL routingContextSetByClient;
@property (nonatomic) BOOL auditTokenSetByClient;
@property (nonatomic) BOOL duckToLevelScalarSetByClient;
@property (nonatomic) BOOL duckToLevelDBSetByClient;
@property (nonatomic) NSDictionary activationContext;
@property (nonatomic) NSString aggregateDeviceClockUID;
@property (nonatomic) NSArray allowedPortTypes;
@property (nonatomic) NSArray allowedRouteTypes;
@property (nonatomic) NSDictionary cameraParameters;
@property (nonatomic) NSString defaultBuiltInRoutePreference;
@property (nonatomic) BOOL defaultBuiltInRoutePreferenceSetByClient;
@property (nonatomic) NSNumber desiredInputGainScalar;
@property (nonatomic) NSArray excludedPortsList;
@property (nonatomic) NSDictionary notificationsSubscribedTo;
@property (nonatomic) NSArray overridePortsList;
@property (nonatomic) NSDictionary powerProfile;
@property (nonatomic) NSString preferredHardwareFormat;
@property (nonatomic) NSString siriInputDeviceUUID;
@property (nonatomic) NSArray subPortPreferences;
@property (nonatomic) NSDictionary vibrationData;
@property (nonatomic) NSDictionary vpBlockConfiguration;
@property (nonatomic) BOOL hasEntitlementToRecordAudioInAnExtension;
@property (nonatomic) BOOL hasEntitlementToStartRecordingInTheBackground;
@property (nonatomic) BOOL hasEntitlementToSuppressRecordingStateToSystemStatus;
@property (nonatomic) BOOL hasEntitlementToSupportProcessAssertionAuditTokens;
@property (nonatomic) BOOL hasEntitlementToRecordDuringCall;
@property (nonatomic) BOOL hasEntitlementToSetEmergencyAlertPriority;
@property (nonatomic) I clientPriority;
@property (nonatomic) I mode;
@property (nonatomic) I interruptionStyle;
@property (nonatomic) BOOL isEligibleForNowPlayingAppConsideration;
@property (nonatomic) I hwControlFlags;
@property (nonatomic) BOOL prefersToTakeHWControlFlagsFromAnotherSession;
@property (nonatomic) BOOL dontTakeOverHardware;
@property (nonatomic) double preferredOutputSampleRate;
@property (nonatomic) double preferredInputSampleRate;
@property (nonatomic) BOOL preferredDecoupledInputOutput;
@property (nonatomic) BOOL requiresAggregatedInputOutput;
@property (nonatomic) NSInteger preferredIOBufferFrames;
@property (nonatomic) NSInteger preferredNumberOfInputChannels;
@property (nonatomic) NSInteger preferredNumberOfOutputChannels;
@property (nonatomic) float preferredIOBufferDuration;
@property (nonatomic) I orientationOverride;
@property (nonatomic) BOOL createSpeakerDevice;
@property (nonatomic) BOOL disallowAudioFormatChanges;
@property (nonatomic) BOOL prefersMultichannelAudio;
@property (nonatomic) NSInteger preferredStereoInputOrientation;
@property (nonatomic) BOOL enableBluetoothRecordingPreference;
@property (nonatomic) BOOL enableBluetoothRecordingPreferenceSetByClient;
@property (nonatomic) BOOL isEligibleForBTSmartRoutingConsideration;
@property (nonatomic) BOOL isEligibleForBTTriangleConsideration;
@property (nonatomic) float duckToLevelScalar;
@property (nonatomic) float duckToLevelDB;
@property (nonatomic) float duckFadeDuration;
@property (nonatomic) float unduckFadeDuration;
@property (nonatomic) BOOL userMuted;
@property (nonatomic) I shadowingAudioSessionID;
@property (nonatomic) BOOL mutesAudioBasedOnRingerSwitchState;
@property (nonatomic) float audioQueueFadeDuration;
@property (nonatomic) float audioQueueDuckVolume;
@property (nonatomic) BOOL wantsVolumeChangesWhenPaused;
@property (nonatomic) BOOL wantsVolumeChangesWhenPausedOrInactive;
@property (nonatomic) BOOL ignoreRingerSwitch;
@property (nonatomic) BOOL forceSoundCheck;
@property (nonatomic) BOOL wantsToBeVolumeButtonClient;
@property (nonatomic) BOOL prefersNoInterruptionsByRingtonesAndAlerts;
@property (nonatomic) BOOL prefersNoInterruptionsByMixableSessions;
@property (nonatomic) BOOL prefersToVibeWhenVibrationsAreDisabled;
@property (nonatomic) BOOL optOutOfMutePriority;
@property (nonatomic) BOOL prefersNoDucking;
@property (nonatomic) BOOL isIDSMXCoreSession;
@property (nonatomic) BOOL isCarSession;
@property (nonatomic) BOOL isShadowSessionForFigSBAR;
@property (nonatomic) BOOL isAudioSession;
@property (nonatomic) BOOL isFigInstantiatedAudioSession;
@property (nonatomic) BOOL doesInterAppAudio;
@property (nonatomic) BOOL needsAudioBudget;
@property (nonatomic) BOOL isLongFormAudio;
@property (nonatomic) BOOL wantsToPauseSpokenAudio;
@property (nonatomic) BOOL wantsVibrationNotifications;
@property (nonatomic) BOOL doNotResetAudioCategoryOnNextInactive;
@property (nonatomic) BOOL doNotNotifyOtherSessionsOnNextInactive;
@property (nonatomic) BOOL wantsToSendResumableEndInterruptionWhenBackgrounded;
@property (nonatomic) BOOL hasGPSPrivileges;
@property (nonatomic) BOOL isAllowedToPlayInBackground;
@property (nonatomic) BOOL wantsAutomaticClusterPairingOnPlaybackStart;
@property (nonatomic) BOOL isSharePlayMediaSession;
@property (nonatomic) BOOL isSharePlayCallSession;
@property (nonatomic) BOOL isSharePlayCapableCallSession;
@property (nonatomic) BOOL allowSystemSoundsWhileRecording;
@property (nonatomic) BOOL allowMixableAudioWhileRecording;
@property (nonatomic) BOOL prefersNoInterruptionWhenSecureMicrophoneIsEngaged;
@property (nonatomic) NSInteger pidToInheritAppStateFrom;
@property (nonatomic) NSInteger deactivateTimerDelay;
@property (nonatomic) BOOL prefersSuppressingRecordingState;
@property (nonatomic) BOOL prefersToPlayDuringWombat;
@property (nonatomic) NSInteger routeSharingPolicy;
@property (nonatomic) BOOL doesntActuallyPlayAudio;
- (void)setPidToInheritAppStateFrom:;
- (void)setPrefersMultichannelAudio:;
- (void)setWaitingToResumeWhenDeviceUnlocksOrInForeground:;
- (id)vpBlockConfiguration;
- (int)preferredNumberOfInputChannels;
- (int)pidToInheritAppStateFrom;
- (void)setWantsToPauseSpokenAudio:;
- (void)setHwControlFlags:;
- (BOOL)willSetScreenDarkModeOnVAD;
- (void)setIsDucked:;
- (void)setDuckFadeDurationSetByClient:;
- (void)setAllowedToBeNowPlayingApp:;
- (void)setInterruptingSession:;
- (float)duckToLevelDB;
- (void)setIdleSleepPreventorName:;
- (void)setNeedToEndInterruption:;
- (void)setPrefersToVibeWhenVibrationsAreDisabled:;
- (id)init;
- (void)setAuditToken:;
- (BOOL)recentlyWantedToPauseSpokenAudio;
- (BOOL)enableBluetoothRecordingPreference;
- (void)setOptOutOfMutePriority:;
- (BOOL)wantsToPauseSpokenAudio;
- (BOOL)optOutOfMutePriority;
- (BOOL)makesMusicResume;
- (void)setIgnoreRingerSwitch:;
- (void)dealloc;
- (id)isPlayingStartTime;
- (BOOL)isSharePlayCapableCallSession;
- (void)setPrefersNoInterruptionsByMixableSessions:;
- (void)setDoNotResetAudioCategoryOnNextInactive:;
- (void)setShadowingAudioSessionID:;
- (void)setCurrentlyControllingFlags:;
- (BOOL)prefersNoDucking;
- (void)setVpBlockConfiguration:;
- (BOOL)routingContextSetByClient;
- (void)setPreferredIOBufferFrames:;
- (BOOL)enableBluetoothRecordingPreferenceSetByClient;
- (id)getPreferredIOBufferFramesPointer;
- (id)playbackAssertionRef;
- (void)setMixesWithEveryone:;
- (BOOL)waitingToSendEndInterruptionToSpokenAudioApp;
- (void)setSomeMXSessionIsPlaying:;
- (void)setWantsVolumeChangesWhenPaused:;
- (unsigned int)clientPriority;
- (id)interruptSessionWithoutValidAssertionsTimer;
- (id)vibrationData;
- (void)setRecentlyWantedToPauseSpokenAudio:;
- (void)setHostProcessPlaybackAssertions:;
- (BOOL)isDucked;
- (id)resumeAssertionRef;
- (void)setPreferredStereoInputOrientation:;
- (BOOL)nowPlayingAppThatWasStoppedOnMostRecentActivationWasDoingSpokenAudio;
- (void)setWasMutedBeforeInterruption:;
- (unsigned int)currentlyControllingFlags;
- (void)setPreferredInputSampleRate:;
- (void)setInterruptionFadeDurationSetByClient:;
- (void)setBundleIdToPAAccessIntervalMap:;
- (void)setWasInterruptedByNowPlayingApp:;
- (void)setStopsWhenDeviceLocks:;
- (BOOL)hasPhoneCallBehavior;
- (void)setIsCarSession:;
- (void)setIsUsingCamera:;
- (BOOL)isPiPPossible;
- (void)setOrientationOverride:;
- (BOOL)wasMutedBeforeInterruption;
- (id)subPortPreferences;
- (id)desiredInputGainScalar;
- (void)setDuckToLevelScalar:;
- (void)setWasRecordingBeforeBeingInterrupted:;
- (void)setClientPriority:;
- (void)setHasEntitlementToStartRecordingInTheBackground:;
- (BOOL)isAllowedToPlayInBackground;
- (void)setIsActiveOverAirPlayVideo:;
- (BOOL)duckToLevelScalarSetByClient;
- (id)sessionDeactivateTimer;
- (void)setIsShadowSessionForFigSBAR:;
- (id)parentProcessAuditTokens;
- (void)setIsRecordingMuted:;
- (long long)timestampWhenRecordingInBackgroundMostRecentlyStopped;
- (id)audioBehaviour;
- (void)setForceSoundCheck:;
- (long long)timestampWhenMostRecentResumableEndInterruptionWasSent;
- (BOOL)interruptionStyleSetByClient;
- (BOOL)isAudioOnlyAirPlayVideoActive;
- (void)setApplicationState:;
- (id)activeRoutesWhenInterrupted;
- (void)setIsAllowedToPlayInBackground:;
- (id)idleSleepPreventorUpdaterTimer;
- (void)setPrefersNoInterruptionWhenSecureMicrophoneIsEngaged:;
- (float)duckToLevelScalar;
- (void)setDoesntActuallyPlayAudio:;
- (void)setRequiresAggregatedInputOutput:;
- (BOOL)forceSoundCheck;
- (void)setDuckCommandSentToCarSession:;
- (float)preferredIOBufferDuration;
- (BOOL)hasEntitlementToSuppressRecordingStateToSystemStatus;
- (BOOL)idleSleepPreventorAllocated;
- (BOOL)tookControlOfStarkMainAudio;
- (unsigned int)applicationState;
- (void)setIsEligibleForBTSmartRoutingConsideration:;
- (void)setSiriInputDeviceUUID:;
- (float)duckFadeDuration;
- (BOOL)hasEntitlementToSetEmergencyAlertPriority;
- (void)setPrefersToTakeHWControlFlagsFromAnotherSession:;
- (void)setResumeAssertionRef:;
- (void)setPreferredDecoupledInputOutput:;
- (id)siriInputDeviceUUID;
- (BOOL)isUsingCamera;
- (unsigned int)interruptionStyle;
- (id)hostProcessAttribution;
- (void)setAllowsBluetoothRecordingCustomization:;
- (BOOL)doesInterAppAudio;
- (BOOL)hasGPSPrivileges;
- (void)setHasFetchedBackgroundPrivileges:;
- (void)setWaitingToResume:;
- (void)setPreferredNumberOfOutputChannels:;
- (void)setIsSharePlayMediaSession:;
- (BOOL)isSharePlayMediaSession;
- (void)setAllowedPortTypes:;
- (void)setIdleSleepPreventorUpdaterTimer:;
- (BOOL)addSharedAudioRouteToRoutablePorts;
- (void)setWantsToSendResumableEndInterruptionWhenBackgrounded:;
- (void)setAddSharedAudioRouteToRoutablePorts:;
- (void)setDeactivateTimerDelay:;
- (void)setHasEntitlementToSuppressRecordingStateToSystemStatus:;
- (BOOL)allowSystemSoundsWhileRecording;
- (void)setPrefersNoInterruptionsByRingtonesAndAlerts:;
- (id)copyDetailedRouteDescription;
- (id)bundleIdToPAAccessIntervalMap;
- (BOOL)ignoreRingerSwitch;
- (void)setIdleSleepPreventorAllocated:;
- (void)setSavedCurrentlyControllingFlags:;
- (BOOL)hasEntitlementToRecordDuringCall;
- (BOOL)isFigInstantiatedAudioSession;
- (int)routeSharingPolicy;
- (id)duckerSourceSystemSoundRef;
- (BOOL)isIDSMXCoreSession;
- (BOOL)mustUseDefaultClientPriority;
- (BOOL)userMuted;
- (BOOL)hasEntitlementToRecordAudioInAnExtension;
- (void)setHasEntitlementToSetEmergencyAlertPriority:;
- (void)setWaitingForRemoteInterruptionDoneIdentifier:;
- (void)setUnduckFadeDurationSetByClient:;
- (void)setPreferredOutputSampleRate:;
- (void)setVibrationData:;
- (BOOL)prefersToPlayDuringWombat;
- (BOOL)duckCommandSentToCarSession;
- (BOOL)isLongFormAudio;
- (void)setOverridePortsList:;
- (void)setAggregateDeviceClockUID:;
- (void)setHapticEngineIsPlaying:;
- (float)audioQueueDuckVolume;
- (void)setIsAudioSession:;
- (BOOL)disallowAudioFormatChanges;
- (id)auditToken;
- (BOOL)isEligibleForBTSmartRoutingConsideration;
- (void)setIsVibrating:;
- (id)idleSleepPreventorName;
- (BOOL)isVibrating;
- (void)setDefaultBuiltInRoutePreference:;
- (BOOL)wantsAutomaticClusterPairingOnPlaybackStart;
- (void)setNotificationsSubscribedTo:;
- (id)excludedPortsList;
- (void)setWaitingToSendEndInterruptionToSpokenAudioApp:;
- (BOOL)mixesWithEveryone;
- (BOOL)createSpeakerDevice;
- (id)activationContext;
- (void)setPlaybackAssertionRef:;
- (id)isPlayingStopTime;
- (void)setHasGPSPrivileges:;
- (void)setSubPortPreferences:;
- (void)setDuckToLevelDBSetByClient:;
- (unsigned int)savedHWControlFlagsForClientThatDoesNotActuallyPlayAudio;
- (void)setDoesInterAppAudio:;
- (void)setAudioBehaviour:;
- (void)setPrefersNoDucking:;
- (void)setAllowSystemSoundsWhileRecording:;
- (BOOL)unduckFadeDurationSetByClient;
- (double)preferredInputSampleRate;
- (void)updateApplicationStateAndPIDToInheritAppStateFrom;
- (void)setAudioDestinationPriority:;
- (BOOL)someMXSessionIsPlaying;
- (id)allowedRouteTypes;
- (void)setRouteSharingPolicy:;
- (BOOL)prefersNoInterruptionWhenSecureMicrophoneIsEngaged;
- (id)overridePortsList;
- (BOOL)stopsWhenDeviceLocks;
- (void)setHostProcessAttribution:;
- (void)setSessionDeactivateTimer:;
- (BOOL)prefersNoInterruptionsByMixableSessions;
- (BOOL)allowsDefaultBuiltInRouteCustomization;
- (void)setNeedsAudioBudget:;
- (void)setClientIsPlaying:;
- (BOOL)wasRecordingBeforeBeingInterrupted;
- (void)setIsSharePlayCapableCallSession:;
- (BOOL)notFullyInactive;
- (void)setDisallowAudioFormatChanges:;
- (id)aggregateDeviceClockUID;
- (id)audioDestinationPriority;
- (void)setWantsAutomaticClusterPairingOnPlaybackStart:;
- (void)setIsSharePlayCallSession:;
- (void)setWantsVolumeChangesWhenPausedOrInactive:;
- (float)audioQueueFadeDuration;
- (id)defaultVPChatMode;
- (BOOL)prefersSuppressingRecordingState;
- (void)setHasInput:;
- (unsigned int)idleSleepPreventor;
- (id)vibratingOSTransaction;
- (id)interruptingSession;
- (void)setUserMuted:;
- (void)setDuckerSourceSystemSoundRef:;
- (double)preferredOutputSampleRate;
- (BOOL)isRecordingMuted;
- (void)setActiveRoutesWhenInterrupted:;
- (void)setMakesMusicResume:;
- (unsigned int)savedCurrentlyControllingFlags;
- (void)setIsLongFormAudio:;
- (void)setExcludedPortsList:;
- (void)setDuckToLevelDB:;
- (BOOL)isCarSession;
- (id)extendBackgroundAppAssertionTimer;
- (void)setDefaultBuiltInRoutePreferenceSetByClient:;
- (void)setPreferredHardwareFormat:;
- (void)setHasPhoneCallBehavior:;
- (float)unduckFadeDuration;
- (BOOL)waitingToResumeWhenDeviceUnlocksOrInForeground;
- (void)setHasEntitlementToRecordAudioInAnExtension:;
- (void)setUnduckFadeDuration:;
- (void)setIsPiPPossible:;
- (BOOL)nowPlayingAppWasStoppedOnMostRecentActivation;
- (unsigned int)starkBorrowCount;
- (void)setIdleSleepPreventor:;
- (void)setVibratingOSTransaction:;
- (void)setTimestampWhenMostRecentlyInterrupted:;
- (BOOL)hasFetchedBackgroundPrivileges;
- (BOOL)wantsToBeVolumeButtonClient;
- (void)setDesiredInputGainScalar:;
- (BOOL)waitingForEndInterruptionWhenDeviceUnlocksOrInForeground;
- (BOOL)hapticEngineIsPlaying;
- (id)duckerSourceAudioBudgetRef;
- (id)getPreferredOutputSampleRatePointer;
- (BOOL)isAudioSession;
- (BOOL)prefersMultichannelAudio;
- (void)setIsPlayingStopTime:;
- (void)setExtendBackgroundAppAssertionTimer:;
- (void)setStarkBorrowCount:;
- (BOOL)wantsVolumeChangesWhenPaused;
- (BOOL)wasInterruptedWhileSuspended;
- (int)preferredStereoInputOrientation;
- (BOOL)handsOverInterruptionsToInterruptor;
- (BOOL)mutesAudioBasedOnRingerSwitchState;
- (void)setPreferredNumberOfInputChannels:;
- (void)setCameraParameters:;
- (BOOL)silentMuted;
- (BOOL)triggeredRemoteInterruption;
- (BOOL)audioHWControlFlagsSetByClient;
- (void)setMustUseDefaultClientPriority:;
- (BOOL)hasInput;
- (BOOL)duckedOnVAD;
- (id)preferredHardwareFormat;
- (void)setIsAudioOnlyAirPlayVideoActive:;
- (BOOL)duckFadeDurationSetByClient;
- (void)setInterruptionStyle:;
- (void)setDuckFadeDuration:;
- (BOOL)needsAudioBudget;
- (void)setIsPlayingStartTime:;
- (void)setNowPlayingAppWasStoppedOnMostRecentActivation:;
- (void)setAudioQueueFadeDuration:;
- (unsigned int)hwControlFlags;
- (id)hostProcessPlaybackAssertions;
- (BOOL)doesntActuallyPlayAudio;
- (BOOL)isShadowSessionForFigSBAR;
- (void)setPowerProfile:;
- (BOOL)requiresAggregatedInputOutput;
- (BOOL)prefersToVibeWhenVibrationsAreDisabled;
- (BOOL)defaultBuiltInRoutePreferenceSetByClient;
- (void)setPrefersSuppressingRecordingState:;
- (int)preferredIOBufferFrames;
- (BOOL)wasInterruptedByNowPlayingApp;
- (BOOL)wasInterruptedWhileRecording;
- (void)setAuditTokenSetByClient:;
- (BOOL)mustRestoreCurrentlyControllingFlags;
- (BOOL)isEligibleForBTTriangleConsideration;
- (BOOL)allowMixableAudioWhileRecording;
- (void)setWasInterruptedWhileSuspended:;
- (void)setPrefersToPlayDuringWombat:;
- (void)setIsEligibleForNowPlayingAppConsideration:;
- (void)setWillSetScreenDarkModeOnVAD:;
- (BOOL)systemSoundHasModifiedCurrentlyControllingFlags;
- (void)setWasInterruptedWhileRecording:;
- (id)idleSleepPreventorCreationTime;
- (void)setIsEligibleForBTTriangleConsideration:;
- (void)setCreateSpeakerDevice:;
- (id)hostProcessInfo;
- (void)setIsFigInstantiatedAudioSession:;
- (BOOL)isNowPlayingApp;
- (void)setMustRestoreCurrentlyControllingFlags:;
- (void)setNowPlayingAppThatWasStoppedOnMostRecentActivationWasDoingSpokenAudio:;
- (long long)timestampWhenMostRecentlyInterrupted;
- (void)setRoutingContextSetByClient:;
- (BOOL)needToEndInterruption;
- (void)setWantsToBeVolumeButtonClient:;
- (id)allowedPortTypes;
- (void)setAllowMixableAudioWhileRecording:;
- (id)cameraParameters;
- (void)setHasFetchedGPSPrivileges:;
- (unsigned int)mode;
- (void)setSavedHWControlFlagsForClientThatDoesNotActuallyPlayAudio:;
- (BOOL)duckToLevelDBSetByClient;
- (void)setDuckedOnVAD:;
- (BOOL)waitingToResume;
- (BOOL)hasEntitlementToSupportProcessAssertionAuditTokens;
- (BOOL)isSharePlayCallSession;
- (id)duckerSourceSessionRef;
- (BOOL)dontTakeOverHardware;
- (BOOL)doNotNotifyOtherSessionsOnNextInactive;
- (void)setDoNotNotifyOtherSessionsOnNextInactive:;
- (void)setWaitingForEndInterruptionWhenDeviceUnlocksOrInForeground:;
- (void)setTookControlOfStarkMainAudio:;
- (BOOL)preferredDecoupledInputOutput;
- (void)setPreferredIOBufferDuration:;
- (BOOL)prefersToTakeHWControlFlagsFromAnotherSession;
- (id)defaultBuiltInRoutePreference;
- (void)setParentProcessAuditTokens:;
- (void)setSystemSoundHasModifiedCurrentlyControllingFlags:;
- (void)setHasEntitlementToSupportProcessAssertionAuditTokens:;
- (BOOL)hasEntitlementToStartRecordingInTheBackground;
- (void)setIdleSleepPreventorCreationTime:;
- (int)preferredNumberOfOutputChannels;
- (BOOL)prefersNoInterruptionsByRingtonesAndAlerts;
- (BOOL)auditTokenSetByClient;
- (void)setDuckToLevelScalarSetByClient:;
- (BOOL)interruptionFadeDurationSetByClient;
- (BOOL)wantsToSendResumableEndInterruptionWhenBackgrounded;
- (void)setInterruptSessionWithoutValidAssertionsTimer:;
- (void)setHandsOverInterruptionsToInterruptor:;
- (unsigned int)orientationOverride;
- (BOOL)wantsVolumeChangesWhenPausedOrInactive;
- (BOOL)allowedToBeNowPlayingApp;
- (void)setPlayingOSTransaction:;
- (BOOL)isEligibleForNowPlayingAppConsideration;
- (void)setIsIDSMXCoreSession:;
- (BOOL)allowsBluetoothRecordingCustomization;
- (void)setInterruptionStyleSetByClient:;
- (void)setSilentMuted:;
- (BOOL)clientIsPlaying;
- (id)resumeBackgroundAppUpdaterTimer;
- (void)setDuckerSourceSessionRef:;
- (void)setEnableBluetoothRecordingPreferenceSetByClient:;
- (id)waitingForRemoteInterruptionDoneIdentifier;
- (void)setEnableBluetoothRecordingPreference:;
- (BOOL)isActiveOverAirPlayVideo;
- (void)setHostProcessInfo:;
- (id)notificationsSubscribedTo;
- (void)setTriggeredRemoteInterruption:;
- (id)playingOSTransaction;
- (void)setTimestampWhenRecordingInBackgroundMostRecentlyStopped:;
- (void)setResumeBackgroundAppUpdaterTimer:;
- (void)setMode:;
- (void)setAllowedRouteTypes:;
- (void)setHasEntitlementToRecordDuringCall:;
- (void)setDontTakeOverHardware:;
- (id)powerProfile;
- (void)setDuckerSourceAudioBudgetRef:;
- (void)setTimestampWhenMostRecentResumableEndInterruptionWasSent:;
- (void)setAudioHWControlFlagsSetByClient:;
- (void)setMutesAudioBasedOnRingerSwitchState:;
- (void)setAudioQueueDuckVolume:;
- (void)setDefaultVPChatMode:;
- (BOOL)doNotResetAudioCategoryOnNextInactive;
- (void)setActivationContext:;
- (int)deactivateTimerDelay;
- (void)setNotFullyInactive:;
- (unsigned int)shadowingAudioSessionID;
- (BOOL)hasFetchedGPSPrivileges;
- (BOOL)wantsVibrationNotifications;
- (void)setAllowsDefaultBuiltInRouteCustomization:;
- (void)setIsNowPlayingApp:;
- (void)setWantsVibrationNotifications:;
@end
