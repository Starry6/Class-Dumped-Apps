@interface VECompileReaderUnit : VEUnitObject
@property (nonatomic) NSError readerError;
@property (nonatomic) Q pixelFormat;
@property (nonatomic) VETransData transData;
@property (nonatomic) AVAssetReader reader;
@property (nonatomic) AVAssetReaderOutput videoOutput;
@property (nonatomic) AVAssetReaderOutput audioOutput;
@property (nonatomic) NSObject<OS_dispatch_queue> videoDecodeQueue;
@property (nonatomic) NSObject<OS_dispatch_queue> audioDecodeQueue;
@property (nonatomic) Q transStatus;
@property (nonatomic) Q videoTransStatus;
@property (nonatomic) Q audioTransStatus;
@property (nonatomic) ^{opaqueCMSampleBuffer=} lastSampleBuffer;
@property (nonatomic) {?=qiIq} latestVideoSampleTime;
@property (nonatomic) VEInsertFrameReader insertReader;
@property (nonatomic) VEAudioReaderUnit audioReaderUnit;
@property (nonatomic) VEVideoReaderUnit videoReaderUnit;
@property (nonatomic) VEConfigData configData;
@property (nonatomic) BOOL exportReaptErrorOpt;
@property (nonatomic) VEPlayerMattingManager mattingManager;
@property (nonatomic) BOOL enable10BitSDR;
@property (nonatomic) @? completeBlock;
@property (nonatomic) @? faceDetectEvent;
@property (nonatomic) UIImage waterMarkImage;
@property (nonatomic) NSError error;
@property (nonatomic) {?=qiIq} startTime;
@property (nonatomic) {?=qiIq} previousVideoFrameTime;
@property (nonatomic) {?=qiIq} previousAudioFrameTime;
@property (nonatomic) NSInteger detectPendingCount;
@property (nonatomic) Q hash;
@property (nonatomic) # superclass;
@property (nonatomic) NSString description;
@property (nonatomic) NSString debugDescription;
@property (nonatomic) NSString route;
@property (nonatomic) q curVideoStage;
@property (nonatomic) q curAudioStage;
- (id)audioReaderUnit;
- (id)faceDetectEvent;
- (void)setTransStatus:;
- (long long)getReaderStatus;
- (BOOL)initAssetReader;
- (void)setAudioOutput:;
- (void)setReaderError:;
- (id)videoReaderUnit;
- (id)audioDecodeQueue;
- (id)audioReaderOutput;
- (unsigned long long)audioTransStatus;
- (void)cancelReader;
- (void)cancelReaderWithError:;
- (id)completeBlock;
- (id)configData;
- (long long)curAudioStage;
- (long long)curVideoStage;
- (int)detectPendingCount;
- (BOOL)enable10BitSDR;
- (BOOL)exportReaptErrorOpt;
- (BOOL)getAudioWriterFinish;
- (id)getReaderError;
- (BOOL)getVideoWriterFinish;
- (BOOL)initAudioReader:;
- (BOOL)initVideoReader:;
- (id)initWithVideoData:outUrl:completionHandler:;
- (id)initWithVideoData:outUrl:usenewModule:completionHandler:;
- (id)insertReader;
- (id)lastSampleBuffer;
- (id)latestVideoSampleTime;
- (void)logAssets:additionInfo:;
- (void)logVideoCompositionInvalidReason;
- (void)logVolumeInfoInMap:additionInfo:;
- (id)mattingManager;
- (void)pauseForBackground;
- (id)previousAudioFrameTime;
- (id)previousVideoFrameTime;
- (BOOL)processSampleData:;
- (id)readerError;
- (id)requstSampleData:;
- (void)resumeForBackground;
- (void)setAudioDecodeQueue:;
- (void)setAudioReaderUnit:;
- (void)setAudioTransStatus:;
- (void)setCompleteBlock:;
- (void)setConfigData:;
- (void)setCurAudioStage:;
- (void)setCurVideoStage:;
- (void)setDetectPendingCount:;
- (void)setEnable10BitSDR:;
- (void)setExportReaptErrorOpt:;
- (void)setFaceDetectEvent:;
- (void)setInsertReader:;
- (void)setLastSampleBuffer:;
- (void)setLatestVideoSampleTime:;
- (void)setMattingManager:;
- (void)setPreviousAudioFrameTime:;
- (void)setPreviousVideoFrameTime:;
- (void)setTransData:;
- (void)setVideoDecodeQueue:;
- (void)setVideoReaderUnit:;
- (void)setVideoTransStatus:;
- (void)setWaterMarkImage:;
- (id)transData;
- (unsigned long long)transStatus;
- (id)videoDecodeQueue;
- (id)videoReaderOutput;
- (unsigned long long)videoTransStatus;
- (id)waterMarkImage;
- (void)dealloc;
- (id)videoOutput;
- (void)setRoute:;
- (void)setPixelFormat:;
- (id)route;
- (BOOL)setConfig:;
- (void)setStartTime:;
- (void)setVideoOutput:;
- (void)setError:;
- (id)error;
- (id)startTime;
- (void).cxx_destruct;
- (unsigned long long)pixelFormat;
- (id)reader;
- (id)audioOutput;
- (BOOL)videoComposition:shouldContinueValidatingAfterFindingInvalidValueForKey:;
- (BOOL)videoComposition:shouldContinueValidatingAfterFindingEmptyTimeRange:;
- (BOOL)videoComposition:shouldContinueValidatingAfterFindingInvalidTimeRangeInInstruction:;
- (BOOL)videoComposition:shouldContinueValidatingAfterFindingInvalidTrackIDInInstruction:layerInstruction:asset:;
- (void)setReader:;
- (BOOL)startReader;
- (void)stopReader;
@end
