@interface DAAccount : NSObject
@property (nonatomic) NSMutableDictionary dataclassPropertyURLsByDataclass;
@property (nonatomic) DAStatusReport statusReport;
@property (nonatomic) DATrustHandler trustHandler;
@property (nonatomic) BOOL shouldUseOpportunisticSockets;
@property (nonatomic) BOOL wasUserInitiated;
@property (nonatomic) NSMutableArray pendingQueries;
@property (nonatomic) NSObject<OS_dispatch_queue> pendingQueryQueue;
@property (nonatomic) NSDate lastQueryStartedTime;
@property (nonatomic) NSString accountID;
@property (nonatomic) NSInteger daAccountVersion;
@property (nonatomic) NSString persistentUUID;
@property (nonatomic) NSString accountDescription;
@property (nonatomic) NSString publicDescription;
@property (nonatomic) NSString username;
@property (nonatomic) NSString user;
@property (nonatomic) NSString host;
@property (nonatomic) NSString hostWithoutPath;
@property (nonatomic) q port;
@property (nonatomic) NSString password;
@property (nonatomic) BOOL useSSL;
@property (nonatomic) q enabledDataclassesBitmask;
@property (nonatomic) BOOL isChildAccount;
@property (nonatomic) ACAccount backingAccountInfo;
@property (nonatomic) DATaskManager taskManager;
@property (nonatomic) NSString changeTrackingID;
@property (nonatomic) NSInteger keychainAccessibilityType;
@property (nonatomic) NSString scheduleIdentifier;
@property (nonatomic) NSData signingIdentityPersistentReference;
@property (nonatomic) NSData encryptionIdentityPersistentReference;
@property (nonatomic) BOOL shouldDoInitialAutodiscovery;
@property (nonatomic) BOOL shouldAutodiscoverAccountProperties;
@property (nonatomic) NSString scheme;
@property (nonatomic) NSURL principalURL;
@property (nonatomic) NSString principalPath;
@property (nonatomic) NSString clientToken;
@property (nonatomic) NSString emailAddress;
@property (nonatomic) NSArray emailAddresses;
@property (nonatomic) NSString preferredAddress;
@property (nonatomic) NSArray appIdsForPasswordPrompt;
@property (nonatomic) BOOL shouldFailAllTasks;
@property (nonatomic) NSData identityPersist;
@property (nonatomic) BOOL isValidating;
@property (nonatomic) NSString userAgentHeader;
@property (nonatomic) NSSet serverComplianceClasses;
@property (nonatomic) NSString serverRoot;
@property (nonatomic) NSString sourceApplicationBundleIdentifier;
- (id)emailAddress;
- (id)protocolVersion;
- (void)setUser:;
- (void)reload;
- (id)principalURL;
- (void)setPassword:;
- (id)emailAddresses;
- (BOOL)isDisabled;
- (id)username;
- (id)password;
- (void)shutdown;
- (void)dealloc;
- (id)accountID;
- (id)scheme;
- (id)host;
- (void)setEmailAddress:;
- (void)setHost:;
- (id)redactedDescription;
- (void)setUsername:;
- (void)setSourceApplicationBundleIdentifier:;
- (long long)port;
- (void)cancelGrantedDelegatesListRequestWithID:;
- (void)setPort:;
- (id)sourceApplicationBundleIdentifier;
- (id)changeTrackingID;
- (void)setAccountDescription:;
- (id)displayName;
- (void)tearDown;
- (void)setObject:forKeyedSubscript:;
- (id)userAgentHeader;
- (id)syncStoreIdentifier;
- (id)objectForKeyedSubscript:;
- (id)additionalHeaderValues;
- (id)user;
- (id)stateString;
- (void).cxx_destruct;
- (id)accountPropertyForKey:;
- (id)accountDescription;
- (id)dataclassProperties;
- (id)clientToken;
- (void)cancelCalendarAvailabilityRequestWithID:;
- (void)setEmailAddresses:;
- (id)description;
- (void)cancelCalendarDirectorySearchWithID:;
- (void)setAccountProperty:forKey:;
- (BOOL)isEnabledForDataclass:;
- (id)accountsProviderWithDBHelper:;
- (id)publicDescription;
- (void)setEnabled:forDataclass:;
- (BOOL)isEqualToAccount:;
- (id)accountTypeIdentifier;
- (id)taskManager;
- (id)principalPath;
- (void)setPrincipalPath:;
- (void)removeAccountPropertyForKey:;
- (BOOL)isChildAccount;
- (BOOL)wasUserInitiated;
- (id)scheduleIdentifier;
- (BOOL)useSSL;
- (void)setUseSSL:;
- (id)trustHandler;
- (id)pendingQueries;
- (void)setPendingQueries:;
- (id)preferredAddress;
- (id)setEncryptionIdentityPersistentReference:;
- (BOOL)accountBoolPropertyForKey:;
- (id)draftsFolder;
- (BOOL)reattemptInvitationLinkageForMetaData:inFolderWithId:;
- (id)unactionableICSRepresentationForMetaData:inFolderWithId:outSummary:;
- (id)persistentUUID;
- (id)deletedItemsFolder;
- (id)inboxFolder;
- (int)supportsEmailFlagging;
- (id)backingAccountInfo;
- (BOOL)enabledForDADataclass:;
- (int)supportsMailboxSearch;
- (id)signingIdentityPersistentReference;
- (id)encryptionIdentityPersistentReference;
- (BOOL)isHotmailAccount;
- (id)sentItemsFolder;
- (id)setSigningIdentityPersistentReference:;
- (id)oauth2Token;
- (void)performSearchQuery:;
- (void)cancelSearchQuery:;
- (id)initWithBackingAccountInfo:;
- (void)_refreshCredential;
- (void)ingestBackingAccountInfoProperties;
- (id)containerProviderWithDBHelper:;
- (int)daAccountVersion;
- (void)setDAAccountVersion:;
- (BOOL)upgradeAccount;
- (void)resetAccountID;
- (void)_setPersistentUUID:;
- (BOOL)enabledForAnyDADataclasses:;
- (void)setEnabled:forDADataclass:;
- (long long)enabledDataclassesBitmask;
- (id)spinnerIdentifiers;
- (void)setAccountBoolProperty:forKey:;
- (int)accountIntPropertyForKey:;
- (void)setAccountIntProperty:forKey:;
- (void)resumeMonitoringFoldersWithIDs:;
- (void)suspendMonitoringFoldersWithIDs:;
- (void)stopMonitoringFolderWithID:;
- (void)setConsumer:forTask:;
- (id)consumerForTask:;
- (void)removeConsumerForTask:;
- (void)clientTokenRequestedByServer;
- (id)passwordWithExpected:;
- (void)performUsingAccountPersona:;
- (id)urlFromDataclassPropertiesForDataclass:;
- (id)hostFromDataclassPropertiesForDataclass:;
- (BOOL)useSSLFromDataclassPropertiesForDataclass:;
- (long long)portFromDataclassPropertiesForDataclass:;
- (id)usernameWithoutDomain;
- (id)domainOnly;
- (id)hostWithoutPath;
- (BOOL)accountContainsEmailAddress:;
- (void)setPrincipalURL:;
- (void)checkValidityOnAccountStore:withConsumer:;
- (void)checkValidityOnAccountStore:withConsumer:inQueue:;
- (BOOL)saveModifiedPropertiesOnBackingAccount;
- (void)discoverInitialPropertiesWithConsumer:;
- (BOOL)autodiscoverAccountConfigurationWithConsumer:;
- (BOOL)shouldDoInitialAutodiscovery;
- (void)setShouldDoInitialAutodiscovery:;
- (BOOL)shouldAutodiscoverAccountProperties;
- (id)onBehalfOfBundleIdentifier;
- (BOOL)shouldRemoveDBSyncDataOnAccountChange;
- (void)removeDBSyncDataForAccountChange:;
- (void)accountDidChangeWithChangeInfo:;
- (void)_handleSignificantPropertyChanges:;
- (id)serverRoot;
- (id)serverComplianceClasses;
- (BOOL)handleCertificateError:;
- (id)customConnectionProperties;
- (id)oauthInfoProvider;
- (BOOL)monitorFoldersWithIDs:;
- (BOOL)monitorFolderWithID:;
- (void)stopMonitoringFoldersWithIDs:;
- (void)stopMonitoringFolders;
- (id)defaultContainerIdentifierForDADataclass:;
- (void)removeClientCertificateData;
- (BOOL)saveAccountPropertiesWithError:;
- (BOOL)saveAccountProperties;
- (void)updateExistingAccountProperties;
- (int)keychainAccessibilityType;
- (id)addUsernameToURL:;
- (BOOL)preflightSaveWithAccountProvider:;
- (BOOL)canSaveWithAccountProvider:;
- (id)identityPersist;
- (void)setIdentityCertificatePersistentID:managedByProfile:;
- (BOOL)_isIdentityManagedByProfile;
- (id)exceptionsDict;
- (id)exceptionsForDigest:;
- (void)setExceptions:forDigest:;
- (void)cleanupAccountFiles;
- (BOOL)resetCertWarnings;
- (void)resetStatusReport;
- (BOOL)shouldFailAllTasks;
- (BOOL)accountHasSignificantPropertyChangesWithChangeInfo:;
- (BOOL)isActiveSyncAccount;
- (BOOL)isLDAPAccount;
- (BOOL)isCalDAVAccount;
- (BOOL)isCardDAVAccount;
- (BOOL)isDelegateAccount;
- (BOOL)isCalDAVChildAccount;
- (BOOL)isGoogleAccount;
- (BOOL)isSubscribedCalendarAccount;
- (id)copyStorageSession;
- (BOOL)shouldCancelTaskDueToOnPowerFetchMode;
- (void)saveXpcActivity:;
- (BOOL)hasXpcActivity;
- (void)incrementXpcActivityContinueCount;
- (void)decrementXpcActivityContinueCount;
- (void)removeXpcActivity;
- (void)saveFetchingAutomaticallyState:;
- (BOOL)getFetchingAutomaticallyState;
- (id)statusReport;
- (void)setStatusReport:;
- (BOOL)shouldUseOpportunisticSockets;
- (void)setShouldUseOpportunisticSockets:;
- (void)setWasUserInitiated:;
- (void)setTrustHandler:;
- (id)appIdsForPasswordPrompt;
- (BOOL)isValidating;
- (void)setIsValidating:;
- (id)dataclassPropertyURLsByDataclass;
- (void)setDataclassPropertyURLsByDataclass:;
- (id)pendingQueryQueue;
- (void)setPendingQueryQueue:;
- (id)lastQueryStartedTime;
- (void)setLastQueryStartedTime:;
- (BOOL)handleTrustChallenge:;
- (BOOL)handleTrustChallenge:completionHandler:;
- (id)getAppleIDSession;
- (void)addToCoreDAVLoggingDelegates;
- (void)removeFromCoreDAVLoggingDelegates;
- (id)localizedIdenticalAccountFailureMessage;
- (id)localizedInvalidPasswordMessage;
- (void)dropAssertionsAndRenewCredentialsInQueue:withHandler:;
- (void)_webLoginRequestedAtURL:reasonString:inQueue:completionBlock:;
- (void)webLoginRequestedAtURL:reasonString:inQueue:completionBlock:;
- (void)handleValidationError:completion:;
- (BOOL)accountHasSignificantPropertyChangesFromOldAccountInfo:;
- (void)accountDidChangeFromOldAccountInfo:;
- (id)defaultEventsFolder;
- (id)eventsFolders;
- (void)synchronizeEventsFolder:previousTag:actions:highestIdContext:isInitialUberSync:isResyncAfterConnectionFailed:moreLocalChangesAvailable:consumer:;
- (BOOL)sendEmailsForCalEvents:consumer:;
- (id)beginDownloadingAttachmentWithUUID:consumer:;
- (void)cancelDownloadingInstance:error:;
- (id)requestCalendarAvailabilityForStartDate:endDate:ignoredEventID:addresses:consumer:;
- (id)requestGrantedDelegatesListWithConsumer:;
- (id)updateGrantedDelegatePermission:consumer:;
- (void)cancelUpdateGrantedDelegatePermissionRequestWithID:;
- (id)performCalendarDirectorySearchForTerms:recordTypes:resultLimit:consumer:;
- (void)performGroupExpansionForPrincipalPath:consumer:;
- (id)respondToShareRequestForCalendar:withResponse:consumer:;
- (id)reportShareRequestAsJunkForCalendar:consumer:;
- (void)cancelShareResponseInstance:error:;
- (id)fetchOfficeHoursWithConsumer:error:;
- (id)setOfficeHours:withConsumer:error:;
- (void)cancelOfficeHoursRequestWithID:;
- (id)defaultContactsFolder;
- (id)contactsFolders;
- (void)synchronizeContactsFolder:previousTag:previousSyncToken:actions:highestIdContext:isInitialUberSync:isResyncAfterConnectionFailed:previousTagIsSuspect:moreLocalChangesAvailable:consumer:;
- (void)updateOofSettingsWithParams:consumer:;
- (void)retrieveOofSettingsForConsumer:;
- (BOOL)isOofSupported;
- (void)_dequeueQuery;
- (id)getPendingQueryQueue;
- (void)cancelAllSearchQueries;
- (BOOL)searchQueriesRunning;
- (void)_reallyPerformSearchQuery:;
- (void)_reallyCancelSearchQuery:;
- (void)_reallyCancelPendingSearchQuery:;
- (void)_reallyCancelAllSearchQueries;
- (BOOL)_reallySearchQueriesRunning;
- (id)defaultToDosFolder;
- (id)toDosFolders;
- (void)synchronizeToDosFolder:previousTag:actions:highestIdContext:isInitialUberSync:isResyncAfterConnectionFailed:moreLocalChangesAvailable:consumer:;
- (int)toDosNumberOfPastDaysToSync;
- (void)setToDosNumberOfPastDaysToSync:;
- (id)defaultNotesFolder;
- (id)notesFolders;
- (void)synchronizeNotesFolder:noteContext:previousTag:actions:changeSet:notesToDeleteAfterSync:isInitialUberSync:isResyncAfterConnectionFailed:moreLocalChangesAvailable:consumer:;
+ (id)daAccountSubclassWithBackingAccountInfo:;
+ (BOOL)shouldCreateAccountForBackingAccountInfo:;
+ (id)_leafAccountTypes;
+ (id)_leafAccountTypes;
+ (id)oneshotListOfAccountIDs;
+ (void)reacquireClientRestrictions:;
@end
