@interface RPScreenRecorder : NSObject
@property (nonatomic) Q previousAudioSessionOptions;
@property (nonatomic) NSString previousAudioCategory;
@property (nonatomic) BOOL recording;
@property (nonatomic) BOOL available;
@property (nonatomic) UIWindow windowToRecord;
@property (nonatomic) UIView cameraPreviewView;
@property (nonatomic) RPPipViewController pipViewController;
@property (nonatomic) RPPGPipViewController pgPipViewController;
@property (nonatomic) @? saveVideoToCameraRollCompletionBlock;
@property (nonatomic) BOOL hasUserConsentForCamera;
@property (nonatomic) BOOL hasUserConsentForMicrophone;
@property (nonatomic) @? captureHandler;
@property (nonatomic) RPBroadcastController activeBroadcastController;
@property (nonatomic) BOOL paused;
@property (nonatomic) NSInteger processIDForAudioCapture;
@property (nonatomic) BOOL systemRecording;
@property (nonatomic) NSURL broadcastURL;
@property (nonatomic) <RPScreenRecorderPrivateDelegate> privateDelegate;
@property (nonatomic) <RPScreenRecordeScreenCapureKitDelegate> screenCaptureKitDelegate;
@property (nonatomic) <RPScreenRecorderDelegate> secondDelegate;
@property (nonatomic) <RPScreenRecorderDelegate> delegate;
@property (nonatomic) BOOL microphoneEnabled;
@property (nonatomic) BOOL cameraEnabled;
@property (nonatomic) q cameraPosition;
@property (nonatomic) Q hash;
@property (nonatomic) # superclass;
@property (nonatomic) NSString description;
@property (nonatomic) NSString debugDescription;
- (void)tm_hook_handleStopMethodCalled:;
- (void)tm_hook_handleStartMethodCalled:;
- (void)tm_hook_screen_recorder_startRecordingWithHandler:;
- (void)tm_hook_screen_recorder_startRecordingWithMicrophoneEnabled:handler:;
- (void)tm_hook_screen_recorder_stopRecordingWithHandler:;
- (void)tspk_handleStartMethodCalled:;
- (void)tspk_handleStopMethodCalled:;
- (void)tspk_screen_recorder_startRecordingWithHandler:;
- (void)tspk_screen_recorder_startRecordingWithMicrophoneEnabled:handler:;
- (void)tspk_screen_recorder_stopRecordingWithHandler:;
- (void)setMicrophoneEnabled:;
- (id)init;
- (void)dealloc;
- (void)setDelegate:;
- (long long)cameraPosition;
- (BOOL)isMicrophoneEnabled;
- (BOOL)isPaused;
- (void)setAvailable:;
- (void)setPaused:;
- (BOOL)isAvailable;
- (id)delegate;
- (id)privateDelegate;
- (void)setPrivateDelegate:;
- (void).cxx_destruct;
- (BOOL)isRecording;
- (void)setRecording:;
- (void)stopCaptureWithHandler:;
- (void)startCaptureWithHandler:completionHandler:;
- (id)audioQueue;
- (void)stopSystemRecordingWithURLHandler:;
- (void)setSystemRecording:;
- (void)startSystemRecordingWithMicrophoneEnabled:handler:;
- (void)setCameraPosition:;
- (id)pipViewController;
- (id)videoQueue;
- (void)stopRecordingWithOutputURL:completionHandler:;
- (void)startRecordingWithHandler:;
- (void)stopRecordingWithHandler:;
- (id)secondDelegate;
- (void)setSecondDelegate:;
- (void)updateRecordingAvailability:;
- (void)startRecordingWithMicrophoneEnabled:handler:;
- (void)stopRecordingWithVideoURLHandler:;
- (void)stopRecordingWithAdditionalShareFileAttachment:overrideShareMessage:previewViewControllerOverrideTintColor:handler:;
- (void)discardRecordingWithHandler:;
- (void)pauseInAppRecording;
- (void)resumeInAppRecording;
- (void)pauseInAppCapture;
- (void)resumeInAppCapture;
- (void)captureHandlerWithSample:timingData:;
- (void)captureHandlerWithAudioSample:bufferType:;
- (void)startInAppBroadcastWithHandler:;
- (void)stopInAppBroadcastWithHandler:;
- (void)pauseInAppBroadcast;
- (void)resumeInAppBroadcast;
- (void)setBroadcastURL:;
- (void)clientDidUpdateBroadcastServiceInfo:;
- (void)stopSystemRecording:;
- (void)resumeSystemRecording;
- (void)setupSystemBroadcastWithExtension:handler:;
- (void)startSystemBroadcastWithHandler:;
- (void)stopSystemBroadcastWithHandler:;
- (void)resumeSystemBroadcast;
- (void)startClipBufferingWithCompletionHandler:;
- (void)stopClipBufferingWithCompletionHandler:;
- (void)exportClipToURL:duration:completionHandler:;
- (void)resumeInAppClip;
- (void)saveVideoToCameraRoll:handler:;
- (void)saveClipToCameraRoll:handler:;
- (void)saveVideo:handler:;
- (void)removePipView;
- (void)setCameraEnabled:;
- (void)instantiatePipView;
- (void)isScreenRecordingAvailable;
- (void)registerAppForStateChangeSetRotationLock:;
- (void)updateStateWithActive:error:;
- (id)handleUnavailableState;
- (id)applicationWindow;
- (id)currentWindowSize;
- (id)currentWindowLayerContextID;
- (void)setWindowRotationLocked:;
- (id)processQueue;
- (void)recordingLockInterrupted:;
- (void)recordingTimerDidUpdate:;
- (void)recordingDidPause;
- (void)shouldResumeSessionType:;
- (void)updateScreenRecordingStateWithCurrentState:;
- (void)recordingDidStopWithError:movieURL:;
- (BOOL)shouldNotifyDidStop;
- (void)didStopRecordingWithError:previewViewController:;
- (void)notifyDelegateOfUpdatedState;
- (void)updateProcessIDForAudioCapture:;
- (BOOL)checkContextID:withHandler:;
- (BOOL)screenRecordingSupportedOnDevice;
- (BOOL)screenRecordingAllowed;
- (BOOL)isCameraEnabled;
- (id)cameraPreviewView;
- (void)setCameraPreviewView:;
- (unsigned long long)previousAudioSessionOptions;
- (void)setPreviousAudioSessionOptions:;
- (id)previousAudioCategory;
- (void)setPreviousAudioCategory:;
- (id)windowToRecord;
- (void)setWindowToRecord:;
- (void)setPipViewController:;
- (id)pgPipViewController;
- (void)setPgPipViewController:;
- (id)saveVideoToCameraRollCompletionBlock;
- (void)setSaveVideoToCameraRollCompletionBlock:;
- (BOOL)hasUserConsentForCamera;
- (void)setHasUserConsentForCamera:;
- (BOOL)hasUserConsentForMicrophone;
- (void)setHasUserConsentForMicrophone:;
- (id)captureHandler;
- (void)setCaptureHandler:;
- (id)activeBroadcastController;
- (void)setActiveBroadcastController:;
- (int)processIDForAudioCapture;
- (BOOL)systemRecording;
- (id)broadcastURL;
- (id)screenCaptureKitDelegate;
- (void)setScreenCaptureKitDelegate:;
+ (void)tm_hook_screen_recorder_preload;
+ (void)forwardMethodEventToChannelWithMethodName:apiUsageType:instance:hashTag:isNonsenstive:;
+ (void)tspk_screen_recorder_preload;
+ (id)sharedRecorder;
@end
