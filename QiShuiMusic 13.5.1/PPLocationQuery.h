@interface PPLocationQuery : NSObject
@property (nonatomic) Q consumer;
@property (nonatomic) BOOL orderByAscendingDate;
@property (nonatomic) BOOL filterByRelevanceDate;
@property (nonatomic) Q limit;
@property (nonatomic) NSDate fromDate;
@property (nonatomic) NSDate toDate;
@property (nonatomic) NSDate scoringDate;
@property (nonatomic) NSSet matchingSourceBundleIds;
@property (nonatomic) NSSet excludingSourceBundleIds;
@property (nonatomic) Q deviceFilter;
@property (nonatomic) double perRecordDecayRate;
@property (nonatomic) double decayRate;
@property (nonatomic) NSString fuzzyMatchingString;
@property (nonatomic) NSSet matchingCategories;
@property (nonatomic) NSSet matchingAlgorithms;
@property (nonatomic) NSSet excludingAlgorithms;
@property (nonatomic) BOOL excludingWithoutSentiment;
@property (nonatomic) NSString matchingContactHandle;
- (unsigned long long)deviceFilter;
- (void)setFromDate:;
- (unsigned long long)limit;
- (id)excludingAlgorithms;
- (double)decayRate;
- (unsigned long long)consumer;
- (id)init;
- (void)setDecayRate:;
- (void)setMatchingSourceBundleIds:;
- (BOOL)orderByAscendingDate;
- (void)setMatchingCategories:;
- (id)matchingAlgorithms;
- (void)setScoringDate:;
- (BOOL)filterByRelevanceDate;
- (id)initWithCoder:;
- (id)matchingContactHandle;
- (unsigned long long)hash;
- (id)fuzzyMatchingString;
- (void)setLimit:;
- (void)encodeWithCoder:;
- (id)scoringDate;
- (void)setOrderByAscendingDate:;
- (id)excludingSourceBundleIds;
- (void)setFuzzyMatchingString:;
- (id)matchingCategories;
- (void).cxx_destruct;
- (void)setToDate:;
- (void)setExcludingAlgorithms:;
- (void)setPerRecordDecayRate:;
- (id)matchingSourceBundleIds;
- (id)fromDate;
- (id)description;
- (id)customizedDescription;
- (void)setExcludingWithoutSentiment:;
- (void)setDeviceFilter:;
- (void)setFilterByRelevanceDate:;
- (void)setMatchingContactHandle:;
- (id)toDate;
- (BOOL)isEqualToLocationQuery:;
- (BOOL)excludingWithoutSentiment;
- (void)setExcludingSourceBundleIds:;
- (void)setMatchingAlgorithms:;
- (BOOL)isEqual:;
- (void)setConsumer:;
- (double)perRecordDecayRate;
- (id)copyWithZone:;
+ (id)_algorithmsDescription:;
+ (BOOL)supportsSecureCoding;
+ (id)_matchingCategoriesDescription:;
+ (id)queryForMapsWithLimit:fromDate:consumerType:;
@end
