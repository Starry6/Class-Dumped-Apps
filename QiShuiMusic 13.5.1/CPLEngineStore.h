@interface CPLEngineStore : NSObject
@property (nonatomic) BOOL hasPendingResetSync;
@property (nonatomic) Q state;
@property (nonatomic) NSArray storages;
@property (nonatomic) CPLEngineLibrary engineLibrary;
@property (nonatomic) BOOL shouldSyncScopeList;
@property (nonatomic) CPLEnginePushRepository pushRepository;
@property (nonatomic) BOOL pushRepositoryIsFull;
@property (nonatomic) CPLEngineScopeStorage scopes;
@property (nonatomic) CPLEngineScopeCleanupTasks cleanupTasks;
@property (nonatomic) CPLEngineChangePipe pullQueue;
@property (nonatomic) CPLEngineIDMapping idMapping;
@property (nonatomic) CPLEngineCloudCache cloudCache;
@property (nonatomic) CPLRecordStorageView transactionClientCacheView;
@property (nonatomic) CPLEngineTransientRepository transientPullRepository;
@property (nonatomic) CPLEngineResourceStorage resourceStorage;
@property (nonatomic) CPLEngineResourceDownloadQueue downloadQueue;
@property (nonatomic) CPLEngineOutgoingResources outgoingResources;
@property (nonatomic) CPLEngineRemappedRecords remappedRecords;
@property (nonatomic) CPLEngineQuarantinedRecords quarantinedRecords;
@property (nonatomic) CPLEngineStatusCenter statusCenter;
@property (nonatomic) CPLEnginePendingRecordChecks pendingRecordChecks;
@property (nonatomic) CPLEngineIgnoredRecords ignoredRecords;
@property (nonatomic) NSDate libraryCreationDate;
@property (nonatomic) @ corruptionInfo;
@property (nonatomic) CPLEngineDerivativesCache derivativesCache;
@property (nonatomic) BOOL shouldGenerateDerivatives;
@property (nonatomic) NSArray disabledFeatures;
@property (nonatomic) BOOL shouldUpdateDisabledFeatures;
@property (nonatomic) NSString sharingScopeIdentifier;
@property (nonatomic) CPLSyncSessionPredictor predictor;
@property (nonatomic) CPLTransportScopeMapping transactionTransportScopeMapping;
@property (nonatomic) CPLPlatformObject platformObject;
@property (nonatomic) Q hash;
@property (nonatomic) # superclass;
@property (nonatomic) NSString description;
@property (nonatomic) NSString debugDescription;
- (void)closeAndDeactivate:completionHandler:;
- (id)downloadQueue;
- (id)idMapping;
- (id)engineLibrary;
- (void)_commitWriteTransaction:commitError:;
- (void)noteInvalidRecordScopedIdentifiersInPushSession:;
- (id)componentName;
- (void)testKey:value:completionHandler:;
- (id)resourceStorage;
- (BOOL)storeDerivativesFilter:error:;
- (id)transactionClientCacheView;
- (void)markAsCorrupted;
- (void)openWithCompletionHandler:;
- (void)getStatusWithCompletionHandler:;
- (id)initWithEngineLibrary:;
- (id)_resetEventsJSON;
- (void)assertNoUnacknowledgedChanges;
- (void)noteResetSyncFinished;
- (BOOL)setShouldUpdateDisabledFeaturesWithError:;
- (BOOL)_shouldSyncScopeListWithOptions:;
- (BOOL)storeUserIdentifier:error:;
- (void)writeTransactionDidSucceed;
- (id)pushRepository;
- (void)dealloc;
- (BOOL)_canRead;
- (BOOL)resetLocalSyncStateWithCause:error:;
- (id)ignoredRecords;
- (id)pullQueue;
- (void)performBatchedWriteTransactionBarrier;
- (void)getStatusDictionaryWithCompletionHandler:;
- (id)predictor;
- (id)performWriteTransactionByPassBlocker:withBlock:completionHandler:;
- (BOOL)_resetLocalSyncStateWithCause:scope:date:error:;
- (void)setState:;
- (id)cloudCache;
- (id)userIdentifier;
- (id)performWriteTransactionWithBlock:completionHandler:;
- (BOOL)_canWrite;
- (id)transactionTransportScopeMapping;
- (id)_currentTransaction;
- (id)derivativesFilter;
- (void)storeSharingScopeIdentifier:;
- (id)scopes;
- (id)unacknowledgedChangeWithLocalScopedIdentifier:;
- (BOOL)resetCompleteSyncStateIncludingIDMappingWithCause:error:;
- (id)cleanupTasks;
- (void)startVacuum;
- (BOOL)canActivateScope:error:;
- (BOOL)_resetCompleteSyncStateWithCause:scope:error:;
- (BOOL)storeClientIsInSyncWithClientCacheWithError:;
- (BOOL)_handleException:;
- (BOOL)shouldUpdateDisabledFeatures;
- (BOOL)beginChangeSession:withLibraryVersion:resetTracker:error:;
- (void)noteOtherResetEvent:cause:;
- (void)dropSharingScopeIdentifier:;
- (BOOL)updateDisabledFeatures:didReset:error:;
- (BOOL)deleteDynamicallyCreatedStorages:error:;
- (void)_addCleanupBlock:;
- (BOOL)hasUnacknowledgedChanges;
- (void)_dropTransactionClientCacheView;
- (void)_removeTransactionOnCurrentThread:;
- (void)_reallyUnschedulePendingUpdateApply;
- (BOOL)storeLibraryVersion:withError:;
- (BOOL)shouldGenerateDerivatives;
- (void)registerStorage:;
- (id)disabledFeatures;
- (void)_updateShouldSyncScopeList:;
- (void)_schedulePendingUpdateApply;
- (void)notePushRepositoryStoredSomeChanges;
- (void)transactionDidFinish;
- (id)storages;
- (id)clientCacheIdentifier;
- (id)_storedDisabledFeatures;
- (BOOL)isFeatureDisabled:;
- (BOOL)resetLocalSyncStateWithCause:date:error:;
- (void)_performTransaction:withBlock:;
- (BOOL)pushRepositoryIsFull;
- (id)pendingRecordChecks;
- (BOOL)hasPendingChangeSessionUpdate;
- (id)libraryCreationDate;
- (BOOL)storeLastQuarantineCountReportDate:error:;
- (id)newClientCacheViewUsesPushRepository:;
- (BOOL)storeChangeSessionUpdate:error:;
- (id)performReadTransactionWithBlock:;
- (id)_resetEventsDescriptions;
- (void)predictSyncSessionValue:ofType:;
- (unsigned long long)state;
- (id)_performWriteTransactionByPassBlocker:WithBlock:completionHandler:;
- (BOOL)_applyPendingUpdate:error:;
- (void)_storeResetEvent:scopeIdentifier:date:pending:cause:;
- (BOOL)createStoragesDynamically:error:;
- (void)dropUnacknowledgedBatch;
- (void).cxx_destruct;
- (BOOL)_storeChangeSessionUpdate:error:;
- (BOOL)forceApplyPendingChangeSessionUpdateWithError:;
- (void)_setTransactionOnCurrentThread:;
- (void)writeTransactionDidFail;
- (void)_setSharingScopeIdentifier:;
- (BOOL)_canHaveActivatedScope:libraryOptions:error:;
- (void)_performBarrierTransaction:withBlock:;
- (BOOL)resetCompleteSyncStateWithCause:error:;
- (id)outgoingResources;
- (void)assertCanRead;
- (BOOL)_resetGlobalStateWithError:;
- (void)stopVacuum;
- (BOOL)_resetCompleteSyncStateIncludingIDMappingWithCause:scope:error:;
- (id)localResourceForCloudResource:recordClass:;
- (void)_unschedulePendingUpdateApply;
- (id)platformObject;
- (void)_loadResetEvents;
- (id)description;
- (BOOL)shouldSyncScopeList;
- (id)quarantinedRecords;
- (void)wipeStoreAtNextOpeningWithReason:completionBlock:;
- (BOOL)hasPendingResetSync;
- (void)assertCanWrite;
- (id)lastQuarantineCountReportDate;
- (BOOL)resetSyncAnchorWithCause:error:;
- (BOOL)checkExpectedLibraryVersion:error:;
- (void)performBarrier;
- (BOOL)_applyAndDiscardPendingUpdate:error:;
- (void)blockWriteTransactionsWithCompletionHandler:;
- (id)createNewLibraryVersion;
- (id)sharingScopeIdentifier;
- (void)keepUnacknowledgedBatch:;
- (id)statusCenter;
- (void)_reallySchedulePendingUpdateApply;
- (void)performBatchedWriteTransactionBarrierWithCompletionBlock:;
- (void)emergencyClose;
- (BOOL)applyPreviousChangeSessionUpdateWithExpectedLibraryVersion:error:;
- (id)transientPullRepository;
- (void)_reallyPerformBatchedTransactionsLocked;
- (id)corruptionInfo;
- (unsigned long long)libraryOptions;
- (BOOL)_resetSyncAnchorWithCause:scope:error:;
- (void)_scheduleBatchedTransactionsLocked;
- (void)performBatchedWriteTransactionWithBlock:completionHandler:;
- (void)_finishTransaction;
- (BOOL)updateLibraryOptions:error:;
- (id)remappedRecords;
- (id)derivativesCache;
- (id)libraryVersion;
- (void)_storeResetEvent:scopeIdentifier:date:cause:;
- (BOOL)isClientInSyncWithClientCache;
+ (id)platformImplementationProtocol;
+ (void)setDontBatchTransactions:;
+ (id)stateDescriptionForState:;
+ (BOOL)dontBatchTransactions;
+ (id)storageNames;
@end
