@interface CBController : NSObject
@property (nonatomic) NSString appID;
@property (nonatomic) I assertionFlags;
@property (nonatomic) I clientID;
@property (nonatomic) I internalFlags;
@property (nonatomic) NSObject<OS_xpc_object> testListenerEndpoint;
@property (nonatomic) NSInteger discoverableState;
@property (nonatomic) @? discoverableStateChangedHandler;
@property (nonatomic) NSInteger inquiryState;
@property (nonatomic) @? inquiryStateChangedHandler;
@property (nonatomic) @? relayMessageHandler;
@property (nonatomic) @? tipiChangedHandler;
@property (nonatomic) NSObject<OS_dispatch_queue> dispatchQueue;
@property (nonatomic) @? invalidationHandler;
@property (nonatomic) @? errorHandler;
@property (nonatomic) @? interruptionHandler;
@property (nonatomic) NSString label;
@property (nonatomic) q bluetoothState;
@property (nonatomic) @? bluetoothStateChangedHandler;
@property (nonatomic) CBDevice remoteDevice;
- (void)_updateIfNeededWithBlock:;
- (void)setTestListenerEndpoint:;
- (void)_update;
- (void)activateAssertionWithFlags:completion:;
- (id)init;
- (void)encodeWithXPCObject:;
- (id)interruptionHandler;
- (void)modifyDevice:peerSourceDevice:peerSourceState:completionHandler:;
- (id)testListenerEndpoint;
- (void)getControllerSettingsWithCompletionHandler:;
- (void)dealloc;
- (void)modifyDevice:peerSourceDevice:peerSourceState:requestFlags:completionHandler:;
- (void)sendRelayMessageType:messageData:conduitDevice:destinationDevice:completionHandler:;
- (id)descriptionWithLevel:;
- (id)errorHandler;
- (void)_invalidated;
- (void)_activateXPCCompleted:;
- (void)setTipiChangedHandler:;
- (void)setInterruptionHandler:;
- (void)modifyDevice:connectionPriorityDevices:timeoutSeconds:completionHandler:;
- (void)xpcReceivedMessage:;
- (void)_activateAssertionWithFlagsXPC:completion:;
- (void)_xpcReceivedTipiChanged:;
- (id)dispatchQueue;
- (void)setInquiryStateChangedHandler:;
- (id)bluetoothStateChangedHandler;
- (void)_activateAssertionWithFlagsDirect:completion:;
- (id)initWithXPCObject:error:;
- (int)discoverableState;
- (void)modifyControllerSettings:completionHandler:;
- (void)setAssertionFlags:;
- (void)getControllerInfoWithCompletion:;
- (BOOL)setLowPowerModeWithReason:error:;
- (void)_activateXPCStart:;
- (void)setDispatchQueue:;
- (void)_activateDirectStart;
- (void)setClientID:;
- (void)getDevicesWithFlags:completionHandler:;
- (void)setLabel:;
- (void)diagnosticLog:completion:;
- (id)label;
- (void)_xpcReceivedMessage:;
- (void)diagnosticShow:completion:;
- (void)_interrupted;
- (unsigned int)assertionFlags;
- (long long)bluetoothState;
- (void)setRemoteDevice:;
- (void)setErrorHandler:;
- (unsigned int)internalFlags;
- (id)remoteDevice;
- (int)inquiryState;
- (void)setLowPowerModeWithReason:completion:;
- (id)_ensureXPCStarted;
- (void)deleteDevice:completion:;
- (void)activateWithCompletion:;
- (void)setAppID:;
- (void)setInternalFlags:;
- (void)setBluetoothStateChangedHandler:;
- (void)_activate;
- (id)appID;
- (void)setRelayMessageHandler:;
- (void).cxx_destruct;
- (id)relayMessageHandler;
- (id)invalidationHandler;
- (void)diagnosticControl:completion:;
- (void)modifyDevice:completion:;
- (void)setInvalidationHandler:;
- (id)description;
- (id)tipiChangedHandler;
- (void)_xpcReceivedPowerStateChanged:;
- (void)sendSmartRoutingInformation:device:completionHandler:;
- (id)discoverableStateChangedHandler;
- (void)_xpcReceivedDiscoverableStateChanged:;
- (void)_xpcReceivedInquiryStateChanged:;
- (unsigned int)clientID;
- (void)updateIdentities:completion:;
- (void)_invalidateDirect;
- (void)invalidate;
- (void)setPowerState:completion:;
- (void)_xpcReceivedRelayMessage:;
- (void)setDiscoverableStateChangedHandler:;
- (void)getPowerStateWithCompletion:;
- (void)performDeviceRequest:device:completion:;
- (void)modifyDevice:settings:completion:;
- (void)resetCBExtensionID:completionHandler:;
- (id)inquiryStateChangedHandler;
+ (unsigned int)featureFlags;
+ (BOOL)bluetoothModificationAllowed;
+ (unsigned long long)numberOfPointingDevices;
+ (BOOL)setBluetoothModificationAllowed:error:;
+ (BOOL)safeToPowerOffBluetooth;
+ (BOOL)systemHasOnlyBluetoothPointingDevices;
+ (BOOL)systemHasUSBPointingDevice;
+ (id)controllerInfoAndReturnError:;
+ (id)controllerInfoWithEndpoint:error:;
+ (id)performDeviceRequest:device:error:;
+ (id)performDeviceRequest:device:xpcEndpoint:error:;
+ (void)setOfflineAdvertisingParams:;
+ (id)readPrefKeys:error:;
+ (BOOL)writePrefKey:value:error:;
@end
