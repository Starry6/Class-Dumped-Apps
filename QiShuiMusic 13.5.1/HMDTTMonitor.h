@interface HMDTTMonitor : NSObject
@property (nonatomic) HMDMonitorDataManager dataManager;
@property (nonatomic) NSObject<OS_dispatch_queue> serialQueue;
@property (nonatomic) NSString appID;
@property (nonatomic) <HMDTTMonitorTracker> tracker;
@property (nonatomic) HMDMonitorDataManager dataManager;
@property (nonatomic) <HMDTTMonitorInterceptor> interceptorChain;
@property (nonatomic) Q hash;
@property (nonatomic) # superclass;
@property (nonatomic) NSString description;
@property (nonatomic) NSString debugDescription;
- (void)configTTLiveEventIgnoreLogType:;
- (void)hookTTMonitorInterfaceIfNeeded:;
- (BOOL)logTypeEnabled:;
- (void)cleanupNotUploadAndReportedPerformanceData;
- (void)event:label:count:needAggregate:;
- (void)event:label:duration:needAggregate:;
- (void)event:label:needAggregate:;
- (void)hmdTrackData:logTypeStr:;
- (void)hmdTrackData:logTypeStr:storeType:;
- (void)hmdTrackData:type:;
- (void)hmdTrackService:attributes:;
- (void)hmdTrackService:metric:category:extra:;
- (void)hmdTrackService:metric:category:extra:storeType:;
- (void)hmdTrackService:metric:category:extra:syncWrite:;
- (void)hmdTrackService:status:extra:;
- (void)hmdTrackService:value:extra:;
- (void)hmdUploadImmediatelyIfNeedTrackData:logTypeStr:;
- (void)hmdUploadImmediatelyIfNeedTrackService:metric:category:extra:;
- (void)hmdUploadImmediatelyTrackData:logTypeStr:;
- (void)hmdUploadImmediatelyTrackService:metric:category:extra:;
- (id)initMonitorWithAppID:injectedInfo:;
- (id)interceptorChain;
- (void)modifyByUserBlockWithLogType:serviceName:data:needAbandoned:;
- (BOOL)needUploadWithlogTypeStr:serviceName:;
- (BOOL)serviceTypeEnabled:;
- (void)setInterceptorChain:;
- (void)setdDefaultSampleEnabled:forLogType:;
- (void)setdDefaultSampleEnabled:forServiceName:;
- (void)setupInterceptorChain;
- (void)trackAppLogWithTag:label:;
- (void)trackAppLogWithTag:label:extraValue:;
- (void)setTracker:;
- (id)tracker;
- (id)serialQueue;
- (void)setAppID:;
- (void)setDataManager:;
- (id)appID;
- (id)dataManager;
- (void).cxx_destruct;
- (void)setSerialQueue:;
- (BOOL)configurationAvailable;
+ (id)globalSyncQueue;
+ (id)getFrequenceDetectParam;
+ (id)heimdallrTTMonitor;
+ (void)setFrequenceDetectParam:;
+ (void)setLogModifyBlock:;
+ (void)setMonitorTag:;
+ (void)setMonitorTagVerifyBlock:;
+ (void)setUseShareQueueStrategy:;
+ (void)uploadCodeCoverageFile:scene:commonParams:callback:;
+ (id)defaultManager;
@end
