@interface VCSession : VCObject
@property (nonatomic) NSMutableDictionary optInDictionary;
@property (nonatomic) BOOL isOneToOneRemoteMediaStalling;
@property (nonatomic) ^{tagVCMediaQueue=} mediaQueue;
@property (nonatomic) VCSessionStatsController sessionStatsController;
@property (nonatomic) NSObject<OS_nw_activity> parentNWActivity;
@property (nonatomic) NSObject<OS_nw_activity> nwActivity;
@property (nonatomic) NSDictionary capabilities;
@property (nonatomic) NSDictionary transportMetadata;
@property (nonatomic) VCSessionParticipant localParticipant;
@property (nonatomic) NSArray remoteParticipants;
@property (nonatomic) VCSessionParticipantRemote oneToOneRemoteParticipant;
@property (nonatomic) <VCSessionDelegate> delegate;
@property (nonatomic) NSString idsDestination;
@property (nonatomic) NSString uuid;
@property (nonatomic) I transportSessionID;
@property (nonatomic) <VCConnectionProtocol> currentActiveConnection;
@property (nonatomic) VCTransportSession transportSession;
@property (nonatomic) AVCRateController downlinkRateController;
@property (nonatomic) NSMutableDictionary remoteParticipantsMapByServerID;
@property (nonatomic) VCSessionMessaging sessionMessaging;
@property (nonatomic) BOOL oneToOneModeEnabled;
@property (nonatomic) BOOL sharingEnabled;
@property (nonatomic) Q hash;
@property (nonatomic) # superclass;
@property (nonatomic) NSString description;
@property (nonatomic) NSString debugDescription;
- (void)updateConfiguration:;
- (void)dealloc;
- (id)capabilities;
- (void)setState:;
- (void)start;
- (id)uuid;
- (void)tearDown;
- (id)delegate;
- (void)removeParticipant:;
- (id)localParticipant;
- (BOOL)sharingEnabled;
- (id)description;
- (id)nwActivity;
- (void)setSharingEnabled:;
- (id)mediaQueue;
- (id)idsDestination;
- (void)setOneToOneModeEnabled:;
- (BOOL)oneToOneModeEnabled;
- (void)setNwActivity:;
- (void)stopWithError:;
- (id)transportMetadata;
- (id)transportSession;
- (void)didServerDie;
- (int)learntBitrateForSegment:defaultValue:;
- (void)cleanupNwActivity;
- (int)maxRemoteParticipants30fps;
- (void)mediaStream:didReceiveNewMediaKeyIndex:;
- (void)setParentNWActivity:;
- (id)parentNWActivity;
- (void)handleActiveConnectionChange:;
- (BOOL)generateReceptionReportList:reportCount:;
- (void)setMediaQueue:;
- (void)cleanupSpatialAudio;
- (int)setupSpatialAudio;
- (void)remoteCellTechStateUpdate:maxRemoteBitrate:;
- (void)notifyDelegateActiveConnectionDidChange;
- (void)initWithRelevantStorebagEntries;
- (unsigned int)vcrcServerBagProfileNumber;
- (void)setupDisconnectMessage;
- (void)setupPiPStateChangeMessage;
- (void)setupCellTechChangeMessages;
- (void)setupMomentsMessages;
- (void)setupPreferredInterfaceMessage;
- (void)processSymptomFromMessage:participantID:isLocalInitiated:isLocalSideOnly:;
- (void)rateController:targetBitrateDidChange:rateChangeCounter:;
- (void)mediaController:mediaSuggestionDidChange:;
- (void)moments:shouldProcessRequest:recipientID:;
- (void)stopTimeoutTimer;
- (void)startDeallocTimer;
- (void)vcSessionParticipant:didStart:error:;
- (void)vcSessionParticipant:didStopWithError:;
- (void)didReceiveRTCPPackets:;
- (void)mediaStream:didReceiveRTPGapForMediaKeyIndex:;
- (void)mediaStream:didReceiveFlushRequestWithPayloads:;
- (BOOL)handleEncryptionInfoChange:;
- (void)resetDecryptionTimeout;
- (void)didEncryptionKeyRollTimeout;
- (void)vcSessionParticipant:audioEnabled:didSucceed:error:;
- (void)vcSessionParticipant:videoEnabled:didSucceed:error:;
- (void)vcSessionParticipant:screenEnabled:didSucceed:error:;
- (void)vcSessionParticipant:remoteAudioEnabledDidChange:;
- (void)vcSessionParticipant:remoteVideoEnabledDidChange:;
- (void)vcSessionParticipant:remoteScreenEnabledDidChange:;
- (void)vcSessionParticipant:audioPaused:didSucceed:error:;
- (void)vcSessionParticipant:videoPaused:didSucceed:error:;
- (void)vcSessionParticipant:mediaStateDidChange:forMediaType:didSucceed:error:;
- (void)vcSessionParticipant:remoteMediaStateDidChange:forMediaType:;
- (void)vcSessionParticipant:remoteAudioPausedDidChange:;
- (void)vcSessionParticipant:remoteVideoPausedDidChange:;
- (void)vcSessionParticipant:didChangeMediaPriority:description:;
- (void)vcSessionParticipant:didChangeActualNetworkBitrateForStreamGroupID:;
- (void)vcSessionParticipant:requestKeyFrameGenerationWithStreamID:firType:;
- (void)vcSessionParticipant:didSwitchFromStreamID:toStreamID:;
- (void)vcSessionParticipant:didRequestVideoRedundancy:;
- (void)vcSessionParticipantDidChangeSendingStreams:;
- (void)vcSessionParticipantDidChangeReceivingStreams:;
- (void)vcSessionParticipantDidMediaDecryptionTimeOut:;
- (void)vcSessionParticipantDidMediaDecryptionTimeOutForMKMRecovery:;
- (void)vcSessionParticipantFetchStreamGroupState:;
- (void)vcSessionParticipantDidRemoteMediaStallTimeout:duration:;
- (void)vcSessionParticipant:didDetectError:;
- (void)vcSessionParticipant:oneToOneModeDidChange:;
- (void)recommendedSettingsChanged:;
- (void)reportingIntervalChanged:;
- (void)preWarmStateChanged:;
- (void)didReceivedSessionStatsAtTime:;
- (id)initWithIDSDestination:configurationDict:negotiationData:delegate:processId:isGKVoiceChat:;
- (void)setReportingConfig:;
- (void)setTransportConnectionSelectionVersionWithLocalFrameWorkVersion:remoteFrameworkVersion:;
- (int)selectDataPath;
- (void)setupTransportSessionWithDestination:;
- (char *)sessionStateToString:;
- (id)participantsToString;
- (void)addParticipantConfigurations:;
- (id)oneToOneRemoteParticipant;
- (void)stopWithError:didRemoteCancel:;
- (id)participantForID:;
- (void)mediaStateChangedForParticipant:;
- (id)remoteParticipants;
- (id)configurationSpecificReportingServiceName;
- (void)reportingSetUserInfo;
- (void)generateKeyFrameWithReceivedMessage:forParticipant:;
- (void)setOneToOneModeEnabledFromRemoteSignal:;
- (void)dispatchedSetSharingEnabled:;
- (void)sendStreamGroupStateToParticipant:;
- (void)setTransportSessionEventHandler;
- (void)applyLinkConstrains:;
- (void)applyRemoteLinkConstrains:;
- (void)notifyRemoteOfCellTechChange:remoteParticipant:;
- (void)handleCellTechChange:connection:;
- (void)handlePrimaryConnectionChanged:;
- (void)handleCellularMTUChanged:connection:;
- (void)dispatchedHandleActiveConnectionChange:;
- (void)handleActiveConnectionChangeForMultiway:;
- (void)handlePreferredInterfaceForDuplicationUpdate:notifyPeer:enableDuplication:isMediaUnrecoverableSignal:;
- (unsigned int)calculateExpectedTotalNetworkBitrateDownlink;
- (unsigned int)calculateExpectedTotalNetworkBitrateUplink;
- (void)updateNetworkFeedbackControllerReport:;
- (int)flushBasebandWithPayloads:;
- (void)updatePresentationInfo:;
- (void)applySpatialMetadata;
- (void)sendRateControlConfigToRemoteParticipant:;
- (void)updateParticipantWindowState;
- (void)updateParticipantConfigurations:;
- (void)distributeBitrateAndOptInToStreamIDsWithSeamlessTransition:;
- (void)reportingSessionDownlinkOptInEvent:selectedMediaEntriesForParticipants:;
- (void)reportingSessionStopEventWithError:;
- (void)setSessionInfoSynchronizerCallbacks;
- (void)setSessionInfoSynchronizerErrorResponseCallback;
- (void)setSessionInfoSynchronizerPeerSubscribedStreamsCallback;
- (id)vcrcServerBagWithOperatingMode:;
- (void)setupRateControllersMultiway;
- (void)didRemoveSpatialMetadataEntry;
- (int)reserveAudioChannelForMediaType:spatialAudioSourceID:;
- (void)updateMultiwayRateControllerWithActiveConnection:isScreenEnabled:isLocal:;
- (void)startRateControllersMultiwayFromOneToOne:;
- (void)setupUplinkBitrateCaps;
- (void)createMediaQueue;
- (void)handleMediaQueueSizeExceedThresholdWithQueueSize:streamID:type:;
- (void)setMediaQueuePeakBitrateWithTargetBitrate:;
- (void)updateLocalVideoCaptureFrameRate;
- (void)updateLocalStreamConfiguration;
- (void)optInStreamWithIDSStreamIDs:;
- (void)optOutStreamWithIDSStreamIDs:;
- (BOOL)detectSSRCCollision:resetNeeded:;
- (BOOL)detectSSRCCollisionWithRemoteMediaStream:remoteBlobCreationTime:resetNeeded:;
- (void)handleEncryptionInfoEvent:;
- (void)handleMembershipChangeInfoEvent:;
- (void)setDelegatesForRemoteParticipant:;
- (void)messageMediaInitialStateToParticipant:;
- (void)broadcastInitialMediaState;
- (id)newEncryptionLabelWithLocalUUID:remoteUUID:;
- (BOOL)composeControlChannelParticipantConfig:withRemoteParticipant:;
- (BOOL)registerRemoteParticipantToSession:;
- (void)removeDelegatesForRemoteParticipant:;
- (void)unregisterRemoteParticipantFromSession:;
- (void)sendSymptomsToRemoteParticipants:symptom:groupID:;
- (void)cleanupVCRC;
- (void)setupMultiwayABTesting;
- (void)registerMediaStreamNotificationDelegateForParticipant:;
- (void)unregisterMediaStreamNotificationDelegateForParticipant:;
- (void)didReceiveReportPacket:arrivalNTPTime:;
- (void)didReceiveCustomReportPacket:arrivalNTPTime:;
- (id)computeConversationTimeBaseTruncated;
- (id)getClientSpecificUserInfo;
- (void)reportingSessionParticipantEvent:withStreamID:;
- (void)reportingSessionParticipantEvent:withParticipant:;
- (void)reportingSessionParticipantEvent:keyChangeReason:newMKI:;
- (void)reportingSessionParticipantEvent:withParticipant:keyChangeReason:newMKI:;
- (void)reportingSessionParticipantEvent:withParticipant:keyChangeReason:newMKI:withStreamID:;
- (void)reportingMomentsWithRequest:recipientID:;
- (void)reportingMomentsToGreenTeaWithRequest:;
- (void)collectSessionEventKeyFields:eventType:withParticipant:keyChangeReason:newMKI:withStreamID:;
- (void)reportingSessionRemoteParticipantEvent:withParticipant:value:;
- (void)dispatchedAddParticipantWithConfig:;
- (BOOL)configureRemoteParticipant:withConfig:;
- (void)dispatchedAddParticipantConfigurations:;
- (void)dispatchedRemoveParticipant:;
- (void)dispatchedStart;
- (void)dispatchedStopWithError:;
- (void)dispatchedStopWithError:didRemoteCancel:;
- (void)dispatchedTransportStop;
- (void)dispatchedUpdateConfiguration:;
- (void)stopAllParticipants;
- (void)dispatchedParticipant:didStart:error:;
- (void)setupOneToOneVideoReceiverDelegate;
- (void)setupOneToOneVideoStreamDelegate;
- (void)processDidStop;
- (void)dispatchedParticipant:didStopWithError:;
- (id)newNetworkBitrateString:;
- (void)generateReportDictionary:;
- (void)registerReportingTask;
- (void)unregisterReportingTask;
- (void)mediaQualityDegraded:;
- (void)didReceiveMomentsRequest:;
- (void)additionalFlushCountToOneToOneRateController:;
- (unsigned int)transportSessionID;
- (id)currentActiveConnection;
- (void)setCurrentActiveConnection:;
- (id)optInDictionary;
- (void)setOptInDictionary:;
- (id)remoteParticipantsMapByServerID;
- (void)setRemoteParticipantsMapByServerID:;
- (id)downlinkRateController;
- (id)sessionMessaging;
- (void)setSessionMessaging:;
- (id)sessionStatsController;
- (BOOL)isOneToOneRemoteMediaStalling;
- (void)setIsOneToOneRemoteMediaStalling:;
- (void)setIsOneToOneRemoteMediaStalling:;
- (int)setupOneToOne;
- (int)setupOneToOneMediaQueue;
- (id)newNegotiatorForOneToOneWithRemoteParticipant:;
- (BOOL)setOneToOneConfigOnRemoteParticipant:;
- (int)setupRateControllerOneToOne;
- (void)updateOneToOneRateControllerForVideoEnabled:;
- (void)cleanupRateControllerOneToOne;
- (BOOL)configureLocalParticipantWithOneToOneRemoteParticipant:isInitialConfiguration:;
- (int)setupOneToOneMediaControlInfoGeneratorsWithVersion:oneToOneConfig:videoEnabled:;
- (id)newParticipantOneToOneConfigWithIDSParticipantID:isLocal:mediaControlInfoVersion:videoEnabled:screenEnabled:remoteParticipant:;
- (void)startRateControllerOneToOne;
- (void)stopRateControllerOneToOne;
- (BOOL)isOneToOneUsingVideo;
- (BOOL)configureRemoteParticipantForOneToOne:;
- (void)reportExistingParticipantsAnew;
- (void)reportStartedSwitchingToOneToOne:;
- (void)reportCompletedSwitchingToOneToOne:;
- (void)reportSwitchingError:errorEvent:;
- (void)oneToOneToMultiwaySwitchSuspend;
- (void)oneToOneToMultiwaySwitchResume;
- (void)oneToOneToMultiwaySwitchConfigure;
- (BOOL)switchFromOneToOneToMultiway;
- (void)messageExistingParticipantsPostUpgrade;
- (void)multiwayToOneToOneSwitchSuspend;
- (void)multiwayToOneToOneSwitchResume;
- (BOOL)multiwayToOneToOneSwitchConfigure;
- (BOOL)switchFromMultiwayToOneToOne;
- (void)cleanupOneToOneMediaQueue;
- (void)cleanupOneToOne;
- (void)cleanupOneToOneDelegates;
- (void)cleanupOneToOneVideoReceiverDelegate;
- (void)cleanUpOneToOneVideoStreamDelegate;
- (void)startReportingForOneToOneEnabled:;
- (void)renewOneToOneMediaQueue;
- (void)setupOneToOneAdaptiveLearning;
- (BOOL)negotiateOneToOneWithRemoteParticipant:;
- (void)configureOneToOneRateController:isUsingVideo:;
- (BOOL)addOneToOneParticipant:;
- (BOOL)completeTransitionToOneToOneEnabled:;
- (void)completionHandlerOneToOneEnabled:didSucceed:;
- (void)dispatchedSetOneToOneModeEnabled:isLocal:;
- (void)applyNegotiatedOneToOneFaceTimeSettings;
- (void)setupOneToOneABTesting;
- (void)startOneToOne;
- (void)reportActiveConnectionOneToOne;
- (void)handleActiveConnectionChangeForOneToOne:;
- (void)configureOneToOneReportingOnVideoEnabled;
- (void)createSessionMessaging;
- (void)destroySessionMessaging;
- (void)startSessionMessaging;
- (void)stopSessionMessaging;
- (void)broadcastMessage:withTopic:;
- (void)broadcastMessageDictionary:withTopic:;
- (void)broadcastMessageDictionary:withTopic:toVersion:;
- (void)broadcastSingleStateMessage:withTopic:;
- (void)setupAudioEnabledMessages;
- (void)setupVideoEnabledMessages;
- (void)setupStreamGroupStateFetchMessage;
- (void)setupAudioPausedMessages;
- (void)setupOneToOneEnabledMessages;
- (void)setupVideoPausedMessages;
- (void)setupKeyFrameGenerationMessages;
- (void)setupSymptomEnabledMessages;
- (void)setupWRMAlertUpdateMessage;
- (void)setupVideoRedundancyMessages;
- (void)setupMediaQualityDegradedMessage;
- (void)setupRateControlConfigMessage;
- (void)setupLinkConstrainsChangedMessages;
- (id)stateMessageDictionary;
- (void)broadcastMediaStateUpdateMessage;
- (void)sendMediaStateUpdateMessageToRemoteParticipant:;
- (BOOL)validateStreamGroup:state:;
- (void)setupMediaStateUpdateMessage;
- (void)processStreamGroupStateMessageKey:value:mediaTypeStates:;
- (void)processMediaTypeStatesWithMessage:mediaTypeStates:;
- (void)processMediaStateMessage:remoteParticipantID:;
+ (void)terminateProcess:terminateSource:agent:;
+ (int)deviceRoleForSessionMode:;
+ (void)addUUIDToMutableData:fromUUIDString:;
+ (void)cleanupControlChannelParticipantConfig:;
+ (BOOL)isServerPacketRetransmissionEnabledForVideo;
+ (id)mediaStateMessageStreamGroupKeysForMediaType:;
+ (id)mediaStateMessageKeyForMediaType:;
+ (unsigned int)mediaTypeForMediaStateMessageKey:;
+ (id)mediaStateMessageValueForMediaState:;
+ (unsigned int)mediaStateForMediaStateMessageValue:;
@end
