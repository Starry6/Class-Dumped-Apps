@interface IESLiveMultiTabManager : NSObject
@property (nonatomic) NSMutableArray tabModels;
@property (nonatomic) IESLiveMultiTabModel mainTab;
@property (nonatomic) IESLiveMultiTabModel chatTab;
@property (nonatomic) NSMutableArray landscapeTabModels;
@property (nonatomic) IESLiveMultiTabView multiTabView;
@property (nonatomic) IESLiveMultiTabView landscapeMultiTabView;
@property (nonatomic) IESLiveMultiTabLandscapeProxyer landscapeMultiTabViewDelegateProxyer;
@property (nonatomic) IESLiveLayoutPlaceholderView mainContainer;
@property (nonatomic) IESLiveLayoutMultiTabContainer multiTabContainer;
@property (nonatomic) BOOL setuped;
@property (nonatomic) {CGRect={CGPoint=dd}{CGSize=dd}} playerFrame;
@property (nonatomic) q portaitSelectIndex;
@property (nonatomic) double tabTitleRightMargin;
@property (nonatomic) BOOL mainTabShow;
@property (nonatomic) q orientation;
@property (nonatomic) UIView<IESLiveHierarchyContainerView> animationContainer;
@property (nonatomic) UIImageView mainTabBackgroundView;
@property (nonatomic) UIView<IESLiveHierarchyContainerView> toolbarContainer;
@property (nonatomic) BOOL mainTabContainerSetuped;
@property (nonatomic) q currentTabId;
@property (nonatomic) q landscapeCurrentTabId;
@property (nonatomic) BOOL enablePullStatus;
@property (nonatomic) NSString lastQuitTabId;
@property (nonatomic) NSMutableArray initializeTabItems;
@property (nonatomic) <IESLiveRoomServiceAdapter> mixedRoom;
@property (nonatomic) NSNumber multiTabId;
@property (nonatomic) @? mainTabTapAction;
@property (nonatomic) @? mainTabDoubleTapAction;
@property (nonatomic) @? tabModelDidChange;
@property (nonatomic) BOOL reloadByInsert;
@property (nonatomic) @? bubbleChangeBlock;
@property (nonatomic) Q hash;
@property (nonatomic) # superclass;
@property (nonatomic) NSString description;
@property (nonatomic) NSString debugDescription;
- (id)outMultiTabView;
- (void)unMount;
- (id)chatTab;
- (BOOL)isEnableMutiTab;
- (void)launchTabFilter;
- (id)mainTab;
- (id)multiTabForFullScreenWithTabID:;
- (void)setMainTabShow:;
- (void)setPlayerFrame:;
- (BOOL)setuped;
- (void)updateTabTitleLayoutWithModels:;
- (void)addAllSubTabs:;
- (void)animationForAutoRotateToOrientation:duration:size:;
- (id)bubbleChangeBlock;
- (double)calculateTabTitleWidthWithTabModels:;
- (id)chatTabModel;
- (BOOL)couldOtherViewRecognizePanWithGestureRecognizer:;
- (long long)currentLandscapeTabType;
- (id)currentPortraitMultiTabView;
- (long long)currentTabId;
- (double)currentTabIndicatorPosition;
- (long long)currentTabType;
- (void)didAutoRotateToOrientation:size:;
- (void)didSetAttachingDIContext;
- (BOOL)enableMultiTabInCurrentRoom;
- (BOOL)enablePullStatus;
- (long long)findIndexWithTabId:;
- (void)fullLinkTrackWithEventName:params:;
- (long long)getLastQuitRoomTabID;
- (id)getLastTabIDFromDisk;
- (void)handleOrientationChanged:;
- (void)handleOrientationTransitionBegin:;
- (void)handleOrientationTransitionEnd;
- (unsigned long long)indexWithTab:;
- (id)initializeTabItems;
- (void)insertPortraitSubTab:atIndex:isSelected:;
- (id)insideMultiTabContainer;
- (id)insideTabAnimationContainer;
- (id)insideTabToolbarContainer;
- (BOOL)isMultiTabReloading;
- (long long)landscapeCurrentTabId;
- (id)landscapeMultiTabView;
- (id)landscapeMultiTabViewDelegateProxyer;
- (id)landscapeTabModels;
- (id)lastQuitTabId;
- (id)mainContainer;
- (void)mainContainerViewDidDoubleTapped:;
- (void)mainContainerViewDidTapped:;
- (id)mainTabAllowList;
- (id)mainTabBackgroundView;
- (BOOL)mainTabContainerSetuped;
- (id)mainTabDoubleTapAction;
- (id)mainTabModel;
- (BOOL)mainTabShow;
- (id)mainTabTapAction;
- (id)mixedRoom;
- (void)moveBottomContainerToRoomContainer;
- (void)moveMainTabToPositionX:;
- (void)moveRoomContainerElementToTab;
- (void)moveRoomContainerElementToTabForSaas;
- (void)multiTabBubbleAction:didAppear:actionType:;
- (double)multiTabCellWidth;
- (id)multiTabContainer;
- (id)multiTabId;
- (double)multiTabTopOffset;
- (id)multiTabView;
- (void)multiTabViewDidScroll:;
- (void)multiTabViewDidScrollToTabId:;
- (void)multiTabViewDidScrollToTabId:fromTabId:;
- (void)onCameraWillChangeTo:source:;
- (void)onRoomStyleChange:callTrace:;
- (void)p_showStreamHorizontal;
- (void)p_showStreamVerticalStyle;
- (void)payCardShowStatusChange:;
- (id)playerFrame;
- (void)playerFrameDidChange:;
- (long long)portaitSelectIndex;
- (void)refeshUIForPad;
- (BOOL)reloadByInsert;
- (void)rememberCurrentTabWhenQuit;
- (void)removeSubTab:;
- (void)resetCurrentContainerWhenQuit;
- (void)resetRegisterMultiProxyContainer;
- (void)scrollToTab:animated:;
- (void)setBubbleChangeBlock:;
- (void)setChatTab:;
- (void)setCurrentTabId:;
- (void)setEnablePullStatus:;
- (void)setInitializeTabItems:;
- (void)setLandscapeCurrentTabId:;
- (void)setLandscapeMultiTabView:;
- (void)setLandscapeMultiTabViewDelegateProxyer:;
- (void)setLandscapeTabModels:;
- (void)setLastQuitTabId:;
- (void)setMainContainer:;
- (void)setMainTab:;
- (void)setMainTabBackgroundView:;
- (void)setMainTabContainerSetuped:;
- (void)setMainTabDoubleTapAction:;
- (void)setMainTabTapAction:;
- (void)setMixedRoom:;
- (void)setMultiTabContainer:;
- (void)setMultiTabId:;
- (void)setMultiTabView:;
- (void)setPortaitSelectIndex:;
- (void)setReloadByInsert:;
- (void)setSetuped:;
- (void)setTabModelDidChange:;
- (void)setTabModels:;
- (void)setTabSelectionViewRightMarginWithWidth:;
- (void)setTabTitleRightMargin:;
- (void)setToolbarContainer:;
- (void)setupChatTab;
- (void)setupMainTab;
- (id)setupMainTabContainer;
- (void)setupMultiTabView;
- (BOOL)shouldShowMultiTab;
- (id)tabModelDidChange;
- (id)tabModels;
- (double)tabTitleRightMargin;
- (id)tabTypeMapToModel:;
- (id)toolbarContainer;
- (void)updateMainTabColor;
- (void)updateMultiTabWithRoom:;
- (void)updateMultiTabconstraintsWithFrame:;
- (void)updateTabBackground:;
- (void)willAutoRotateToOrientation:size:;
- (id)init;
- (BOOL)gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:;
- (void)keyboardWillHide;
- (long long)orientation;
- (void)keyboardWillShow;
- (void).cxx_destruct;
- (BOOL)gestureRecognizer:shouldReceiveTouch:;
- (void)setOrientation:;
- (id)animationContainer;
- (void)setAnimationContainer:;
- (double)tabBarHeight;
+ (BOOL)isUseNewContainerKit;
@end
