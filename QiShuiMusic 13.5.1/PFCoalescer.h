@interface PFCoalescer : NSObject
@property (nonatomic) NSString label;
@property (nonatomic) @ target;
@property (nonatomic) BOOL usesTarget;
@property (nonatomic) @ buffer;
@property (nonatomic) NSObject<OS_dispatch_queue> sourceQueue;
@property (nonatomic) NSObject<OS_dispatch_queue> targetQueue;
@property (nonatomic) NSObject<OS_dispatch_queue> isolationQueue;
@property (nonatomic) NSObject<OS_dispatch_source> source;
@property (nonatomic) @? snapshotAndDrainHandler;
@property (nonatomic) @? action;
@property (nonatomic) PFCoalescerContext context;
@property (nonatomic) BOOL initialDelayTimerIsArmed;
@property (nonatomic) q state;
@property (nonatomic) NSObject<OS_os_transaction> transaction;
@property (nonatomic) double initialDelay;
@property (nonatomic) Q hash;
@property (nonatomic) # superclass;
@property (nonatomic) NSString description;
@property (nonatomic) NSString debugDescription;
- (void)setTransaction:;
- (void)setBuffer:;
- (id)transaction;
- (id)init;
- (id)stateCaptureDictionary;
- (void)update:;
- (void)setSourceQueue:;
- (id)buffer;
- (id)targetQueue;
- (void)setInitialDelay:;
- (id)context;
- (void)setState:;
- (BOOL)initialDelayTimerIsArmed;
- (id)isolationQueue;
- (id)action;
- (void)setTargetQueue:;
- (void)setLabel:;
- (void)setIsolationQueue:;
- (id)snapshotAndDrainHandler;
- (id)label;
- (void)resetAndShutDown;
- (void)setAction:;
- (void)setTarget:;
- (void)setUsesTarget:;
- (long long)state;
- (void).cxx_destruct;
- (id)source;
- (id)sourceQueue;
- (id)target;
- (void)reset;
- (void)update;
- (void)_resetWhileLocked;
- (BOOL)usesTarget;
- (void)performEventActionWithTarget:;
- (double)initialDelay;
- (void)setContext:;
- (void)setSource:;
- (id)initWithLabel:target:buffer:queue:bufferDrainer:action:;
- (void)setInitialDelayTimerIsArmed:;
- (void)setSnapshotAndDrainHandler:;
+ (id)coalescerWithLabel:target:buffer:queue:bufferDrainer:action:;
+ (id)dictionaryCoalescerWithLabel:queue:action:;
+ (id)arrayCoalescerWithLabel:target:queue:action:;
+ (id)coalescerWithLabel:target:queue:action:;
+ (id)coalescerWithLabel:queue:action:;
+ (id)setCoalescerWithLabel:queue:action:;
+ (id)dictionaryCoalescerWithLabel:target:queue:action:;
+ (id)arrayCoalescerWithLabel:queue:action:;
+ (id)mutableContainerCoalescerWithLabel:container:queue:action:;
+ (id)setCoalescerWithLabel:target:queue:action:;
+ (id)mutableContainerCoalescerWithLabel:target:container:queue:action:;
+ (id)mutableCollectionBufferDrainer;
@end
