@interface AXMDataSonifier : NSObject
@property (nonatomic) NSTimer playbackObserverUpdateTimer;
@property (nonatomic) AXMAudioDataSourceMixer playbackMixerDataSource;
@property (nonatomic) AXMAudioDataSource playbackChartDataAudioDataSource;
@property (nonatomic) AXMAudioDataSource playbackTrendlineAudioDataSource;
@property (nonatomic) AXMAudioDataSourceMixer scrubbingMixerDataSource;
@property (nonatomic) AXMAudioDataSource scrubbingDiscreteAudioDataSource;
@property (nonatomic) AXMAudioDataSource scrubbingContinuousAudioDataSource;
@property (nonatomic) AXMAudioDataSource scrubbingTrendlineAudioDataSource;
@property (nonatomic) AXMAudioDataSourceMixer liveContinuousMixerDataSource;
@property (nonatomic) AXMAudioDataSource liveContinuousAudioDataSource;
@property (nonatomic) NSPointerArray playbackObservers;
@property (nonatomic) NSInteger interpolationMode;
@property (nonatomic) AXMLiveContinuousTone continuousScrubbingTone;
@property (nonatomic) AXMLiveContinuousTone trendlineScrubbingTone;
@property (nonatomic) AXMLiveContinuousTone liveContinuousDataTone;
@property (nonatomic) @? trendlineFunction;
@property (nonatomic) ^v scrubbingDiscreteDataRenderingContext;
@property (nonatomic) ^v scrubbingPlaybackCallbackRenderingContext;
@property (nonatomic) ^v liveTonePlaybackCallbackRenderingContext;
@property (nonatomic) Q playbackSampleCount;
@property (nonatomic) NSMutableOrderedSet dataCategories;
@property (nonatomic) double minimumDiscreteToneLength;
@property (nonatomic) double maximumDiscreteToneLength;
@property (nonatomic) double minimumToneVolume;
@property (nonatomic) double maximumToneVolume;
@property (nonatomic) double masterVolume;
@property (nonatomic) BOOL isPlaying;
@property (nonatomic) BOOL isPaused;
@property (nonatomic) BOOL isScrubbing;
@property (nonatomic) BOOL isEndingScrubbing;
@property (nonatomic) BOOL isInLiveContinuousToneSession;
@property (nonatomic) double currentPlaybackPosition;
@property (nonatomic) double minimumPlaybackFrequency;
@property (nonatomic) double maximumPlaybackFrequency;
@property (nonatomic) double playbackDuration;
@property (nonatomic) BOOL usesBinauralPanning;
@property (nonatomic) NSInteger dataMode;
@property (nonatomic) @? function;
@property (nonatomic) AXMSynthPatch patch;
@property (nonatomic) AXMChartDescriptor currentChartDescriptor;
@property (nonatomic) q currentSeriesIndex;
@property (nonatomic) AXMDataSeriesDescriptor currentSeries;
- (BOOL)isScrubbing;
- (id)init;
- (BOOL)isPlaying;
- (void)dealloc;
- (void)beginScrubbing;
- (void)play;
- (id)function;
- (double)playbackDuration;
- (void)setPlaybackDuration:;
- (void)endScrubbing;
- (BOOL)isPaused;
- (void).cxx_destruct;
- (void)pause;
- (int)dataMode;
- (void)stopPlaying;
- (void)setPlaybackPosition:;
- (void)setPatch:;
- (id)patch;
- (void)_initializeAXMAudioDataSources;
- (void)_initializeLiveToneDataSource;
- (double)currentPlaybackPosition;
- (void)setMasterVolume:;
- (double)masterVolume;
- (void)setMasterVolume:fadeDuration:;
- (void)addPlaybackObserver:;
- (void)removePlaybackObserver:;
- (void)stopScrubbing;
- (void)scrubToPlaybackFrame:;
- (void)setCurrentChartDescriptor:;
- (void)setCurrentSeriesIndex:;
- (void)renderSonification;
- (void)_renderSeries:;
- (void)_renderDiscreteAudioForSeries:;
- (void)_renderContinuousAudioForSeries:;
- (void)_renderUnivariateFunctionAudio;
- (BOOL)_initializeAudioUnit;
- (BOOL)_uninitializeAudioUnit;
- (BOOL)_initializeAudioComponent;
- (BOOL)_setAudioFormat;
- (BOOL)_setOutputCallback;
- (double)normalizedTimeEncodingValueForValue:;
- (double)normalizedValueForValue:min:max:;
- (double)valueFromNormalizedValue:min:max:;
- (double)interpolatedPitchValueForNormalizedTimePosition:inSeries:;
- (double)timeOffsetForTimeEncodingValue:;
- (unsigned long long)sampleIndexForTimeOffset:;
- (double)frequencyForPitchEncodingValue:;
- (double)volumeForVolumeEncodingValue:;
- (double)durationForDurationEncodingValue:;
- (BOOL)series:hasContinuousPitchDataForTimePosition:;
- (void)beginLiveContinuousToneSession;
- (void)endLiveContinuousToneSession;
- (void)setLiveContinuousToneNormalizedFrequency:;
- (void)_peakNormalizeBuffer:length:level:;
- (id)_newContinuousToneEnvelope;
- (void)_regenerateTimeEncodingValuesForDataPoints;
- (id)currentSeries;
- (double)minimumPlaybackFrequency;
- (void)setMinimumPlaybackFrequency:;
- (double)maximumPlaybackFrequency;
- (void)setMaximumPlaybackFrequency:;
- (BOOL)usesBinauralPanning;
- (void)setUsesBinauralPanning:;
- (BOOL)isEndingScrubbing;
- (int)interpolationMode;
- (id)continuousScrubbingTone;
- (BOOL)isInLiveContinuousToneSession;
- (id)currentChartDescriptor;
- (long long)currentSeriesIndex;
- (id)playbackObserverUpdateTimer;
- (void)setPlaybackObserverUpdateTimer:;
- (id)playbackMixerDataSource;
- (void)setPlaybackMixerDataSource:;
- (id)playbackChartDataAudioDataSource;
- (void)setPlaybackChartDataAudioDataSource:;
- (id)playbackTrendlineAudioDataSource;
- (void)setPlaybackTrendlineAudioDataSource:;
- (id)scrubbingMixerDataSource;
- (void)setScrubbingMixerDataSource:;
- (id)scrubbingDiscreteAudioDataSource;
- (void)setScrubbingDiscreteAudioDataSource:;
- (id)scrubbingContinuousAudioDataSource;
- (void)setScrubbingContinuousAudioDataSource:;
- (id)scrubbingTrendlineAudioDataSource;
- (void)setScrubbingTrendlineAudioDataSource:;
- (id)liveContinuousMixerDataSource;
- (void)setLiveContinuousMixerDataSource:;
- (id)liveContinuousAudioDataSource;
- (void)setLiveContinuousAudioDataSource:;
- (id)playbackObservers;
- (void)setPlaybackObservers:;
- (id)trendlineScrubbingTone;
- (id)liveContinuousDataTone;
- (id)trendlineFunction;
- (void)setTrendlineFunction:;
- (id)scrubbingDiscreteDataRenderingContext;
- (id)scrubbingPlaybackCallbackRenderingContext;
- (id)liveTonePlaybackCallbackRenderingContext;
- (unsigned long long)playbackSampleCount;
- (id)dataCategories;
- (double)minimumDiscreteToneLength;
- (void)setMinimumDiscreteToneLength:;
- (double)maximumDiscreteToneLength;
- (void)setMaximumDiscreteToneLength:;
- (double)minimumToneVolume;
- (void)setMinimumToneVolume:;
- (double)maximumToneVolume;
- (void)setMaximumToneVolume:;
+ (id)sharedInstance;
@end
