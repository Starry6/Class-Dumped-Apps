@interface CKRecord : NSObject
@property (nonatomic) <NSSecureCoding> safari_systemFieldsEncoder;
@property (nonatomic) NSData safari_encodedSystemFieldsData;
@property (nonatomic) BOOL safari_hasAtLeastOneChangedField;
@property (nonatomic) <CKRecordKeyValueSetting> safari_encryptedValues;
@property (nonatomic) BOOL safari_isInPrivateDatabase;
@property (nonatomic) BOOL safari_cloudPerSiteSettingRecord;
@property (nonatomic) BOOL safari_cloudSettingRecord;
@property (nonatomic) BOOL safari_cloudBackgroundImageRecord;
@property (nonatomic) NSData safari_encodedRecordData;
@property (nonatomic) BOOL mt_isSynchronized;
@property (nonatomic) NSString mt_secretValue;
@property (nonatomic) CKContainerID containerID;
@property (nonatomic) BOOL hasUpdatedExpirationTimeInterval;
@property (nonatomic) NSNumber updatedExpirationTimeInterval;
@property (nonatomic) Q assetCount;
@property (nonatomic) Q assetDiskSize;
@property (nonatomic) BOOL containsPackageValues;
@property (nonatomic) BOOL hasPropertiesRequiringEncryption;
@property (nonatomic) BOOL hasModifiedPropertiesRequiringEncryption;
@property (nonatomic) BOOL hasPropertiesRequiringDecryption;
@property (nonatomic) BOOL hasEncryptedData;
@property (nonatomic) BOOL hasModifiedEncryptedData;
@property (nonatomic) BOOL containsIndexedKeys;
@property (nonatomic) BOOL serializeProtectionData;
@property (nonatomic) NSData zoneishKeyID;
@property (nonatomic) NSString previousProtectionEtag;
@property (nonatomic) NSString protectionEtag;
@property (nonatomic) NSString zoneProtectionEtag;
@property (nonatomic) NSString shareEtag;
@property (nonatomic) NSString fullToken;
@property (nonatomic) NSData shortSharingTokenData;
@property (nonatomic) NSData shortSharingTokenHashData;
@property (nonatomic) NSData encryptedFullTokenData;
@property (nonatomic) BOOL isMergeableValueDeltaRecord;
@property (nonatomic) NSString previousProtectionEtagFromUnitTest;
@property (nonatomic) NSData pcsKeyID;
@property (nonatomic) NSArray allPCSKeyIDs;
@property (nonatomic) CKReference share;
@property (nonatomic) CKReference previousShare;
@property (nonatomic) BOOL hasUpdatedShare;
@property (nonatomic) CKReference previousParent;
@property (nonatomic) BOOL hasUpdatedParent;
@property (nonatomic) ^{_PCSIdentityData=} signingPCSIdentity;
@property (nonatomic) CKEncryptedData chainPrivateKey;
@property (nonatomic) CKEncryptedData mutableEncryptedPSK;
@property (nonatomic) NSData chainProtectionInfo;
@property (nonatomic) NSData chainParentPublicKeyID;
@property (nonatomic) NSArray tombstonedPublicKeyIDs;
@property (nonatomic) NSString privateToken;
@property (nonatomic) NSURL mutableURL;
@property (nonatomic) NSDate expirationDate;
@property (nonatomic) BOOL expired;
@property (nonatomic) CKRecordID creatorUserRecordID;
@property (nonatomic) CKRecordID lastModifiedUserRecordID;
@property (nonatomic) NSDate creationDate;
@property (nonatomic) NSDate modificationDate;
@property (nonatomic) BOOL knownToServer;
@property (nonatomic) BOOL wasCached;
@property (nonatomic) Q size;
@property (nonatomic) q permission;
@property (nonatomic) NSDictionary pluginFields;
@property (nonatomic) CKRecordID recordID;
@property (nonatomic) NSString etag;
@property (nonatomic) NSArray conflictLoserEtags;
@property (nonatomic) NSString modifiedByDevice;
@property (nonatomic) BOOL containsAssetValues;
@property (nonatomic) NSData protectionData;
@property (nonatomic) BOOL wantsChainPCS;
@property (nonatomic) BOOL hasChainPCS;
@property (nonatomic) BOOL useLightweightPCS;
@property (nonatomic) NSString routingKey;
@property (nonatomic) NSString baseToken;
@property (nonatomic) NSString shortToken;
@property (nonatomic) BOOL wantsPublicSharingKey;
@property (nonatomic) NSData encryptedPublicSharingKey;
@property (nonatomic) CKEncryptedData mutableEncryptedPublicSharingKey;
@property (nonatomic) NSData mutableEncryptedPublicSharingKeyData;
@property (nonatomic) NSURL URL;
@property (nonatomic) NSURL uncachedURL;
@property (nonatomic) NSString displayedHostname;
@property (nonatomic) CKRecordValueStore valueStore;
@property (nonatomic) CKEncryptedRecordValueStore encryptedValueStore;
@property (nonatomic) NSDictionary values;
@property (nonatomic) NSDictionary originalValues;
@property (nonatomic) NSSet changedKeysSet;
@property (nonatomic) BOOL trackChanges;
@property (nonatomic) <CKRecordKeyValueSetting> encryptedValuesByKey;
@property (nonatomic) <CKRecordKeyValueSetting> valuesByKey;
@property (nonatomic) NSString recordType;
@property (nonatomic) NSString recordChangeTag;
@property (nonatomic) CKReference parent;
@property (nonatomic) Q hash;
@property (nonatomic) # superclass;
@property (nonatomic) NSString description;
@property (nonatomic) NSString debugDescription;
- (BOOL)safari_boolForKey:;
- (id)safari_dataForKey:;
- (id)safari_dateForKey:;
- (id)safari_numberForKey:;
- (id)safari_stringForKey:;
- (id)safari_arrayForKey:;
- (id)safari_encryptedDataForKey:;
- (id)safari_encryptedValues;
- (BOOL)safari_isInPrivateDatabase;
- (id)safari_systemFieldsEncoder;
- (id)safari_initWithEncodedRecordData:;
- (id)safari_encodedSystemFieldsData;
- (BOOL)safari_hasAtLeastOneChangedField;
- (id)safari_referenceForKey:;
- (BOOL)safari_isCloudPerSiteSettingRecord;
- (BOOL)safari_isCloudSettingRecord;
- (BOOL)safari_isCloudBackgroundImageRecord;
- (id)safari_encodedRecordData;
- (BOOL)mt_isSynchronized;
- (id)mt_secretValue;
- (void)mt_setSynchronized:;
- (void)mt_setSecretValue:;
- (void)setModifiedByDevice:;
- (void)setConflictLoserEtags:;
- (long long)permission;
- (void)setParent:;
- (id)pcsKeyID;
- (id)changedKeys;
- (id)valueForKey:;
- (id)modifiedByDevice;
- (void)CKDescribePropertiesUsing:;
- (id)conflictLoserEtags;
- (BOOL)containsValueOfClasses:passingTest:;
- (id)init;
- (void)setValue:forKey:;
- (void)setObject:forKey:;
- (id)allPCSKeyIDs;
- (void)setRoutingKey:;
- (void)dealloc;
- (id)CKDescriptionPropertiesWithPublic:private:shouldExpand:;
- (void)setRecordType:;
- (id)containerID;
- (void)setExpired:;
- (id)allTokens;
- (id)etag;
- (void)setShare:;
- (void)setChangedKeysSet:;
- (void)setCreationDate:;
- (void)setPcsKeyID:;
- (BOOL)isExpired;
- (void)setPermission:;
- (void)setProtectionData:;
- (id)values;
- (id)share;
- (void)setTombstonedPublicKeyIDs:;
- (void)setContainerID:;
- (id)allKeys;
- (id)redactedDescription;
- (BOOL)containsValueOfClasses:options:passingTest:;
- (void)setModificationDate:;
- (void)setExpirationDate:;
- (void)enumerateKeysAndValuesOfClasses:usingBlock:;
- (void)setExpirationAfterTimeInterval:;
- (id)recordType;
- (id)modificationDate;
- (void)setNilValueForKey:;
- (id)initWithCoder:;
- (void)CKAssignToContainerWithID:;
- (void)setRecordID:;
- (void)setSerializeProtectionData:;
- (id)debugDescription;
- (id)updatedExpirationTimeInterval;
- (void)setShareEtag:;
- (id)pluginFields;
- (void)setObject:forKeyedSubscript:;
- (id)zoneishKeyID;
- (void)setDisplayedHostname:;
- (BOOL)containsValuePassingTest:;
- (id)expirationDate;
- (BOOL)containsMergeableValues;
- (id)chainPrivateKey;
- (void)encodeWithCoder:;
- (id)chainParentPublicKeyID;
- (void)setChainParentPublicKeyID:;
- (id)displayedHostname;
- (id)originalValues;
- (id)changedKeysSet;
- (id)encryptedPublicSharingKey;
- (id)objectForKeyedSubscript:;
- (void)resetChangedKeys;
- (void)setPluginFields:;
- (void)setUpdatedExpirationTimeInterval:;
- (id)protectionData;
- (id)initWithRecordType:recordID:;
- (void)enumerateKeysAndValuesUsingBlock:;
- (id)objectForKey:;
- (id)recordID;
- (void)setZoneishKeyID:;
- (void)setChainPrivateKey:;
- (void).cxx_destruct;
- (void)enumerateKeysAndValuesOfClasses:options:usingBlock:;
- (void)setProtectionEtag:;
- (id)routingKey;
- (id)allValues;
- (void)setStreamingAssetRequestOptions:;
- (id)chainProtectionInfo;
- (id)description;
- (void)setEtag:;
- (void)setAllPCSKeyIDs:;
- (void)setChainProtectionInfo:;
- (void)setPreviousProtectionEtag:;
- (BOOL)serializeProtectionData;
- (void)setObjectNoValidate:forKey:;
- (BOOL)hasUpdatedExpirationTimeInterval;
- (id)protectionEtag;
- (id)parent;
- (void)setHasUpdatedExpirationTimeInterval:;
- (id)shareEtag;
- (id)tombstonedPublicKeyIDs;
- (id)URL;
- (id)previousProtectionEtag;
- (id)copyWithZone:;
- (unsigned long long)size;
- (id)creationDate;
- (id)initWithRecordType:zoneID:;
- (void)encodeSystemFieldsWithCoder:;
- (id)encryptedValueStore;
- (id)encryptedValues;
- (id)creatorUserRecordID;
- (id)initWithRecordTransport:;
- (id)_initSkippingValidationWithRecordType:recordID:;
- (id)initWithRecordType:;
- (id)copyWithZone:userFields:;
- (id)copyWithOriginalValues;
- (void)updateWithSavedRecordXPCMetadata:shouldOnlySaveAssetContent:;
- (void)updateMergeablesForSuccessfulSave;
- (void)copyStreamingAssetServerFieldsFromServerRecord:;
- (void)setBaseToken:;
- (void)setMutableEncryptedPSK:;
- (void)setMutableEncryptedPublicSharingKey:;
- (id)mutableEncryptedPublicSharingKey;
- (void)setMutableEncryptedPublicSharingKeyData:;
- (id)mutableEncryptedPublicSharingKeyData;
- (id)privateToken;
- (id)fullToken;
- (id)shortSharingTokenData;
- (id)shortSharingToken;
- (id)shortSharingTokenHashData;
- (id)encryptedFullTokenData;
- (id)shortToken;
- (id)uncachedURL;
- (BOOL)canHostServerURLInfo;
- (BOOL)hasChainPCS;
- (BOOL)isMoreRecentThanRecord:;
- (void)setTrackChanges:;
- (id)encryptedValuesByKey;
- (id)valuesByKey;
- (id)recordChangeTag;
- (id)_allStrings;
- (BOOL)containsAssetValues;
- (BOOL)containsPackageValues;
- (BOOL)containsIndexedKeys;
- (BOOL)hasPropertiesRequiringEncryption;
- (BOOL)hasModifiedPropertiesRequiringEncryption;
- (BOOL)hasPropertiesRequiringDecryption;
- (BOOL)hasEncryptedData;
- (BOOL)hasModifiedEncryptedData;
- (void)setParentReferenceFromRecord:;
- (void)setParentReferenceFromRecordID:;
- (void)setSigningPCSIdentity:;
- (void)preTiboEncodeWithCoder:;
- (unsigned long long)assetCount;
- (unsigned long long)assetDiskSize;
- (void)releasePackages;
- (void)removePackages;
- (void)claimPackagesWithSuccessBlock:failureBlock:completionBlock:;
- (BOOL)containsAssetBackedMergeableDeltas;
- (BOOL)canSkipRecordSaveForMergeables;
- (BOOL)containsMergeableValuesWithDeltasToSave;
- (BOOL)prepareMergeablesForUploadInContainer:useAssetsIfNecessary:error:;
- (void)countMergeableValueMetrics:;
- (void)setCreatorUserRecordID:;
- (id)lastModifiedUserRecordID;
- (void)setLastModifiedUserRecordID:;
- (id)zoneProtectionEtag;
- (void)setZoneProtectionEtag:;
- (BOOL)isMergeableValueDeltaRecord;
- (void)setIsMergeableValueDeltaRecord:;
- (id)previousProtectionEtagFromUnitTest;
- (void)setPreviousProtectionEtagFromUnitTest:;
- (id)previousShare;
- (void)setPreviousShare:;
- (BOOL)hasUpdatedShare;
- (void)setHasUpdatedShare:;
- (id)previousParent;
- (void)setPreviousParent:;
- (BOOL)hasUpdatedParent;
- (void)setHasUpdatedParent:;
- (id)signingPCSIdentity;
- (id)mutableEncryptedPSK;
- (id)mutableURL;
- (void)setMutableURL:;
- (BOOL)isKnownToServer;
- (void)setKnownToServer:;
- (BOOL)wasCached;
- (void)setWasCached:;
- (BOOL)wantsChainPCS;
- (void)setWantsChainPCS:;
- (BOOL)useLightweightPCS;
- (void)setUseLightweightPCS:;
- (id)baseToken;
- (BOOL)wantsPublicSharingKey;
- (void)setWantsPublicSharingKey:;
- (id)valueStore;
- (void)setValueStore:;
- (void)setEncryptedValueStore:;
- (BOOL)trackChanges;
+ (long long)safari_folderTypeForRecordName:;
+ (BOOL)accessInstanceVariablesDirectly;
+ (BOOL)supportsSecureCoding;
+ (id)recordWithDuplicatedPackagesOfRecord:error:;
+ (id)fullTokenFromBaseToken:privateToken:;
+ (id)encryptFullToken:shortSharingTokenData:;
+ (id)decryptFullToken:shortSharingTokenData:;
+ (id)shareURLWithShortToken:shareTitle:shareType:containerID:displayedHostname:;
+ (id)keyForListField:withIndexRange:;
+ (id)keyForInsertingIntoListField:atIndex:;
+ (id)keyForAppendingToListField:;
+ (id)keyForFetchingItems:atEndOfListField:;
@end
