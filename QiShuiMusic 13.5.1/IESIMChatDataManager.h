@interface IESIMChatDataManager : NSObject
@property (nonatomic) IESSaaSTIMOConversationsDataSource conversationDataSource;
@property (nonatomic) NSHashTable delegates;
@property (nonatomic) NSMutableDictionary chatDict;
@property (nonatomic) NSObject<OS_dispatch_queue> conversationQueue;
@property (nonatomic) IESIMStrategyWorkQueue upgradeGroupQueue;
@property (nonatomic) q currentSession;
@property (nonatomic) BOOL appWillTerminate;
@property (nonatomic) NSString observerToken;
@property (nonatomic) NSString pullerObserverToken;
@property (nonatomic) BOOL isRequesting;
@property (nonatomic) double startRequestTimestamp;
@property (nonatomic) @? loadRemainSessionsCompletion;
@property (nonatomic) BOOL hasKickOffPuller;
@property (nonatomic) q boxType;
@property (nonatomic) BOOL isForegorund;
@property (nonatomic) Q hash;
@property (nonatomic) # superclass;
@property (nonatomic) NSString description;
@property (nonatomic) NSString debugDescription;
@property (nonatomic) <IESIMLoginManagerProtocol> loginManager;
@property (nonatomic) <IESIMConversationFilterProtocol> conversationFilter;
@property (nonatomic) IESIMChatDataManagerConfig config;
@property (nonatomic) <IESIMChatDataManagerDataSource> dataSource;
@property (nonatomic) BOOL hasMore;
@property (nonatomic) <IESIMChatDataManagerColdStartDelegate> coldStartDelegate;
- (long long)boxType;
- (void)p_notifyTotalUnreadCountUpdate:;
- (BOOL)appWillTerminate;
- (long long)chatCount;
- (id)chatDict;
- (id)chatForIdentifier:;
- (id)coldStartDelegate;
- (void)continueFetchPullWithCompletion:;
- (id)conversationDataSource;
- (long long)conversationDataSource:anotherUnreadCountForConversation:;
- (long long)conversationDataSource:compareConversationA:withConversationB:;
- (long long)conversationDataSource:customUnreadCountForConversation:;
- (void)conversationDataSource:didEndUpdateSortOrderWithMonitor:error:;
- (void)conversationDataSource:didLoadAllConversations:;
- (void)conversationDataSource:didUpdateWithUpdate:updateReason:;
- (BOOL)conversationDataSourceNeedUpdateSortOrder:;
- (id)conversationFilter;
- (id)conversationQueue;
- (void)conversationUpdated:;
- (void)createConversationsDataSource;
- (id)currentConversationFilter;
- (void)deleteConversation:completion:;
- (void)didEndInstallInitForUser:inbox:pullerType:;
- (void)didEndPullForUser:inbox:pullerType:error:hasMore:userInfo:;
- (void)didInsertNewMessagesWithMessageIdentifiers:belongingConversationMap:reason:;
- (void)fetchAllConversationsInInbox:cursor:conversationType:pageCount:completion:;
- (void)fetchCreateConversationsInInbox:cursor:conversationType:sortType:completion:;
- (void)fetchJoinedConversationsInInbox:cursor:conversationType:sortType:completion:;
- (void)fetchMessagesInConversation:messageTypes:afterIndex:limit:completion:;
- (void)forceCheckConversationListIntegrity;
- (void)handleAppWillTerminateNotification:;
- (void)handleDidEnterBackgroundNotification:;
- (void)handleWillEnterForegroundNotification:;
- (BOOL)hasKickOffPuller;
- (void)iesim_didRemoveFilterOfConversation:;
- (id)initWithBoxType:;
- (BOOL)isForegorund;
- (BOOL)isRequesting;
- (id)loadRemainSessionsCompletion;
- (void)loadRemainSessionsWithCompletion:;
- (void)loadSessions;
- (void)messageUpdated:inConversation:;
- (void)newP2PMessageNotifyConversation:message:;
- (void)onConversationDataSourceConversationCleared:;
- (void)onConversationDataSourceConversationsDeleted:;
- (void)onConversationDataSourceMessagesCreated:belongingConversationMap:reason:;
- (void)onConversationDataSourceMessagesDeleted:belongingConversationMap:;
- (void)onConversationDataSourceMessagesUpdated:belongingConversationMap:;
- (void)onMessagesNewPropertiesUpdated:inConversation:messageOldPropertiesMap:messageNewPropertiesMap:reason:;
- (void)p_addKVO;
- (void)p_asyncRunBlockWithValidSessionID:inQueue:block:;
- (void)p_bindSession:toDataSource:;
- (void)p_notifyAllUnreadCountUpdate:;
- (void)p_notifyAnotherTotalUnreadCountUpdate:;
- (void)p_notifyChatUpdated:;
- (void)p_notifyFinishUpgradeForGroup;
- (void)p_notifyTotalUnreadMentionUpdate:;
- (long long)p_sessionOfDataSource:;
- (BOOL)p_shouldDisplayConversation:filter:;
- (id)pullerObserverToken;
- (void)setAppWillTerminate:;
- (void)setBoxType:;
- (void)setChatDict:;
- (void)setColdStartDelegate:;
- (void)setConversationDataSource:;
- (void)setConversationFilter:;
- (void)setConversationQueue:;
- (void)setHasKickOffPuller:;
- (void)setIsForegorund:;
- (void)setIsRequesting:;
- (void)setLoadRemainSessionsCompletion:;
- (void)setPullerObserverToken:;
- (void)setStartRequestTimestamp:;
- (void)setUpgradeGroupQueue:;
- (void)setupWithConfig:;
- (BOOL)shouldFilterConversation:;
- (double)startRequestTimestamp;
- (void)strategyWorkQueueDidFinished:;
- (id)upgradeGroupQueue;
- (void)addDelegate:;
- (void)setDataSource:;
- (id)init;
- (long long)currentSession;
- (id)delegates;
- (void)setDelegates:;
- (void)dealloc;
- (void)removeDelegate:;
- (void)setConfig:;
- (void)setHasMore:;
- (void)setCurrentSession:;
- (void)setObserverToken:;
- (void)clear;
- (id)dataSource;
- (void).cxx_destruct;
- (BOOL)hasMore;
- (id)config;
- (id)observerToken;
- (id)loginManager;
- (void)setLoginManager:;
- (void)p_removeObservers;
- (void)p_addObservers;
@end
