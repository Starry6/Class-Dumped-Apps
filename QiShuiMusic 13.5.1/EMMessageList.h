@interface EMMessageList : EMCollection
@property (nonatomic) EMMessageRepository repository;
@property (nonatomic) EMMailboxScope mailboxScope;
@property (nonatomic) EMThreadScope threadScope;
@property (nonatomic) EFLazyCache cache;
@property (nonatomic) <EFScheduler> observerScheduler;
@property (nonatomic) NSObject<OS_dispatch_queue> contentProtectionQueue;
@property (nonatomic) EMMessageList unfilteredMessageList;
@property (nonatomic) NSSet recentlyCollapsedItemIDs;
@property (nonatomic) EMCollectionItemIDStateCapturer stateCapturer;
@property (nonatomic) BOOL isThreaded;
@property (nonatomic) NSSet expandedThreadItemIDs;
@property (nonatomic) Q hash;
@property (nonatomic) # superclass;
@property (nonatomic) NSString description;
@property (nonatomic) NSString debugDescription;
@property (nonatomic) EMObjectID objectID;
- (id)ef_publicDescription;
- (id)threadScope;
- (id)mailboxScope;
- (id)labelForStateCapture;
- (void)dealloc;
- (void)setRepository:;
- (id)observerScheduler;
- (id)debugDescription;
- (void)contentProtectionStateChanged:previousState:;
- (id)repository;
- (void).cxx_destruct;
- (void)stopObserving:;
- (id)contentProtectionQueue;
- (id)cache;
- (id)initWithQuery:repository:;
- (id)messageListItemForItemID:;
- (void)collection:addedItemIDs:before:;
- (void)collection:addedItemIDs:after:;
- (void)collection:movedItemIDs:before:;
- (void)collection:movedItemIDs:after:;
- (void)collection:changedItemIDs:;
- (void)collection:deletedItemIDs:;
- (void)collection:replacedExistingItemID:withNewItemID:;
- (void)collectionDidFinishInitialLoad:;
- (id)objectIDForItemID:;
- (id)itemIDForObjectID:;
- (BOOL)objectIDBelongsToCollection:;
- (id)removeItemIDs:;
- (void)notifyChangeObserversAboutAddedItemIDs:before:extraInfo:;
- (void)notifyChangeObserversAboutAddedItemIDs:after:extraInfo:;
- (void)notifyChangeObserversAboutChangesByItemIDs:;
- (void)notifyChangeObserver:stockedItemIDs:;
- (void)finishRecovery;
- (void)queryMatchedMovedObjectIDs:before:;
- (void)queryMatchedMovedObjectIDs:after:;
- (void)queryMatchedChangesByObjectIDs:;
- (id)itemIDsForStateCaptureWithErrorString:;
- (void)queryMatchedOldestItemsUpdatedForMailboxesObjectIDs:;
- (id)initWithMailboxes:repository:sortDescriptor:transformPredicate:ignoreMessageAdditionsPredicate:targetClass:shouldTrackOldestItems:shouldUpdateDisplayDate:labelPrefix:;
- (id)initWithObjectID:query:repository:;
- (void)_commonInitWithRepository:;
- (id)_unreadItemIDsFromExtraInfo:;
- (id)_hintsByObjectIDFromExtraInfo:;
- (id)filteredMessageListWithPredicate:ignoredMessagesPredicate:;
- (id)unfilteredMessageList;
- (BOOL)isThreaded;
- (id)expandedThreadItemIDs;
- (void)expandThreadsFromThreadItemIDs:;
- (void)expandThread:;
- (void)collapseThread:;
- (BOOL)anyExpandedThreadContainsItemID:;
- (BOOL)recentlyCollapsedThreadContainsItemID:;
- (void)clearRecentlyCollapsedThread;
- (id)messageListItemForItemID:ifAvailable:;
- (id)messageListItemsForItemIDs:;
- (id)messageListItemsForItemIDs:ifAvailable:;
- (id)_availableMessageListItemsForItemIDs:;
- (void)_attemptToFinishRetryingPromisesByItemID:;
- (void)invalidateCacheForItemIDs:;
- (id)itemIDOfMessageListItemWithDisplayMessage:;
- (void)collection:changedItemIDs:itemIDsWithCountChanges:;
- (id)_expandedObjectIDsForObjectIDs:;
- (BOOL)_threadIsExpanded:;
- (BOOL)_threadIsExpandedForItemID:;
- (id)_nextThreadItemIDAfterThreadItemID:;
- (id)itemIDOfFirstMessageListItemMatchingPredicate:;
- (void)setUnfilteredMessageList:;
- (id)recentlyCollapsedItemIDs;
- (void)setRecentlyCollapsedItemIDs:;
- (id)stateCapturer;
+ (id)log;
+ (id)threadedMessageListForMailboxes:withRepository:shouldTrackOldestItems:shouldUpdateDisplayDate:;
+ (id)threadedMessageListForMailboxes:withRepository:shouldTrackOldestItems:shouldUpdateDisplayDate:sortDescriptor:transformPredicate:ignoreMessageAdditionsPredicate:;
+ (id)simpleMessageListForMailboxes:withRepository:shouldTrackOldestItems:shouldUpdateDisplayDate:;
+ (id)simpleMessageListForMailboxes:withRepository:shouldTrackOldestItems:shouldUpdateDisplayDate:sortDescriptor:transformPredicate:ignoreMessageAdditionsPredicate:;
+ (id)groupedSenderMessageListForMailboxes:senderBuckets:includeVIPs:limitDate:withRepository:;
@end
