@interface HMDFPSMonitor : HMDMonitor
@property (nonatomic) double lastUpdateTime;
@property (nonatomic) Q frameCount;
@property (nonatomic) double lastFPS;
@property (nonatomic) NSObject<OS_dispatch_queue> fpsQueue;
@property (nonatomic) NSMutableArray customScenes;
@property (nonatomic) NSString customSceneStr;
@property (nonatomic) NSMutableSet fpsCallbacks;
@property (nonatomic) NSMutableSet fpsCallbackObjs;
@property (nonatomic) Q maximumFramesPerSecond;
@property (nonatomic) double targetTimestamp;
@property (nonatomic) double lastTimestamp;
@property (nonatomic) HMDFluencyDisplayLink fluencyDisplayLink;
@property (nonatomic) HMDFluencyDisplayLinkCallbackObj callbackObj;
@property (nonatomic) NSInteger refCount;
@property (nonatomic) Q hash;
@property (nonatomic) # superclass;
@property (nonatomic) NSString description;
@property (nonatomic) NSString debugDescription;
- (void)removeFPSMonitorCallbackObject:;
- (id)fpsCallbackObjs;
- (double)lastFPS;
- (void)setCallbackObj:;
- (void)addFPSMonitorCallback:;
- (id)addFPSMonitorCallbackObject:;
- (void)addFPSRecordWithFPSValue:scene:isScrolling:extralValue:;
- (void)callFPSMonitorCallback:;
- (id)callbackObj;
- (id)customSceneStr;
- (id)customScenes;
- (void)enterCustomScene:;
- (void)enterFluencyCustomSceneWithUniq:;
- (id)fluencyDisplayLink;
- (id)fpsCallbacks;
- (id)fpsQueue;
- (BOOL)isDisplayLinkStarted;
- (void)leaveCustomScene:;
- (void)leaveFluencyCustomSceneWithUniq:;
- (void)p_updateFrameWithTimestamp:duration:targetTimestamp:;
- (id)refresh_async;
- (void)registerDisplayLink;
- (void)removeFPSMoitorCallback:;
- (unsigned long long)reporterPriority;
- (void)setCustomSceneStr:;
- (void)setCustomScenes:;
- (void)setFluencyDisplayLink:;
- (void)setFpsCallbackObjs:;
- (void)setFpsCallbacks:;
- (void)setFpsQueue:;
- (void)setLastFPS:;
- (void)setTargetTimestamp:;
- (void)startWithInterval:;
- (void)unRegisterDisplayLink;
- (void)updateConfig:;
- (unsigned long long)frameCount;
- (int)refCount;
- (double)lastUpdateTime;
- (id)init;
- (void)dealloc;
- (void)setLastTimestamp:;
- (void)stop;
- (void)suspend;
- (void)setFrameCount:;
- (void)resume;
- (void)setRefCount:;
- (double)targetTimestamp;
- (unsigned long long)maximumFramesPerSecond;
- (void).cxx_destruct;
- (double)lastTimestamp;
- (void)setLastUpdateTime:;
- (void)setMaximumFramesPerSecond:;
- (Class)storeClass;
+ (id)sharedMonitor;
@end
