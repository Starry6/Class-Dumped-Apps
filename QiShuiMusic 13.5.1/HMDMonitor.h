@interface HMDMonitor : HeimdallrModule
@property (nonatomic) HMDPerformanceReportRequest reportingRequest;
@property (nonatomic) NSNumber customReportIMP;
@property (nonatomic) HMDPerformanceReportRequest reportingRequest;
@property (nonatomic) HMDPerformanceReportRequest reportingRequest;
@property (nonatomic) NSDictionary customUploadDic;
@property (nonatomic) NSMutableArray customScenes;
@property (nonatomic) NSString customSceneStr;
@property (nonatomic) HMDMonitorCurve curve;
@property (nonatomic) NSString name;
@property (nonatomic) double refreshInterval;
@property (nonatomic) double curPageUsage;
- (id)customUploadDic;
- (id)customReportIMP;
- (void)willLeaveScene:;
- (void)addMonitorCallbacks:;
- (void)cleanupNotUploadAndReportedPerformanceData;
- (void)cleanupPerformanceDataWithConfig:;
- (void)cleanupUnusedPerformanfeData;
- (void)cleanupWithConfig:;
- (double)curPageUsage;
- (id)customSceneStr;
- (id)customScenes;
- (long long)dbMaxSize;
- (id)debugRealPerformanceDataWithConfig:;
- (void)didEnterScene:;
- (void)dropAllDataForServerState;
- (void)dropAllMonitorRecords;
- (BOOL)enableUpload;
- (void)enterCustomScene:;
- (id)fetchUploadRecords;
- (id)getDataWithRecords:;
- (void)hmdCutomPerformanceDataReportSuccess:;
- (id)hmdCutomPerformanceDataWithCountLimit:;
- (void)leaveCustomScene:;
- (BOOL)monitorCurve:willSaveRecords:;
- (BOOL)needSyncStart;
- (void)performanceDataDidReportSuccess:;
- (void)performanceDataSaveImmediately;
- (BOOL)performanceDataSource;
- (id)performanceDataWithCountLimit:;
- (id)performanceDataWithLimitSize:limitCount:currentSize:;
- (void)performanceSizeLimitedDataDidReportSuccess:;
- (void)prepareForDefaultStart;
- (void)recordSizeCalculationWithRecord:;
- (void)removeKVO;
- (void)removeMonitorCallbacks:;
- (id)reportingRequest;
- (void)setCurPageUsage:;
- (void)setCustomReportIMP:;
- (void)setCustomSceneStr:;
- (void)setCustomScenes:;
- (void)setCustomUploadDic:;
- (void)setDropData:;
- (void)setReportingRequest:;
- (void)setTimerRefresh:;
- (void)setupWithHeimdallr:;
- (void)startWithInterval:;
- (void)updateConfig:;
- (void)updateRecordWithConfig:;
- (id)refresh;
- (id)init;
- (id)curve;
- (void)start;
- (void)stop;
- (void)observeValueForKeyPath:ofObject:change:context:;
- (double)refreshInterval;
- (void).cxx_destruct;
- (void)setRefreshInterval:;
- (id)name;
- (Class)storeClass;
- (void)registerKVO;
+ (id)sharedMonitor;
@end
