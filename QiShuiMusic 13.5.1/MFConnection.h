@interface MFConnection : NSObject
@property (nonatomic) BOOL isFetching;
@property (nonatomic) double lastUsedTime;
@property (nonatomic) NSArray capabilities;
@property (nonatomic) NSArray authenticationMechanisms;
@property (nonatomic) NSString securityProtocol;
@property (nonatomic) NSString accountLogString;
@property (nonatomic) BOOL isValid;
@property (nonatomic) BOOL hasBytesAvailable;
@property (nonatomic) BOOL isCellularConnection;
@property (nonatomic) BOOL isConstrained;
@property (nonatomic) BOOL loginDisabled;
@property (nonatomic) BOOL usesOpportunisticSockets;
@property (nonatomic) Q hash;
@property (nonatomic) # superclass;
@property (nonatomic) NSString description;
@property (nonatomic) NSString debugDescription;
- (BOOL)isConstrained;
- (BOOL)writeData:;
- (void)enableThroughputMonitoring:;
- (id)init;
- (void)dealloc;
- (BOOL)hasBytesAvailable;
- (id)capabilities;
- (void)disconnect;
- (BOOL)isCellularConnection;
- (void)stopActivity;
- (id)securityProtocol;
- (double)lastUsedTime;
- (BOOL)isValid;
- (BOOL)usesOpportunisticSockets;
- (void).cxx_destruct;
- (BOOL)loginDisabled;
- (id)description;
- (void)startActivity;
- (id)copyDiagnosticInformation;
- (id)authenticationMechanisms;
- (BOOL)isFetching;
- (void)setIsFetching:;
- (void)_setupSocketWithSettings:;
- (BOOL)connectUsingSettings:;
- (BOOL)connectUsingAccount:;
- (BOOL)connectUsingFallbacksForAccount:;
- (void)test_setSocket:;
- (BOOL)authenticateUsingAccount:;
- (BOOL)writeBytes:length:dontLogBytesInRange:;
- (BOOL)writeData:dontLogBytesInRange:;
- (void)setDesiredReadBufferLength:;
- (void)logReadChars:length:;
- (BOOL)readLineIntoData:;
- (BOOL)readBytesIntoData:desiredLength:;
- (BOOL)authenticateUsingAccount:authenticator:;
- (BOOL)startTLSForAccount:;
- (BOOL)enableSSL;
- (void)_clearBuffer;
- (BOOL)startCompression;
- (void)endCompression;
- (id)connectionSettings;
- (void)setConnectionSettings:;
- (BOOL)_certificateIsTrustedForAccount:;
- (void)_setCertificateIsTrusted:forAccount:;
- (BOOL)_evaluateTrust:errorPtr:;
- (id)accountLogString;
+ (void)readLoggingDefaults;
+ (void)logConnection:type:data:;
+ (void)flushLog;
+ (id)logClasses;
+ (void)setLogClasses:;
+ (BOOL)logAllSocketActivity;
+ (void)setLogAllSocketActivity:;
+ (id)logActivityOnPorts;
+ (void)setLogActivityOnPorts:;
+ (id)logActivityOnHosts;
+ (void)setLogActivityOnHosts:;
+ (id)certUIPromptScheduler;
+ (BOOL)shouldTryFallbacksAfterError:;
@end
