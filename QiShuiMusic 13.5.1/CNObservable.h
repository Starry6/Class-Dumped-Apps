@interface CNObservable : NSObject
@property (nonatomic) NSString debugPipelineDescription;
@property (nonatomic) Q hash;
@property (nonatomic) # superclass;
@property (nonatomic) NSString description;
@property (nonatomic) NSString debugDescription;
- (id)autocompleteTimeoutAfterDelay:doOnTimeout:scheduler:;
- (id)activityIndicatingObservableWithActivityDidStartHandler:activityDidStopHandler:;
- (id)localObservableWithScheduler:;
- (id)localObservableWithScheduler:doOnTimeout:;
- (id)networkObservableWithActivityDidStartHandler:activityDidStopHandler:timeoutDelay:subscriptionDelay:scheduler:;
- (id)publish;
- (id)distinct;
- (id)map:;
- (id)debugPipelineDescription;
- (id)subscribe:;
- (id)flatMap:schedulerProvider:;
- (id)timeInterval;
- (id)any:;
- (void).cxx_destruct;
- (id)pipelineDescriptionWithOperation:onObservable:;
- (void)enumerateObjectsUsingBlock:;
- (id)pipelineDescription:;
- (id)flatMap:;
- (id)subscribeOn:;
- (id)observeOn:;
- (id)onError:;
- (id)onErrorHandler:;
- (id)take:;
- (id)throttle:schedulerProvider:;
- (id)allObjects:;
- (id)startWith:;
- (id)scan:seed:;
- (id)ambWith:;
- (id)buffer:;
- (id)buffer:interval:;
- (id)buffer:interval:scheduler:;
- (id)bufferWithInterval:;
- (id)bufferWithInterval:scheduler:;
- (id)concatMap:;
- (id)concatMap:schedulerProvider:;
- (id)delay:scheduler:;
- (id)delaySubscription:scheduler:;
- (id)dematerialize;
- (id)distinctUntilChanged;
- (id)doOnCancel:;
- (id)doOnCompletion:;
- (id)doOnError:;
- (id)doOnNext:;
- (id)doOnSubscribe:;
- (id)doOnTerminate:;
- (id)filter:;
- (id)ignoreElements;
- (id)materialize;
- (id)onEmpty:;
- (id)sample:;
- (id)sample:scheduler:;
- (id)sampleWithObservable:;
- (id)scan:;
- (id)skip:;
- (id)skipLast:;
- (id)skipUntil:;
- (id)startWith:scheduler:;
- (id)switch;
- (id)switchWithSchedulerProvider:;
- (id)switchMap:;
- (id)switchMap:schedulerProvider:;
- (id)takeLast:;
- (id)takeUntil:;
- (id)throttle:options:schedulerProvider:;
- (id)throttleFirst:scheduler:;
- (id)throttleFirstAndLast:schedulerProvider:;
- (id)timeIntervalWithScheduler:;
- (id)timeoutAfterDelay:alternateObservable:schedule:;
- (id)timestampWithScheduler:;
- (id)toArray;
- (id)using:;
+ (id)observableWithBlock:;
+ (id)concatenate:;
+ (id)merge:;
+ (id)os_log;
+ (id)emptyObservable;
+ (id)observableWithFuture:;
+ (id)observableWithResult:;
+ (id)merge:schedulerProvider:;
+ (id)observableWithInitialState:condition:nextState:resultSelector:;
+ (id)observableWithInitialState:condition:nextState:resultSelector:scheduler:;
+ (id)observableWithInitialState:condition:nextState:resultSelector:delay:scheduler:;
+ (id)os_log_protocol;
+ (id)observableWithFuture:schedulerProvider:;
+ (id)observableWithFutures:;
+ (id)observableWithFutures:schedulerProvider:;
+ (id)observableWithRange:;
+ (id)observableWithRange:scheduler:;
+ (id)observableWithRange:interval:scheduler:;
+ (id)observableWithResults:;
+ (id)observableWithResults:scheduler:;
+ (id)observableWithResults:interval:scheduler:;
+ (id)observableWithError:;
+ (id)observableWithTimeInterval:scheduler:;
+ (id)neverObservable;
+ (id)timerWithDelay:;
+ (id)timerWithDelay:scheduler:;
+ (id)amb:;
+ (id)combineLatest:;
+ (id)combineLatest:schedulerProvider:;
+ (id)combineLatest:resultScheduler:schedulerProvider:;
+ (id)forkJoin:scheduler:;
+ (id)progressiveForkJoin:scheduler:;
+ (id)observableWithAbsoluteTimestamps:schedulerProvider:;
+ (id)observableWithRelativeTimestamps:schedulerProvider:;
+ (void)sendNextTimestampFromQueue:toObserver:untilCanceled:scheduler:;
+ (id)scannerResultsInString:;
+ (id)asyncScannerResultsInString:;
+ (id)observableWithScannerResultsInString:;
+ (id)observableWithScannerResultsOfType:inString:;
+ (id)binderTypeForResultType:;
+ (id)observableWithEmailAddressesInString:;
+ (id)observableOnDefaultNotificationCenterWithName:object:;
+ (id)observableOnNotificationCenter:withName:object:;
+ (id)observableOnDarwinNotificationCenterWithName:;
+ (id)observableForKeyPath:ofObject:withOptions:;
@end
