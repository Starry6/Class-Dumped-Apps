@interface SCNMTLRenderContext : NSObject
@property (nonatomic) q pendingGPUFrameCount;
@property (nonatomic) q sampleCount;
@property (nonatomic) double contentScaleFactor;
@property (nonatomic) double superSamplingFactor;
@property (nonatomic) {SCNMatrix4=ffffffffffffffff} screenTransform;
@property (nonatomic) BOOL wantsWideGamut;
@property (nonatomic) BOOL disableLinearRendering;
@property (nonatomic) BOOL enableARMode;
@property (nonatomic) BOOL shouldDelegateARCompositing;
@property (nonatomic) BOOL isOpaque;
@property (nonatomic) q currentFrameIndex;
@property (nonatomic) BOOL showsAuthoringEnvironment;
@property (nonatomic) BOOL enablesDeferredShading;
@property (nonatomic) BOOL reverseZ;
@property (nonatomic) BOOL collectsCompilationErrors;
@property (nonatomic) NSMutableDictionary compilationErrors;
@property (nonatomic) NSString generatedTexturePath;
@property (nonatomic) I features;
@property (nonatomic) NSInteger profile;
@property (nonatomic) SCNMTLResourceManager resourceManager;
@property (nonatomic) Q debugOptions;
@property (nonatomic) <MTLRenderCommandEncoder> currentRenderCommandEncoder;
@property (nonatomic) MTLRenderPassDescriptor currentRenderPassDescriptor;
@property (nonatomic) <MTLCommandBuffer> currentCommandBuffer;
@property (nonatomic) <MTLCommandBuffer> resourceCommandBuffer;
@property (nonatomic) ^{SCNMTLComputeCommandEncoder=[31@][31Q][128@][16@]@@@^{SCNMTLBufferPool}I[2Q][1Q]} resourceComputeEncoder;
@property (nonatomic) ^{SCNMTLBlitCommandEncoder=@@} resourceBlitEncoder;
@property (nonatomic) <MTLDevice> device;
@property (nonatomic) ^{__C3DEngineContext=} engineContext;
@property (nonatomic) <MTLTexture> textureTarget;
@property (nonatomic) CAMetalLayer layerTarget;
@property (nonatomic) q preferredFramesPerSecond;
@property (nonatomic) BOOL shouldPresentAfterMinimumDuration;
@property (nonatomic) NSObject<OS_dispatch_queue> resourceQueue;
@property (nonatomic) NSObject<OS_dispatch_group> resourceGroup;
@property (nonatomic) MTLRenderPassDescriptor clientRenderPassDescriptor;
@property (nonatomic) <MTLRenderCommandEncoder> clientRenderCommandEncoder;
@property (nonatomic) <MTLCommandBuffer> clientCommandBuffer;
@property (nonatomic) <MTLCommandQueue> clientCommandQueue;
@property (nonatomic) <MTLCommandQueue> commandQueue;
@property (nonatomic) ^v frameConstantBufferPool;
@property (nonatomic) ^v frameTexturePool;
@property (nonatomic) <SCNMTLRenderContextResourceManagerMonitor> resourceManagerMonitor;
@property (nonatomic) <SCNMTLRenderContextCommandBufferStatusMonitor> commandBufferStatusMonitor;
@property (nonatomic) ^v renderEncoder;
@property (nonatomic) Q hash;
@property (nonatomic) # superclass;
@property (nonatomic) NSString description;
@property (nonatomic) NSString debugDescription;
- (id)stats;
- (long long)sampleCount;
- (void)pushDebugGroup:;
- (void)setDebugOptions:;
- (void)setSampleCount:;
- (void)dealloc;
- (double)contentScaleFactor;
- (void)setPreferredFramesPerSecond:;
- (unsigned long long)depthStencilPixelFormat;
- (id)renderSize;
- (id)currentRenderPassDescriptor;
- (void)setContentScaleFactor:;
- (long long)preferredFramesPerSecond;
- (BOOL)isOpaque;
- (int)profile;
- (id)commandQueue;
- (id)currentRenderCommandEncoder;
- (unsigned long long)debugOptions;
- (void).cxx_destruct;
- (void)popDebugGroup;
- (id)resourceManager;
- (unsigned int)features;
- (void)writeBytes:length:;
- (id).cxx_construct;
- (id)device;
- (id)texture::;
- (id)buffer::::;
- (id)sampler::;
- (id)constantData:;
- (BOOL)constantOffsetAndSize::::;
- (void)viewports::;
- (id)renderTargetInfo;
- (BOOL)vrrEnabled;
- (unsigned long long)colorPixelFormatAtIndex:;
- (id)clientCommandQueue;
- (id)resourceQueue;
- (float)renderTime;
- (BOOL)reverseZ;
- (id)textureTarget;
- (id)currentCommandBuffer;
- (long long)currentFrameIndex;
- (id)_createPassWithVertex:fragment:;
- (void)_reduceStatsOfConstantBuffer:;
- (id)initWithDevice:engineContext:;
- (id)engineContext;
- (id)frameConstantBufferPool;
- (void)setScreenTransform:;
- (id)screenTransform;
- (BOOL)supportsMTLFeatureSet:;
- (void)setWantsWideGamut:;
- (BOOL)wantsWideGamut;
- (long long)pendingGPUFrameCount;
- (void)setDisableLinearRendering:;
- (BOOL)disableLinearRendering;
- (void)setEnableARMode:;
- (BOOL)enableARMode;
- (void)setShouldDelegateARCompositing:;
- (BOOL)shouldDelegateARCompositing;
- (void)setReverseZ:;
- (void)setIsOpaque:;
- (void)_clearUnusedBindingPoints;
- (id)resourceGroup;
- (void)beginFrame:;
- (void)endFrameSceneSpecifics;
- (void)endFrameWaitingUntilCompleted:status:error:;
- (id)layerTarget;
- (id)_finalRenderTexture;
- (id)_reflectionProbeArrayTexture;
- (void)_setReflectionProbeArrayTexture:;
- (id)_clusterInfo;
- (void)_clearRenderCaches;
- (void)_createResourceCommandBufferIfNeeded;
- (id)resourceCommandBuffer;
- (id)resourceBlitEncoder;
- (id)resourceComputeEncoder;
- (void)beginRenderPass:renderEncoder:parameters:;
- (void)endRenderPass;
- (id)newRenderTargetWithDescription:size:arrayLength:;
- (id)textureForEffectSlot:;
- (id)irradianceTextureForEffectSlot:;
- (id)radianceTextureForEffectSlot:;
- (void)_logLightingInformation;
- (void)setRasterizerStates:;
- (void)_setSceneBufferAtVertexIndex:fragmentIndex:;
- (void)_setMeshBuffers:;
- (void)_drawMeshElement:instanceCount:;
- (void)_drawPatchForMeshElement:instanceCount:;
- (void)_updateProjectionMatrixForOrthographicSkyboxRenderingIfNeeded:;
- (float)_zFarForSkyboxRenderingProjectionMatrix:defaultZFar:;
- (void)renderBackground:engineContext:passInstance:;
- (void)renderVideoBackground:engineContext:slot:;
- (void)renderMesh:meshElement:withProgram:engineContext:transform:color:rasterizerStates:blendState:texture:depthBias:;
- (void)processRendererElements:count:engineIterationContext:;
- (void)startProcessingRendererElementsWithEngineIterationContext:;
- (void)stopProcessingRendererElements:;
- (void)_prepareMaterialTextures:;
- (void)drawRenderElement:withPass:;
- (BOOL)showsAuthoringEnvironment;
- (void)setShowsAuthoringEnvironment:;
- (BOOL)collectsCompilationErrors;
- (void)setCollectsCompilationErrors:;
- (id)compilationErrors;
- (void)drawWireframeOverlayForElements:range:store:passInstance:;
- (BOOL)mapVolatileMesh:verticesCount:;
- (void)unmapVolatileMesh:modifiedVerticesCount:;
- (void)resetVolatileMeshes;
- (id)_newMTLBufferFromPoolWithLength:;
- (void)_recycleMTLBufferToPool:;
- (id)createVolatileMeshElementOfType:primitiveCount:bytesPerIndex:;
- (void)unmapVolatileMeshElement:;
- (void)resetVolatileMeshElements;
- (void)drawFullScreenQuadForPass:;
- (void)beginDeferredLighting;
- (void)renderLight:lightType:lightData:;
- (void)endDeferredLighting;
- (void)_drawPBRTextures;
- (void)_drawShadowMaps;
- (void)_drawFullScreenTexture:over:;
- (void)renderSKSceneWithRenderer:overlay:atTime:;
- (void)endRenderCommandEncoding;
- (void)setCurrentPassHash:;
- (void)setCurrentPassMaterial:;
- (unsigned long long)getCurrentPassHash;
- (id)getCurrentPassMaterial;
- (unsigned long long)cubeArrayTypeIfSupported;
- (void)addCommandBufferScheduledHandler:;
- (void)addCommandBufferCompletedHandler:;
- (void)addDrawablePresentedHandler:;
- (id)clientRenderPassDescriptor;
- (void)setClientRenderPassDescriptor:;
- (id)clientRenderCommandEncoder;
- (void)setClientRenderCommandEncoder:;
- (id)clientCommandBuffer;
- (void)setClientCommandBuffer:;
- (BOOL)enablesDeferredShading;
- (void)setEnablesDeferredShading:;
- (id)frameTexturePool;
- (BOOL)shouldPresentAfterMinimumDuration;
- (void)setShouldPresentAfterMinimumDuration:;
- (id)renderEncoder;
- (void)setClientCommandQueue:;
- (id)resourceManagerMonitor;
- (void)setResourceManagerMonitor:;
- (id)commandBufferStatusMonitor;
- (void)setCommandBufferStatusMonitor:;
- (double)superSamplingFactor;
- (void)setSuperSamplingFactor:;
- (id)generatedTexturePath;
- (void)setGeneratedTexturePath:;
+ (void)registerBindings;
@end
