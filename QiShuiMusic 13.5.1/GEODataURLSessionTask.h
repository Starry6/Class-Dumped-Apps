@interface GEODataURLSessionTask : NSObject
@property (nonatomic) double elapsedTime;
@property (nonatomic) double loadTime;
@property (nonatomic) NSString entityTag;
@property (nonatomic) NSString contentLengthString;
@property (nonatomic) Q contentLength;
@property (nonatomic) BOOL failedDueToCancel;
@property (nonatomic) q HTTPStatusCode;
@property (nonatomic) NSURL originalRequestURL;
@property (nonatomic) NSObject<OS_os_activity> activity;
@property (nonatomic) <GEODataSessionTaskDelegate> delegate;
@property (nonatomic) NSObject<OS_dispatch_queue> delegateQueue;
@property (nonatomic) NSData cachedData;
@property (nonatomic) GEODataRequest request;
@property (nonatomic) double startTime;
@property (nonatomic) BOOL finished;
@property (nonatomic) NSURLSessionTask backingTask;
@property (nonatomic) I sessionIdentifier;
@property (nonatomic) BOOL receivedRNFNotification;
@property (nonatomic) NSData receivedData;
@property (nonatomic) Q receivedDataLength;
@property (nonatomic) NSHTTPURLResponse response;
@property (nonatomic) NSError error;
@property (nonatomic) NSURLRequest originalURLRequest;
@property (nonatomic) {?=i(?=iii)} requestKind;
@property (nonatomic) float priority;
@property (nonatomic) BOOL protocolBufferHasPreamble;
@property (nonatomic) NSURLSessionTaskMetrics urlTaskMetrics;
@property (nonatomic) NSURL downloadedFileURL;
@property (nonatomic) NSString remoteAddressAndPort;
@property (nonatomic) Q outgoingPayloadSize;
@property (nonatomic) Q incomingPayloadSize;
@property (nonatomic) BOOL failedDueToCancel;
@property (nonatomic) <GEORequestCounterTicket> requestCounterTicket;
@property (nonatomic) GEOClientMetrics clientMetrics;
@property (nonatomic) <NSObject> parsedResponse;
@property (nonatomic) Q requestedMultipathServiceType;
@property (nonatomic) BOOL mptcpNegotiated;
@property (nonatomic) Q hash;
@property (nonatomic) # superclass;
@property (nonatomic) NSString description;
@property (nonatomic) NSString debugDescription;
- (void)backingTask:didBecomeDownloadTask:;
- (id)init;
- (void)cancel;
- (void)setPriority:;
- (id)cachedData;
- (BOOL)finished;
- (void)start;
- (unsigned int)sessionIdentifier;
- (void)setError:;
- (id)urlTaskMetrics;
- (double)elapsedTime;
- (BOOL)mptcpNegotiated;
- (BOOL)receivedRNFNotification;
- (id)error;
- (id)createURLRequest;
- (BOOL)didValidateEntityTagForData:entityTag:;
- (void)_prepareForRestart;
- (id)request;
- (double)startTime;
- (void)updateRequest:completionHandler:;
- (id)debugDescription;
- (id)delegateQueue;
- (void)didCollectMetrics:;
- (id)remoteAddressAndPort;
- (void)setSessionIdentifier:;
- (id)initWithSession:delegate:delegateQueue:requestKind:priority:;
- (id)_createBackingTaskWithRequest:session:;
- (void)dataSession:taskDidCompleteWithError:;
- (id)activity;
- (id)receivedData;
- (void)delegateAsync:;
- (long long)HTTPStatusCode;
- (id)originalURLRequest;
- (id)delegate;
- (id)createURLSessionTaskWithSession:request:;
- (id)response;
- (void)didFinishDownloadingToURL:;
- (id)originalRequestURL;
- (void).cxx_destruct;
- (BOOL)failedDueToCancel;
- (id)requestKind;
- (void)_start;
- (BOOL)validateTileResponse:error:;
- (unsigned long long)incomingPayloadSize;
- (void)dataSession:willSendRequestForEstablishedConnection:completionHandler:;
- (void)setParsedResponse:;
- (id)contentLengthString;
- (id)description;
- (id)entityTag;
- (void)notifyDelegateWithSession:;
- (double)loadTimeIncludingTask:;
- (unsigned long long)contentLength;
- (void)didReceiveData:;
- (id)backingTask;
- (id)parsedResponse;
- (BOOL)validateContentLengthWithError:;
- (void)dataSession:didReceiveResponse:completionHandler:;
- (BOOL)validateNonEmptyResponseWithError:;
- (unsigned long long)requestedMultipathServiceType;
- (double)loadTime;
- (unsigned long long)outgoingPayloadSize;
- (BOOL)protocolBufferHasPreamble;
- (void)setReceivedRNFNotification:;
- (id)downloadedFileURL;
- (unsigned long long)receivedDataLength;
- (id)requestCounterTicket;
- (id)clientMetrics;
- (void)setCachedData:;
- (float)priority;
@end
