@interface IDSSignInController : NSObject
@property (nonatomic) NSMutableDictionary serviceNameAccountControllerMap;
@property (nonatomic) NSMutableDictionary accountIDDescriptionMap;
@property (nonatomic) NSMapTable delegateByServiceType;
@property (nonatomic) NSMutableDictionary initialStateByService;
@property (nonatomic) NSObject<OS_dispatch_queue> signInQueue;
@property (nonatomic) <_IDSPasswordManager> passwordManager;
@property (nonatomic) IDSCTAdapter CTAdapter;
@property (nonatomic) double signInTimeout;
@property (nonatomic) double signInFuzz;
@property (nonatomic) NSString listenerGUID;
@property (nonatomic) Q hash;
@property (nonatomic) # superclass;
@property (nonatomic) NSString description;
@property (nonatomic) NSString debugDescription;
- (double)signInTimeout;
- (void)setDelegate:forService:;
- (id)listenerGUID;
- (void)signInUsername:withProvidedCredential:onService:waitUntilRegistered:completion:;
- (id)init;
- (id)_statusOfUsersOnService:;
- (void)dealloc;
- (void)setListenerGUID:;
- (id)delegateByServiceType;
- (void)setServiceNameAccountControllerMap:;
- (void)accountController:accountUpdated:;
- (id)initialStateByService;
- (void)_scheduleValidationAfter:forAccountID:allowFuzz:signOut:;
- (void)signInUsername:onService:waitUntilRegistered:withCompletion:;
- (id)serviceNameAccountControllerMap;
- (id)accountIDDescriptionMap;
- (void)setSignInTimeout:;
- (void)statusOfUsersOnService:withCompletion:;
- (id)initWithPasswordManager:CTAdapter:signInTimeout:signInFuzz:queue:;
- (id)signInQueue;
- (void)provideCredential:forUser:onService:withCompletion:;
- (id)_createAccountControllerForService:;
- (void)setInitialStateByService:;
- (id)_accountWithUniqueID:;
- (id)passwordManager;
- (void)accountController:accountDisabled:;
- (BOOL)_actionOnAccountOfType:onService:actionBlock:;
- (id)_createAccountWithDictionary:accountID:serviceName:;
- (BOOL)isiMessageEnabled;
- (void)_initializeStateMachineForAccountID:service:state:completion:;
- (void)signOutService:completion:;
- (void)refreshRegistrationForAccount:;
- (void)accountController:accountRemoved:;
- (void)enableUserType:onService:completion:;
- (BOOL)isFaceTimeEnabled;
- (unsigned long long)_serviceTypeForName:;
- (void).cxx_destruct;
- (id)_serviceNameForType:;
- (void)setDelegateByServiceType:;
- (double)signInFuzz;
- (void)accountController:accountAdded:;
- (unsigned long long)_statusOfAccount:;
- (void)setAccountIDDescriptionMap:;
- (void)disableUserType:onService:completion:;
- (void)setPasswordManager:;
- (id)initWithQueue:;
- (BOOL)_isServiceCurrentlyEnabled:;
- (void)_cleanupStateForAccountID:;
- (void)setSignInQueue:;
- (id)CTAdapter;
- (void)setSignInFuzz:;
- (void)_validateStateForAccountID:timeoutMode:;
- (void)_validateDelegateState;
- (id)_accountControllerForName:;
- (void)setCTAdapter:;
- (void)removeDelegateForService:;
@end
