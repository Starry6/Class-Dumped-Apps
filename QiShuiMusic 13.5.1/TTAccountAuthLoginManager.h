@interface TTAccountAuthLoginManager : NSObject
@property (nonatomic) NSMutableDictionary platformAccounts;
@property (nonatomic) NSDictionary classMap;
@property (nonatomic) UIAlertView unbindAlert;
@property (nonatomic) UIAlertView giveUpAlert;
@property (nonatomic) NSDictionary alertContext;
@property (nonatomic) Q hash;
@property (nonatomic) # superclass;
@property (nonatomic) NSString description;
@property (nonatomic) NSString debugDescription;
- (void)setGiveUpAlert:;
- (long long)accountAuthTypeForPlatformName:;
- (void)setUnbindAlert:;
- (id)accountAuthInstanceForPlatformType:;
- (id)alertContext;
- (id)giveUpAlert;
- (BOOL)handleOpenURL:options:;
- (BOOL)handleOpenURL:sourceApplication:annotation:;
- (id)platformAccounts;
- (void)registerAuthPlatformWithType:;
- (void)registerPlatformAuthAccount:;
- (void)setAlertContext:;
- (void)setPlatformAccounts:;
- (id)unbindAlert;
- (id)init;
- (void).cxx_destruct;
- (void)alertView:clickedButtonAtIndex:;
- (BOOL)handleOpenURL:;
- (id)classMap;
- (void)setClassMap:;
+ (id)bindWithThirdPartySSOCallback:forPlatform:willLogin:completion:;
+ (Class)accountAuthClassForPlatformType:;
+ (id)accountAuthInstanceForPlatformType:;
+ (long long)accountAuthTypeForPlatform:;
+ (void)alertAccountUnbindWithAuthResponse:passError:willLogin:completion:;
+ (BOOL)alertWhenAuthLoginFailWithResponse:willLogin:completion:;
+ (id)authBindLoginWithAuthResponse:mobile:smsCode:profileKey:completion:;
+ (id)authCallbacContinuekForReason:params:forPlatform:willLogin:completion:;
+ (void)authLoginForPlatform:completion:;
+ (void)authLoginForPlatform:inCustomWebView:willLogin:completion:;
+ (void)bindMobileFromPlatform:completed:;
+ (id)bindWithThirdPartySSOCallback:extraParams:forPlatform:willLogin:completion:;
+ (BOOL)canCustomWebSSOForPlatform:;
+ (id)canQuickLoginWithAweme:;
+ (BOOL)canSSOForPlatform:;
+ (BOOL)canWebSSOForPlatform:;
+ (void)checkIsSilentRegisterSupportedForPlatform:completed:;
+ (void)checkIsbindMobileFromPlatformSupported:completed:;
+ (BOOL)continueUserActivity:restorationHandler:;
+ (BOOL)didFinishLaunchingWithOptions:;
+ (id)getAppInstallUrlForPlatform:;
+ (id)getThirdpartUserInfoWithDict:completion:;
+ (id)getUserInfoWithScene:completion:;
+ (void)handleCallbackWithInst:authResponse:error:willLogin:completedBlock:;
+ (BOOL)handleOpenURL:options:;
+ (BOOL)handleOpenURL:sourceApplication:annotation:;
+ (BOOL)isAppInstalledForPlatform:;
+ (id)localizedDisplayNameForPlatform:;
+ (id)loginOrBindWithSSOCallback:extraParams:isForLogin:forPlatform:willLogin:completion:;
+ (id)loginWithSSOCallback:forPlatform:willLogin:completion:;
+ (id)platformAppIdForAccountAuthType:;
+ (id)platformForAccountAuthType:;
+ (id)pureLoginWithThirdPartySSOCallback:extraParams:forPlatform:willLogin:completion:;
+ (id)pureLoginWithThirdPartySSOCallback:forPlatform:willLogin:completion:;
+ (void)registerAppId:forPlatform:;
+ (void)registerAuthPlatformWithType:;
+ (void)registerPlatformAuthAccount:;
+ (void)requestAuthForPlatform:request:willLogin:authCompletion:;
+ (void)requestAuthInfoForPlatform:inCustomWebView:completion:;
+ (void)requestAuthUserInfoForPlatform:extraParams:inCustomWebView:completion:;
+ (void)requestAuthUserInfoForPlatform:inCustomWebView:completion:;
+ (void)requestBindForPlatform:inCustomWebView:willBind:completion:;
+ (void)requestBindForPlatform:willBind:completion:;
+ (void)requestBindV2ForPlatform:inCustomWebView:willBind:completion:;
+ (void)requestLoginForPlatform:inCustomWebView:willLogin:completion:;
+ (void)requestLoginForPlatform:requestAuthReason:inCustomWebView:willLogin:completion:;
+ (void)requestLoginForPlatform:willLogin:completion:;
+ (void)requestLoginOnlyForPlatform:willLogin:completion:;
+ (void)requestLoginSuggestionForPlatform:completion:;
+ (void)requestLogoutForPlatform:completion:;
+ (void)requestUnbindForPlatform:completion:;
+ (void)silentRegisterAndLoginPlatform:completed:;
+ (id)startAuthSwitchBindWithReq:trackParams:completion:;
+ (id)sharedInstance;
+ (BOOL)handleOpenURL:;
@end
