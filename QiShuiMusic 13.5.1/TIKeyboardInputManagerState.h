@interface TIKeyboardInputManagerState : NSObject
@property (nonatomic) BOOL canHandleKeyHitTest;
@property (nonatomic) BOOL ignoresDeadKeys;
@property (nonatomic) BOOL shouldExtendPriorWord;
@property (nonatomic) BOOL suppliesCompletions;
@property (nonatomic) BOOL supportsSetPhraseBoundary;
@property (nonatomic) BOOL suppressCompletionsForFieldEditor;
@property (nonatomic) BOOL usesAutoDeleteWord;
@property (nonatomic) BOOL usesCandidateSelection;
@property (nonatomic) BOOL usesAutocorrectionLists;
@property (nonatomic) BOOL commitsAcceptedCandidate;
@property (nonatomic) BOOL newInputAcceptsUserSelectedCandidate;
@property (nonatomic) Q autoquoteType;
@property (nonatomic) BOOL usesContinuousPath;
@property (nonatomic) BOOL usesContinuousPathProgressiveCandidates;
@property (nonatomic) BOOL ignoreContinuousPathRequirements;
@property (nonatomic) BOOL insertsSpaceAfterPredictiveInput;
@property (nonatomic) BOOL shouldFixupIncompleteRomaji;
@property (nonatomic) BOOL acceptAutocorrectionCommitsInline;
@property (nonatomic) BOOL usesLiveConversion;
@property (nonatomic) BOOL delayedCandidateList;
@property (nonatomic) NSString replacementForDoubleSpace;
@property (nonatomic) NSString wordSeparator;
@property (nonatomic) Q initialCandidateBatchCount;
@property (nonatomic) TIKeyboardBehaviors keyboardBehaviors;
@property (nonatomic) BOOL shouldAddModifierSymbolsToWordCharacters;
@property (nonatomic) TICharacterSetDescription wordCharacters;
@property (nonatomic) TICharacterSetDescription supplementalLexiconWordExtraCharacters;
@property (nonatomic) TICharacterSetDescription shortcutCompletions;
@property (nonatomic) TICharacterSetDescription inputsPreventingAcceptSelectedCandidate;
@property (nonatomic) TICharacterSetDescription inputsToReject;
@property (nonatomic) TICharacterSetDescription terminatorsPreventingAutocorrection;
@property (nonatomic) TICharacterSetDescription terminatorsDeletingAutospace;
@property (nonatomic) NSString inputString;
@property (nonatomic) BOOL hasSupplementalPrefix;
@property (nonatomic) Q inputIndex;
@property (nonatomic) Q inputCount;
@property (nonatomic) BOOL nextInputWouldStartSentence;
@property (nonatomic) BOOL inputStringIsExemptFromChecker;
@property (nonatomic) BOOL suppressPlaceholderCandidate;
@property (nonatomic) BOOL supportsNumberKeySelection;
@property (nonatomic) BOOL usesPunctuationKeysForRowNavigation;
@property (nonatomic) TIKeyboardCandidate autocorrectionRecordForInputString;
@property (nonatomic) NSString shadowTyping;
@property (nonatomic) NSString searchStringForMarkedText;
@property (nonatomic) TIKeyEventMap keyEventMap;
- (id)searchStringForMarkedText;
- (BOOL)insertsSpaceAfterPredictiveInput;
- (BOOL)supportsNumberKeySelection;
- (BOOL)usesCandidateSelection;
- (BOOL)acceptInputString:;
- (BOOL)usesContinuousPathProgressiveCandidates;
- (BOOL)usesAutocorrectionLists;
- (unsigned long long)inputIndex;
- (BOOL)nextInputWouldStartSentence;
- (BOOL)usesAutoDeleteWord;
- (void)setUsesAutoDeleteWord:;
- (BOOL)usesContinuousPath;
- (BOOL)shouldFixupIncompleteRomaji;
- (BOOL)shouldDeleteAutospaceBeforeTerminator:;
- (void)setUsesCandidateSelection:;
- (BOOL)canHandleKeyHitTest;
- (BOOL)suppliesCompletions;
- (id)wordCharacters;
- (void)setInputIndex:;
- (void)setUsesContinuousPathProgressiveCandidates:;
- (void)setInputStringIsExemptFromChecker:;
- (id)inputsPreventingAcceptSelectedCandidate;
- (BOOL)newInputAcceptsUserSelectedCandidate;
- (void)setInputCount:;
- (void)setCanHandleKeyHitTest:;
- (BOOL)suppressCompletionsForFieldEditor;
- (id)keyEventMap;
- (void)setSuppressCompletionsForFieldEditor:;
- (void)setDelayedCandidateList:;
- (void)setWordSeparator:;
- (BOOL)hasSupplementalPrefix;
- (unsigned long long)inputCount;
- (BOOL)shouldSuppressAutocorrectionWithTerminator:;
- (id)terminatorsDeletingAutospace;
- (BOOL)delayedCandidateList;
- (void)setCommitsAcceptedCandidate:;
- (void)setSupportsNumberKeySelection:;
- (BOOL)suppressPlaceholderCandidate;
- (void)setUsesAutocorrectionLists:;
- (id)inputString;
- (void)setSuppressPlaceholderCandidate:;
- (id)autocorrectionRecordForInputString;
- (void)setNextInputWouldStartSentence:;
- (BOOL)supportsSetPhraseBoundary;
- (void)setWordCharacters:;
- (void)setInputString:;
- (id)wordSeparator;
- (id)initWithCoder:;
- (void)setUsesPunctuationKeysForRowNavigation:;
- (unsigned long long)autoquoteType;
- (BOOL)usesLiveConversion;
- (void)setTerminatorsPreventingAutocorrection:;
- (BOOL)shouldExtendPriorWord;
- (BOOL)acceptAutocorrectionCommitsInline;
- (void)encodeWithCoder:;
- (BOOL)ignoresDeadKeys;
- (void)setIgnoresDeadKeys:;
- (BOOL)ignoreContinuousPathRequirements;
- (void)setKeyEventMap:;
- (void)setAutoquoteType:;
- (BOOL)usesPunctuationKeysForRowNavigation;
- (id)replacementForDoubleSpace;
- (void)setSupplementalLexiconWordExtraCharacters:;
- (id)shadowTyping;
- (void)setShortcutCompletions:;
- (void)setReplacementForDoubleSpace:;
- (void)setUsesLiveConversion:;
- (void)setAcceptAutocorrectionCommitsInline:;
- (void)setAutocorrectionRecordForInputString:;
- (void).cxx_destruct;
- (void)setInputsPreventingAcceptSelectedCandidate:;
- (BOOL)commitsAcceptedCandidate;
- (void)setInsertsSpaceAfterPredictiveInput:;
- (BOOL)shouldAddModifierSymbolsToWordCharacters;
- (void)setIgnoreContinuousPathRequirements:;
- (id)inputsToReject;
- (void)setUsesContinuousPath:;
- (void)setSuppliesCompletions:;
- (BOOL)inputStringIsExemptFromChecker;
- (void)setTerminatorsDeletingAutospace:;
- (void)setInputsToReject:;
- (void)setNewInputAcceptsUserSelectedCandidate:;
- (void)setInitialCandidateBatchCount:;
- (void)setSupportsSetPhraseBoundary:;
- (BOOL)stringEndsWord:;
- (void)setSearchStringForMarkedText:;
- (id)keyboardBehaviors;
- (void)setShadowTyping:;
- (void)setShouldExtendPriorWord:;
- (void)setShouldFixupIncompleteRomaji:;
- (void)setHasSupplementalPrefix:;
- (id)supplementalLexiconWordExtraCharacters;
- (id)terminatorsPreventingAutocorrection;
- (void)setKeyboardBehaviors:;
- (void)setShouldAddModifierSymbolsToWordCharacters:;
- (BOOL)inputStringAcceptsCurrentCandidateIfSelected:;
- (id)shortcutCompletions;
- (id)copyWithZone:;
- (unsigned long long)initialCandidateBatchCount;
+ (BOOL)supportsSecureCoding;
@end
