@interface VCPPhotosFace : NSObject
@property (nonatomic) NSString localIdentifier;
@property (nonatomic) NSString personLocalIdentifier;
@property (nonatomic) q sourceWidth;
@property (nonatomic) q sourceHeight;
@property (nonatomic) s detectionType;
@property (nonatomic) double centerX;
@property (nonatomic) double centerY;
@property (nonatomic) double size;
@property (nonatomic) double bodyCenterX;
@property (nonatomic) double bodyCenterY;
@property (nonatomic) double bodyWidth;
@property (nonatomic) double bodyHeight;
@property (nonatomic) BOOL hidden;
@property (nonatomic) BOOL isInTrash;
@property (nonatomic) BOOL manual;
@property (nonatomic) BOOL isTooSmall;
@property (nonatomic) BOOL hasSmile;
@property (nonatomic) double blurScore;
@property (nonatomic) double exposureScore;
@property (nonatomic) BOOL isLeftEyeClosed;
@property (nonatomic) BOOL isRightEyeClosed;
@property (nonatomic) NSString adjustmentVersion;
@property (nonatomic) q nameSource;
@property (nonatomic) NSInteger trainingType;
@property (nonatomic) double poseYaw;
@property (nonatomic) Q algorithmVersion;
@property (nonatomic) q clusterSequenceNumber;
@property (nonatomic) q qualityMeasure;
@property (nonatomic) S ageType;
@property (nonatomic) S sexType;
@property (nonatomic) S eyesState;
@property (nonatomic) S smileType;
@property (nonatomic) S facialHairType;
@property (nonatomic) S hairColorType;
@property (nonatomic) S glassesType;
@property (nonatomic) S expressionType;
@property (nonatomic) S headgearType;
@property (nonatomic) S hairType;
@property (nonatomic) S poseType;
@property (nonatomic) S skintoneType;
@property (nonatomic) S ethnicityType;
@property (nonatomic) BOOL hasFaceMask;
@property (nonatomic) S gazeType;
@property (nonatomic) double gazeCenterX;
@property (nonatomic) double gazeCenterY;
@property (nonatomic) NSString groupingIdentifier;
@property (nonatomic) VCPVNImageprintWrapper imageprintWrapper;
@property (nonatomic) double roll;
@property (nonatomic) double quality;
- (id)groupingIdentifier;
- (double)quality;
- (void)setQuality:;
- (id)adjustmentVersion;
- (id)localIdentifier;
- (BOOL)hidden;
- (double)roll;
- (void)setGroupingIdentifier:;
- (void).cxx_destruct;
- (void)setHidden:;
- (unsigned long long)algorithmVersion;
- (void)setSize:;
- (double)size;
- (unsigned short)expressionType;
- (BOOL)manual;
- (void)setRoll:;
- (double)centerX;
- (double)centerY;
- (id)initWithLocalIdentifier:;
- (long long)sourceWidth;
- (long long)sourceHeight;
- (id)normalizedFaceRect;
- (BOOL)hasSmile;
- (BOOL)isInTrash;
- (id)personLocalIdentifier;
- (void)setExposureScore:;
- (double)exposureScore;
- (void)setCenterX:;
- (void)setCenterY:;
- (double)bodyCenterX;
- (void)setBodyCenterX:;
- (double)bodyCenterY;
- (void)setBodyCenterY:;
- (double)bodyWidth;
- (void)setBodyWidth:;
- (double)bodyHeight;
- (void)setBodyHeight:;
- (short)detectionType;
- (void)setDetectionType:;
- (void)setSourceWidth:;
- (void)setSourceHeight:;
- (void)setManual:;
- (void)setHasSmile:;
- (double)blurScore;
- (void)setBlurScore:;
- (BOOL)isLeftEyeClosed;
- (BOOL)isRightEyeClosed;
- (long long)nameSource;
- (void)setNameSource:;
- (double)poseYaw;
- (void)setPoseYaw:;
- (long long)clusterSequenceNumber;
- (void)setClusterSequenceNumber:;
- (long long)qualityMeasure;
- (void)setQualityMeasure:;
- (unsigned short)ageType;
- (void)setAgeType:;
- (unsigned short)sexType;
- (void)setSexType:;
- (unsigned short)eyesState;
- (void)setEyesState:;
- (unsigned short)smileType;
- (void)setSmileType:;
- (unsigned short)facialHairType;
- (void)setFacialHairType:;
- (unsigned short)hairColorType;
- (void)setHairColorType:;
- (unsigned short)glassesType;
- (void)setGlassesType:;
- (unsigned short)headgearType;
- (void)setHeadgearType:;
- (unsigned short)hairType;
- (void)setHairType:;
- (unsigned short)poseType;
- (void)setPoseType:;
- (unsigned short)skintoneType;
- (void)setSkintoneType:;
- (unsigned short)ethnicityType;
- (void)setEthnicityType:;
- (BOOL)hasFaceMask;
- (void)setHasFaceMask:;
- (unsigned short)gazeType;
- (void)setGazeType:;
- (double)gazeCenterX;
- (void)setGazeCenterX:;
- (double)gazeCenterY;
- (void)setGazeCenterY:;
- (void)setAdjustmentVersion:;
- (int)trainingType;
- (void)setAlgorithmVersion:;
- (long long)photosFaceRepresentationSourceWidth;
- (long long)photosFaceRepresentationSourceHeight;
- (double)photosFaceRepresentationCenterX;
- (double)photosFaceRepresentationCenterY;
- (double)photosFaceRepresentationSize;
- (double)photosFaceRepresentationBlurScore;
- (BOOL)photosFaceRepresentationHasSmile;
- (BOOL)photosFaceRepresentationIsLeftEyeClosed;
- (BOOL)photosFaceRepresentationIsRightEyeClosed;
- (long long)photosFaceRepresentationQualityMeasure;
- (long long)photosFaceRepresentationClusterSequenceNumber;
- (id)photosFaceRepresentationLocalIdentifier;
- (double)photosFaceRepresentationRoll;
- (double)photosFaceRepresentationQuality;
- (void)setTrainingType:;
- (void)setPersonLocalIdentifier:;
- (void)replaceCoordinatesAndFeaturesFromDetectedFace:;
- (BOOL)setCenterAndSizeFromNormalizedFaceRect:;
- (id)gist;
- (long long)qualityMeasureWithCountOfFacesOnAsset:;
- (void)setIsInTrash:;
- (BOOL)isTooSmall;
- (void)setIsTooSmall:;
- (void)setIsLeftEyeClosed:;
- (void)setIsRightEyeClosed:;
- (void)setExpressionType:;
- (id)imageprintWrapper;
- (void)setImageprintWrapper:;
+ (id)faceWithLocalIdentifier:;
+ (id)faceFromFaceObservation:humanObservation:sourceWidth:sourceHeight:visionRequests:processingVersion:force:andError:;
+ (id)facesFromFaceObservations:humanObservations:animalObservations:sourceWidth:sourceHeight:visionRequests:blurScorePerFace:exposureScorePerFace:tooSmallFaceObservations:processingVersion:;
+ (id)faceFromPHFace:copyOption:;
+ (id)facesFromPHFetchResult:copyOption:;
+ (double)_calculateOverlappingBetweenFaceObservation:andHumanObservation:;
+ (double)_calculateIoUBetweenObservation:andObservation:;
+ (BOOL)_isColocatingAnimalObservation:withFaceObservations:orTorsoObservations:;
@end
