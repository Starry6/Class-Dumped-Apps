@interface NWURLSessionTask : NSObject
@property (nonatomic) Q taskIdentifier;
@property (nonatomic) NSURLRequest originalRequest;
@property (nonatomic) NSURLRequest currentRequest;
@property (nonatomic) NSURLResponse response;
@property (nonatomic) <NSURLSessionTaskDelegate> delegate;
@property (nonatomic) NSProgress progress;
@property (nonatomic) NSDate earliestBeginDate;
@property (nonatomic) q countOfBytesClientExpectsToSend;
@property (nonatomic) q countOfBytesClientExpectsToReceive;
@property (nonatomic) q countOfBytesSent;
@property (nonatomic) q countOfBytesReceived;
@property (nonatomic) q countOfBytesExpectedToSend;
@property (nonatomic) q countOfBytesExpectedToReceive;
@property (nonatomic) NSString taskDescription;
@property (nonatomic) q state;
@property (nonatomic) NSError error;
@property (nonatomic) float priority;
@property (nonatomic) BOOL prefersIncrementalDelivery;
@property (nonatomic) <NSURLSessionTaskDelegate> _internalDelegate;
@property (nonatomic) BOOL _callCompletionHandlerInline;
@property (nonatomic) BOOL _keepDownloadTaskFile;
@property (nonatomic) NSObject<OS_nw_activity> _nw_activity;
@property (nonatomic) NSURLSessionTaskMetrics _incompleteTaskMetrics;
@property (nonatomic) NSString _pathToDownloadTaskFile;
@property (nonatomic) NSString _storagePartitionIdentifier;
@property (nonatomic) NSURL _siteForCookies;
@property (nonatomic) BOOL _isTopLevelNavigation;
@property (nonatomic) BOOL _preconnect;
@property (nonatomic) @? _cookieTransformCallback;
@property (nonatomic) NSArray _resolvedCNAMEChain;
@property (nonatomic) NSURLSessionTask loaderTask;
@property (nonatomic) NSURLSessionDataTask loaderDataTask;
@property (nonatomic) Q hash;
@property (nonatomic) # superclass;
@property (nonatomic) NSString description;
@property (nonatomic) NSString debugDescription;
- (unsigned long long)taskIdentifier;
- (void)cancel;
- (void)setPriority:;
- (void)set_keepDownloadTaskFile:;
- (void)setDelegate:;
- (id)_siteForCookies;
- (id)currentRequest;
- (void)setTaskDescription:;
- (void)suspend;
- (id)error;
- (id)taskDescription;
- (id)_timingData;
- (id)_storagePartitionIdentifier;
- (long long)countOfBytesExpectedToReceive;
- (id)progress;
- (void)resume;
- (long long)countOfBytesReceived;
- (BOOL)_keepDownloadTaskFile;
- (long long)state;
- (id)delegate;
- (id)response;
- (id)_incompleteTaskMetrics;
- (void).cxx_destruct;
- (BOOL)isKindOfClass:;
- (BOOL)_preconnect;
- (void)set_preconnect:;
- (BOOL)_isTopLevelNavigation;
- (id)_cookieTransformCallback;
- (id)originalRequest;
- (long long)countOfBytesSent;
- (BOOL)prefersIncrementalDelivery;
- (id)_resolvedCNAMEChain;
- (long long)countOfBytesExpectedToSend;
- (id)copyWithZone:;
- (float)priority;
- (void)set_internalDelegate:;
- (id)_internalDelegate;
- (void)set_callCompletionHandlerInline:;
- (void)loaderRunDelegateBlock:;
- (void)loaderNeedsBodyProviderFromOffset:completionHandler:;
- (void)loaderWaitingForConnectivity;
- (void)loaderBetterPathAvailable;
- (void)loaderWillPerformHSTSUpgrade;
- (void)loaderWillPerformHTTPRedirection:newRequest:;
- (void)loaderWillPerformHTTPRedirection:newRequest:completionHandler:;
- (void)loaderDidReceiveServerTrustChallenge:completionHandler:;
- (void)loaderDidReceiveClientCertificateChallenge:completionHandler:;
- (void)loaderDidReceiveChallenge:completionHandler:;
- (void)loaderWillCacheResponse:completionHandler:;
- (void)loaderDidFail:;
- (id)loaderTask;
- (id)loaderDataTask;
- (void)startNextLoad;
- (void)completeTaskWithError:;
- (void)getUnderlyingHTTPConnectionInfoWithCompletionHandler:;
- (void)_setExplicitCookieStorage:;
- (id)earliestBeginDate;
- (void)setEarliestBeginDate:;
- (long long)countOfBytesClientExpectsToSend;
- (void)setCountOfBytesClientExpectsToSend:;
- (long long)countOfBytesClientExpectsToReceive;
- (void)setCountOfBytesClientExpectsToReceive:;
- (void)setPrefersIncrementalDelivery:;
- (BOOL)_callCompletionHandlerInline;
- (id)_nw_activity;
- (void)set_nw_activity:;
- (id)_pathToDownloadTaskFile;
- (void)set_pathToDownloadTaskFile:;
- (void)set_storagePartitionIdentifier:;
- (void)set_siteForCookies:;
- (void)set_isTopLevelNavigation:;
- (void)set_cookieTransformCallback:;
@end
