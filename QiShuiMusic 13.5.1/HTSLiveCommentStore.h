@interface HTSLiveCommentStore : NSObject
@property (nonatomic) NSObject<OS_dispatch_source> timer;
@property (nonatomic) NSDate startWatchDate;
@property (nonatomic) <IESLiveVerifyConfigAdapter> verifyConfig;
@property (nonatomic) <IESLiveCustomConfig> customConfig;
@property (nonatomic) BOOL isBanned;
@property (nonatomic) BOOL disableCommentByWrds;
@property (nonatomic) IESLiveCommentAuthChecker authChecker;
@property (nonatomic) IESLiveCommentPanelEntryItemModel customServiceEntryModel;
@property (nonatomic) IESLiveCommentExpandEntryItem customServiceEntryItem;
@property (nonatomic) GetSilenceBlockTypeResponse_ResponseData silenceBlockData;
@property (nonatomic) double lastSilenceBlockTime;
@property (nonatomic) <HTSLiveCommentReactions> reactions;
@property (nonatomic) <IESLiveRoomServiceAdapter> roomModel;
@property (nonatomic) HTSLiveCommentApi commentApi;
@property (nonatomic) HTSLiveUser currentUser;
@property (nonatomic) BOOL iamAudience;
@property (nonatomic) BOOL isForbidden;
@property (nonatomic) BOOL disableComment;
@property (nonatomic) BOOL disableInputComment;
@property (nonatomic) BOOL disableDanmaku;
@property (nonatomic) BOOL isChatChannel;
@property (nonatomic) HTSEventContext trackContext;
@property (nonatomic) NSMutableArray quickCommentContents;
@property (nonatomic) NSString disableInputCommentHint;
@property (nonatomic) NSString disableInputCommentToast;
@property (nonatomic) Q quickCommentType;
@property (nonatomic) NSString quickCommentColor;
@property (nonatomic) HTSLiveLandscapeAreaCommon landscapeAreaCommon;
@property (nonatomic) Q commentSuggestionViewShowDuration;
@property (nonatomic) BOOL isInMseqRoom;
@property (nonatomic) BOOL commentInterflowOpened;
@property (nonatomic) NSString commentButtonTitle;
@property (nonatomic) Q hash;
@property (nonatomic) # superclass;
@property (nonatomic) NSString description;
@property (nonatomic) NSString debugDescription;
@property (nonatomic) HTSLiveFixedChatSyncData limitData;
- (id)createFakeEmojiChatMessageWith:;
- (void)setAuthChecker:;
- (void)setIamAudience:;
- (void)setIsForbidden:;
- (BOOL)commentPrepared;
- (BOOL)convergedModule;
- (void)addUserIdentityTo:withShowIdentity:andIdentityLabel:;
- (id)authChecker;
- (id)badgeImageListV2Array;
- (BOOL)bindMobilePhoneIfNeededForSY:source:;
- (BOOL)checkIfCommentEnableWithContext:completion:;
- (void)checkIfDisableComment;
- (void)checkIfDisableDanmaku;
- (void)checkIfDisableInputComment;
- (void)checkIfRegistCustomServiceEntryItem;
- (id)commentApi;
- (id)commentButtonTitle;
- (BOOL)commentForbidden;
- (BOOL)commentInterflowOpened;
- (unsigned long long)commentSuggestionViewShowDuration;
- (id)contentTypeWithCommentContext:type:;
- (id)createFakeChannelChatMessageWithCommentContext:comment:channelID:response:;
- (id)createFakeChannelEmojiChatMessageWithChannelID:response:;
- (id)createFakeChannelInteractiveEmojiChatMessageWithChannelID:response:;
- (id)createFakeChannelMessageWithCommentContext:comment:channelID:type:response:;
- (id)createFakeChatMessageWithComment:commentContext:response:;
- (id)createFakeChatMessageWithComment:replayAndPinMessageId:response:;
- (id)createFakePrivilegeScreenChatMessageWithContext:content:style:sendResponse:;
- (id)createFakeScreenChatMessageWith:;
- (id)customConfig;
- (void)customServiceEntryHasClicked;
- (void)customServiceEntryHasShowed;
- (id)customServiceEntryItem;
- (id)customServiceEntryModel;
- (void)didSetAttachingDIContext;
- (void)didUpdateRoom:;
- (BOOL)disableComment;
- (BOOL)disableCommentByWrds;
- (BOOL)disableDanmaku;
- (BOOL)disableInputComment;
- (id)disableInputCommentHint;
- (id)disableInputCommentToast;
- (void)fetchAudioChatCodeFinished:;
- (void)fetchSilenceBlockInfoWithCompletion:;
- (id)getCommentActivityScene;
- (void)handleInputPanelComponentWithData:;
- (void)handleQuickCommentWithData:;
- (void)handleQuickLimitCommentWithData:;
- (BOOL)iamAudience;
- (id)initWithRoomModel:diContext:;
- (BOOL)isBanned;
- (BOOL)isChatChannel;
- (BOOL)isForbidden;
- (BOOL)isInMseqRoom;
- (id)landscapeAreaCommon;
- (double)lastSilenceBlockTime;
- (id)limitData;
- (void)monitorPrivilegeDanmakuSendWithStyle:duration:error:;
- (id)quickCommentColor;
- (id)quickCommentContents;
- (unsigned long long)quickCommentType;
- (void)randomHotCommentFromData:;
- (id)roomModel;
- (void)sendAdminDanmakuWithCommentContext:completion:;
- (void)sendBarrageWithCommentContext:completion:;
- (void)sendChannelCommentWithCommentContext:completion:;
- (void)sendCommentWithCommentContext:completion:;
- (void)sendPrivilegeDanmakuWithCommentContext:completion:;
- (void)setCommentApi:;
- (void)setCommentButtonTitle:;
- (void)setCommentInterflowOpened:;
- (void)setCommentSuggestionViewShowDuration:;
- (void)setCustomConfig:;
- (void)setCustomServiceEntryItem:;
- (void)setCustomServiceEntryModel:;
- (void)setDisableComment:;
- (void)setDisableCommentByWrds:;
- (void)setDisableDanmaku:;
- (void)setDisableInputComment:;
- (void)setDisableInputCommentHint:;
- (void)setDisableInputCommentToast:;
- (void)setIsBanned:;
- (void)setIsChatChannel:;
- (void)setLandscapeAreaCommon:;
- (void)setLastSilenceBlockTime:;
- (void)setLimitData:;
- (void)setQuickCommentColor:;
- (void)setQuickCommentContents:;
- (void)setQuickCommentType:;
- (void)setRoomModel:;
- (void)setSilenceBlockData:;
- (void)setStartWatchDate:;
- (void)setTrackContext:;
- (void)setVerifyConfig:;
- (BOOL)shouldDisableDanmaku;
- (BOOL)shouldShowLimitPannel;
- (id)silenceBlockData;
- (id)startWatchDate;
- (void)subscribedSyncDataUpdatedWithValue:oldVersion:newVersion:;
- (void)subscribedSyncDataWithValue:version:;
- (void)traceChatChannelCommentWithStatusCode:commentType:startTime:;
- (void)trackCommentSettingClick;
- (void)trackCommentSettingShow;
- (id)trackContext;
- (void)trackCustomServiceEntryWithClicked:;
- (void)trackLandscapeDanmakuEntryClickShow:;
- (void)trackSendChannelCommentWithCommentContext:msgID:comment:type:;
- (void)trackSendCommentWithCommentContext:msgID:comment:type:isStarComment:;
- (void)updateCustomServiceEntryModelWith:;
- (void)userDidLogin:;
- (id)verifyConfig;
- (void)showToast:;
- (void)setCurrentUser:;
- (void)dealloc;
- (void)setTimer:;
- (void)setup;
- (void).cxx_destruct;
- (id)currentUser;
- (id)timer;
- (void)messageReceived:;
- (id)reactions;
- (void)setReactions:;
- (id)requestParams;
@end
