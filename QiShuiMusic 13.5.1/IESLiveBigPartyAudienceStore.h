@interface IESLiveBigPartyAudienceStore : NSObject
@property (nonatomic) IESLiveAudienceInteractPermissionChecker permissionChecker;
@property (nonatomic) HTSLiveInteractiveAPI linkmicAPI;
@property (nonatomic) IESLiveInteractFeedbackAPI feedbackAPI;
@property (nonatomic) IESLiveInteractComponentLoader componentLoader;
@property (nonatomic) BOOL isPreparingWaitingOffset;
@property (nonatomic) q maxGuestNum;
@property (nonatomic) IESLiveInteractFeedbackViewModel feedbackViewModel;
@property (nonatomic) double interactModeStartTime;
@property (nonatomic) BOOL supportOpenAvatar;
@property (nonatomic) BOOL joinChannelAfterFollow;
@property (nonatomic) BOOL isPaid;
@property (nonatomic) BOOL hasAppliedBefore;
@property (nonatomic) BOOL applyByMatch;
@property (nonatomic) BOOL isUserInProfile;
@property (nonatomic) BOOL selectedFeedback;
@property (nonatomic) NSString waitingPrompts;
@property (nonatomic) BOOL isProcessingApply;
@property (nonatomic) BOOL doPermitProcessAfterApply;
@property (nonatomic) <IESLiveInteractionDelegateSettingProtocol> distributeSettingData;
@property (nonatomic) BOOL isPaidLinkmicJoinChannel;
@property (nonatomic) NSInteger applyType;
@property (nonatomic) BOOL useBackupStreamWhenJoinRTC;
@property (nonatomic) IESLiveCountTimer checkLinkerStatusTmer;
@property (nonatomic) BOOL isUsingFirstSingApply;
@property (nonatomic) BOOL isNextDurationFromSmallWin;
@property (nonatomic) <IESLiveInteractionSettingsRouter> interactionSettings;
@property (nonatomic) <IESLiveInteractionLinkerService> linker;
@property (nonatomic) <IESLiveInteractionLayoutRouter> layoutRouter;
@property (nonatomic) HTSEventContext eventContext;
@property (nonatomic) <IESLiveRoomServiceAdapter> roomModel;
@property (nonatomic) HTSEventContext trackContext;
@property (nonatomic) IESLiveComponentContext componentContext;
@property (nonatomic) IESLiveInteractiveMediaService mediaServiceTransFerToPK;
@property (nonatomic) q linkmicStatus;
@property (nonatomic) BOOL isInvited;
@property (nonatomic) NSString currentClickGuestID;
@property (nonatomic) BOOL enableAudienceLinkmic;
@property (nonatomic) BOOL isCurrentDynamicLayout;
@property (nonatomic) NSString toastString;
@property (nonatomic) NSString breakPage;
@property (nonatomic) NSString tempActivityRequestPage;
@property (nonatomic) q linkType;
@property (nonatomic) BOOL needToOpenCamera;
@property (nonatomic) BOOL needToOpenAvatar;
@property (nonatomic) IESLiveInteractionLayout serverLayout;
@property (nonatomic) BOOL hitCameraFrenquencyControl;
@property (nonatomic) Q previousScene;
@property (nonatomic) Q currentScene;
@property (nonatomic) Q serverScene;
@property (nonatomic) NSInteger uilayout;
@property (nonatomic) NSString playType;
@property (nonatomic) q joinPayCount;
@property (nonatomic) NSDictionary eventExtra;
@property (nonatomic) IESLiveRoomThemeData roomThemeData;
@property (nonatomic) BOOL isTask;
@property (nonatomic) NSString activityName;
@property (nonatomic) NSDictionary relevantShortVideoInfo;
@property (nonatomic) NSNumber cellIndex;
@property (nonatomic) BOOL shouldIgnoreLinkMicInvitation;
@property (nonatomic) BOOL shouldIgnoreCameraRemoteControl;
@property (nonatomic) BOOL showInvitePanel;
@property (nonatomic) HTSLiveImage invitePanelIconImage;
@property (nonatomic) NSString inviteUserID;
@property (nonatomic) BOOL willEnterDoubleC;
@property (nonatomic) BOOL shouldBanVideoForAutoApply;
@property (nonatomic) IESLiveInteractionLayout currentLayout;
@property (nonatomic) IESLiveInteractionLayout currentServerLayout;
@property (nonatomic) <IESLiveBigPartyAudienceStoreReaction> storeReaction;
@property (nonatomic) IESLiveAudienceLinkmicAudiencePreApplyManager preApplyManager;
@property (nonatomic) BOOL hasProcessDidUpdateRoom;
@property (nonatomic) Q hash;
@property (nonatomic) # superclass;
@property (nonatomic) NSString description;
@property (nonatomic) NSString debugDescription;
@property (nonatomic) IESLiveLinkMicAudienceGetUserWaitingOffsetResponse_ResponseData waitingOffsetResponse;
@property (nonatomic) q linkMicStatus;
@property (nonatomic) RACTwoTuple attributeWaitingPromptsTuple;
@property (nonatomic) <IESLiveAudienceInteractiveRootPanelUserService> rootPanelUserService;
@property (nonatomic) <IESLiveDynamicActivityProvider> activityProvider;
- (id)componentLoader;
- (BOOL)isInvitingUser:;
- (BOOL)isUserInProfile;
- (void)liveWillSuspend;
- (BOOL)needGetSetting:;
- (BOOL)shouldIgnoreCameraRemoteControl;
- (BOOL)showInvitePanel;
- (void)willAppearLogic;
- (void)adminMuteGuest:;
- (void)currentLayoutDidChangedFrom:to:;
- (void)didStartPKAudienceLinkmicFromPK;
- (void)p_clean;
- (id)preApplyManager;
- (void)setFeedbackAPI:;
- (void)setMaxGuestNum:;
- (void)setToastString:;
- (void)adminControlGuestCameraWithUserID:cameraOpen:;
- (void)adminInviteWithUserID:secUserID:sourcePage:;
- (void)adminInviteWithUserID:secUserID:sourcePage:extraParams:;
- (void)adminKickOutUserID:secUserID:requestSource:completion:;
- (void)adminPermitUser:extraInfo:;
- (void)adminUnMuteGuest:;
- (BOOL)applyByMatch;
- (id)applyTitle;
- (void)applyWithParams:;
- (BOOL)askForLeave;
- (id)attributeWaitingPromptsTuple;
- (void)bigPartyWillResumeWhilePKAudienceLinkmicWithModel:;
- (id)breakPage;
- (void)cancelApplicationWithSource:;
- (void)changeToWaitingStatusIfNeededWithWaitingList:;
- (void)changeToWaitingStatusWithLinkmicID:;
- (id)checkLinkerStatusTmer;
- (id)componentContext;
- (void)componentOrientationTransitionBegin:;
- (void)componentUnmount;
- (void)componentWillAppear;
- (unsigned long long)correntCurrentScene:;
- (id)currentClickGuestID;
- (id)currentLargeUserType;
- (void)currentLayoutUIDidUpdateFrom:to:;
- (void)currentLayoutUIWillUpdateFrom:to:;
- (id)currentServerLayout;
- (long long)currentUserPosition;
- (long long)determineFinalLinkTypeWithOrigin:;
- (void)didEndPKAudienceLinkmicToPK;
- (void)didSetAttachingDIContext;
- (void)didStartPK;
- (void)didUpdateRoom:timeStamp:;
- (id)distributeSettingData;
- (BOOL)doPermitProcessAfterApply;
- (BOOL)enableAudienceLinkmic;
- (void)enlargeGuestReply:guestID:actionType:isDoubleC:;
- (id)eventExtra;
- (id)feedbackAPI;
- (id)feedbackViewModel;
- (void)followAnchorFromPopup:trackParams:;
- (unsigned long long)getInteractSceneFromInitRoomModel;
- (id)getMuteGusetNicknameByUserID:;
- (BOOL)hasAppliedBefore;
- (BOOL)hasProcessDidUpdateRoom;
- (BOOL)hitCameraFrenquencyControl;
- (id)initWithRoom:eventContext:;
- (double)interactModeStartTime;
- (void)interactionLinkerService:didCancelWaitingWithContext:;
- (void)interactionLinkerService:didCloseWithContext:;
- (void)interactionLinkerService:didCreateStartContext:startType:;
- (void)interactionLinkerService:didDisconnectWithContext:;
- (void)interactionLinkerService:didJoinChannelWithContext:;
- (void)interactionLinkerService:joinChannelError:;
- (void)interactionLinkerService:onReceiveAudienceCameraOpenReply:;
- (void)interactionLinkerService:onReceivedAnchorPreInviteMessage:;
- (void)interactionLinkerService:onReceivedAudienceConFirmUnsilenceMessage:;
- (void)interactionLinkerService:onReceivedEnlargeGuestInvite:;
- (void)interactionLinkerService:onReceivedEnlargeGuestReply:;
- (void)interactionLinkerService:onReceivedInvite:;
- (void)interactionLinkerService:onReceivedPaidLinkmicLowBalanceMessage:;
- (void)interactionLinkerService:onReceivedPermit:isAgreed:;
- (void)interactionLinkerService:onReceivedReply:isAgreed:;
- (void)interactionLinkerService:onReceivedSwitchScene:;
- (void)interactionLinkerService:onReceivedUILayoutChanged:;
- (void)interactionLinkerService:onSelfLinkTypeChanged:;
- (void)interactionLinkerService:userDidLeaveUserList:;
- (void)internalApplyWhileTeamFightWithParams:;
- (void)internalApplyWithParams:;
- (id)invitePanelIconImage;
- (id)inviteUserID;
- (BOOL)isCurrentDynamicLayout;
- (BOOL)isFromDistribution;
- (BOOL)isHeadphonesPluggedIn;
- (BOOL)isInAnonymousPaidLinkmicWithUserID:;
- (BOOL)isInvited;
- (BOOL)isNextDurationFromSmallWin;
- (BOOL)isPaidLinkmicJoinChannel;
- (BOOL)isPreparingWaitingOffset;
- (BOOL)isProcessingApply;
- (BOOL)isTask;
- (BOOL)isUsingFirstSingApply;
- (BOOL)joinChannelAfterFollow;
- (long long)joinPayCount;
- (id)layoutRouter;
- (long long)linkMicStatus;
- (id)linker;
- (id)linkmicAPI;
- (long long)linkmicStatus;
- (void)liveWillEndWithReason:;
- (long long)maxGuestNum;
- (id)mediaServiceTransFerToPK;
- (id)monitorExtraParams;
- (void)muteOtherRoom:;
- (BOOL)needToOpenAvatar;
- (BOOL)needToOpenCamera;
- (BOOL)noAdminRight;
- (BOOL)p_enablePaidLinkmicAddPrice;
- (void)p_fetchPlayModeInfoIfNeeded;
- (void)p_onAnchorModeClosed;
- (void)p_replyWithType:linkType:inviteSource:replyToUserSecID:trackParams:;
- (void)p_trackEnlargeGuestReply:isDoubleC:;
- (id)permissionChecker;
- (id)playType;
- (void)pr_afterReceivePermit;
- (void)pr_stopConnectionEventWith:;
- (void)preReplyIfNeed;
- (void)prefetchFeedbackListModelIfNeeded;
- (void)prepareForWaitingOffset;
- (id)previousLayout;
- (unsigned long long)previousScene;
- (void)processWaitingUserAfterApply:reason:;
- (void)reallyApplyWithParams:;
- (id)relevantShortVideoInfo;
- (void)replyWithType:linkType:inviteSource:replyToUserSecID:;
- (void)replyWithType:linkType:inviteSource:replyToUserSecID:trackParams:;
- (id)roleForLog;
- (id)roomModel;
- (id)roomThemeData;
- (id)rootPanelUserService;
- (BOOL)selectedFeedback;
- (BOOL)selfIsEnlarge;
- (id)serverLayout;
- (unsigned long long)serverScene;
- (void)setApplyByMatch:;
- (void)setApplyParamAfterApply;
- (void)setApplyParamAfterApplySuccessWithSourcePage:cilckSoure:isPaid:linkmicPaidCount:discountAmount:context:;
- (void)setApplyParamBeforeApplyWithisTask:eventTracker:SourcePage:;
- (void)setAttributeWaitingPromptsTuple:;
- (void)setBreakPage:;
- (void)setCheckLinkerStatusTmer:;
- (void)setComponentContext:;
- (void)setComponentLoader:;
- (void)setCurrentClickGuestID:;
- (void)setDistributeSettingData:;
- (void)setDoPermitProcessAfterApply:;
- (void)setEventContext:;
- (void)setEventExtra:;
- (void)setFeedbackViewModel:;
- (void)setHasAppliedBefore:;
- (void)setHasProcessDidUpdateRoom:;
- (void)setInteractModeStartTime:;
- (void)setInvitePanelIconImage:;
- (void)setInviteUserID:;
- (void)setIsNextDurationFromSmallWin:;
- (void)setIsPaidLinkmicJoinChannel:;
- (void)setIsPreparingWaitingOffset:;
- (void)setIsProcessingApply:;
- (void)setIsTask:;
- (void)setIsUserInProfile:;
- (void)setIsUsingFirstSingApply:;
- (void)setJoinChannelAfterFollow:;
- (void)setLayoutRouter:;
- (void)setLinkMicStatus:;
- (void)setLinker:;
- (void)setLinkmicAPI:;
- (void)setLinkmicStatus:;
- (void)setMediaServiceTransFerToPK:;
- (void)setNeedToOpenAvatar:;
- (void)setNeedToOpenCamera:;
- (void)setPermissionChecker:;
- (void)setPreApplyManager:;
- (void)setRelevantShortVideoInfo:;
- (void)setRoomModel:;
- (void)setRoomThemeData:;
- (void)setRootPanelUserService:;
- (void)setSelectedFeedback:;
- (void)setShouldBanVideoForAutoApply:;
- (void)setShouldIgnoreCameraRemoteControl:;
- (void)setShouldIgnoreLinkMicInvitation:;
- (void)setShowInvitePanel:;
- (void)setStoreReaction:;
- (void)setSupportOpenAvatar:;
- (void)setTempActivityRequestPage:;
- (void)setTrackContext:;
- (void)setUseBackupStreamWhenJoinRTC:;
- (void)setWaitingOffsetResponse:;
- (void)setWaitingPrompts:;
- (void)setWillEnterDoubleC:;
- (void)setupComponentLoader;
- (void)setupContextInjection;
- (BOOL)shouldBanVideoForAutoApply;
- (BOOL)shouldIgnoreLinkMicInvitation;
- (void)showApplyDetailPanelWithWaitingResponse:;
- (id)stageWithLayout:;
- (void)stopConnectionOnLiveEndWithReason:;
- (void)stopConnectionWithRequestSource:;
- (void)stopConnectionWithRequestSource:extra:;
- (void)stopConnectionWithRequestSource:extra:completion:;
- (id)storeReaction;
- (BOOL)supportOpenAvatar;
- (id)tempActivityRequestPage;
- (id)toastString;
- (void)track:extra:;
- (id)trackContext;
- (void)trackMuteGuest:muteGuestID:;
- (int)uilayout;
- (void)unMuteOtherRoom:;
- (void)uploadFeedbackWithCategoryName:content:;
- (BOOL)useBackupStreamWhenJoinRTC;
- (void)userProfileWillAppear;
- (id)waitingOffsetResponse;
- (id)waitingPrompts;
- (BOOL)willEnterDoubleC;
- (void)willStartPKAudienceLinkmicWhileBigParty;
- (BOOL)isPaid;
- (unsigned long long)currentScene;
- (id)currentLayout;
- (void)setLinkType:;
- (void)stopConnection;
- (void)setup;
- (void).cxx_destruct;
- (id)eventContext;
- (long long)linkType;
- (BOOL)isAdmin;
- (void)setIsPaid:;
- (id)activityName;
- (id)interactionSettings;
- (void)setActivityName:;
- (void)track:;
- (int)applyType;
- (void)setApplyType:;
- (void)setInteractionSettings:;
- (id)cellIndex;
- (void)setCellIndex:;
- (id)activityProvider;
- (void)setActivityProvider:;
@end
