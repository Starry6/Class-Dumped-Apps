@interface SKTileMapNode : SKNode
@property (nonatomic) NSString tileSetName;
@property (nonatomic) Q numberOfColumns;
@property (nonatomic) Q numberOfRows;
@property (nonatomic) {CGSize=dd} tileSize;
@property (nonatomic) {CGSize=dd} mapSize;
@property (nonatomic) SKTileSet tileSet;
@property (nonatomic) double colorBlendFactor;
@property (nonatomic) UIColor color;
@property (nonatomic) q blendMode;
@property (nonatomic) {CGPoint=dd} anchorPoint;
@property (nonatomic) SKShader shader;
@property (nonatomic) NSDictionary attributeValues;
@property (nonatomic) I lightingBitMask;
@property (nonatomic) BOOL enableAutomapping;
- (id)init;
- (void)dealloc;
- (id)copy;
- (void)setColor:;
- (unsigned long long)numberOfColumns;
- (void)setNumberOfColumns:;
- (void)setAlpha:;
- (void)commonInit;
- (id)tileSize;
- (void)setTileSize:;
- (id)initWithCoder:;
- (id)anchorPoint;
- (id)color;
- (void)encodeWithCoder:;
- (void)setBlendMode:;
- (void)setTileSet:;
- (double)alpha;
- (id)tileSet;
- (id)mapSize;
- (void)setNumberOfRows:;
- (void).cxx_destruct;
- (unsigned long long)numberOfRows;
- (long long)blendMode;
- (id)shader;
- (void)setAnchorPoint:;
- (id)copyWithZone:;
- (void)removeAllTiles;
- (BOOL)isEqualToNode:;
- (void)setShader:;
- (id)_makeBackingNode;
- (void)_didMakeBackingNode;
- (id)valueForAttributeNamed:;
- (void)setValue:forAttributeNamed:;
- (double)colorBlendFactor;
- (void)setColorBlendFactor:;
- (void)setLightingBitMask:;
- (unsigned int)lightingBitMask;
- (BOOL)enableAutomapping;
- (void)setEnableAutomapping:;
- (void)setRawTiles:rows:columns:;
- (void)setStartData:rows:tileSize:tileSet:;
- (id)initWithTileSet:columns:rows:tileSize:;
- (id)initWithTileSet:columns:rows:tileSize:fillWithTileGroup:;
- (id)initWithTileSet:columns:rows:tileSize:tileGroupLayout:;
- (unsigned int)getTileIDWithTileGroup:andTileDefinition:;
- (void)fillWithTileDefinition:;
- (void)fillWithTileGroup:;
- (id)tileDefinitionAtColumn:row:;
- (id)tileGroupAtColumn:row:;
- (void)setTileGroup:forColumn:row:;
- (void)setTileGroup:andTileDefinition:forColumn:row:;
- (void)setTileGroupWithoutUpdate:forColumn:row:;
- (void)setTileGroupWithoutUpdate:tileDefinition:forColumn:row:;
- (void)setTileGroup:forTileIndicies:;
- (void)setTileGroup:andTileDefinition:forTileIndicies:;
- (void)validateAllTiles;
- (void)fillArrayWithTiles:;
- (void)fillArray:withTilesFromColumn:row:forWidth:height:;
- (void)setTilesFromArray:;
- (void)setTilesFromArray:fromColumn:row:forWidth:height:;
- (void)clearModifiedTileTracking;
- (void)getTileModifiedData:outMinRowModified:outMaxColumnModified:outmaxRowModified:;
- (void)rebuildTileSprites;
- (void)updateTileDefinitionWithoutAutomappingAtX:y:;
- (void)updateTileGroupsAtX:y:;
- (void)setColumns:andRows:;
- (void)calculateSize;
- (unsigned long long)tileColumnIndexFromPosition:;
- (unsigned long long)tileRowIndexFromPosition:;
- (id)centerOfTileAtColumn:row:;
- (id)createTileStampFromColumn:row:withWidth:height:addToTileSet:;
- (void)applyTileStamp:inColumn:row:;
- (id)tileDefinitionForTileID:;
- (BOOL)shouldUnarchiveTileSet;
- (void)forceRedraw;
- (id)tileSetName;
- (void)setTileSetName:;
+ (id)tileMapNodesWithTileSet:columns:rows:tileSize:fromNoiseMap:tileTypeNoiseMapThresholds:;
+ (BOOL)supportsSecureCoding;
+ (id)debugHierarchyPropertyDescriptions;
+ (id)debugHierarchyValueForPropertyWithName:onObject:outOptions:outError:;
+ (id)tileMapNodeWithTileSet:columns:rows:tileSize:;
+ (id)tileMapNodeWithTileSet:columns:rows:tileSize:fillWithTileGroup:;
+ (id)tileMapNodeWithTileSet:columns:rows:tileSize:tileGroupLayout:;
@end
