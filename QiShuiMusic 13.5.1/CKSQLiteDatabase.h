@interface CKSQLiteDatabase : NSObject
@property (nonatomic) NSData uniquingKey;
@property (nonatomic) NSMapTable tableGroupCache;
@property (nonatomic) NSString databaseDirectory;
@property (nonatomic) CKSQLiteTOCTable tocTable;
@property (nonatomic) CKSQLiteTOCTableGroupTable tableGroupTable;
@property (nonatomic) BOOL databaseWasCreated;
@property (nonatomic) BOOL removeWhenClosed;
- (id)bootstrap;
- (unsigned long long)changeCount;
- (long long)lastInsertRowID;
- (id)objectValueForKey:;
- (void)serializeDatabase:;
- (void)dealloc;
- (void)forceClosedForUnitTest;
- (id)performTOCTransaction:;
- (BOOL)databaseWasCreated;
- (void)incrementTableOrGroupCount;
- (id)serializer;
- (BOOL)removeWhenClosed;
- (id)dataValueForKey:;
- (id)UUIDValueForKey:;
- (id)_validateVersionNumbers;
- (void)decrementTableOrGroupCount;
- (id)sqlErrorWithMessage:;
- (id)databaseFilePath;
- (id)executeSQL:;
- (void)assertDbSerialized;
- (void)setDateValue:forKey:;
- (void)invalidateCachedStatements;
- (id)databaseDirectory;
- (id)tocTable;
- (id)stringValueForKey:;
- (void)addTransactionCompletionHandler:;
- (void)setObjectValue:forKey:;
- (void)setRemoveWhenClosed:;
- (id)removeDatabaseDirectory;
- (void)setUUIDValue:forKey:;
- (void)assertDbNotSerialized;
- (id)validateOpenDatabase;
- (void)setNumberValue:forKey:;
- (void).cxx_destruct;
- (id)compiledStatementWithSQL:error:;
- (BOOL)tableGroupWasPreviouslyValidated:;
- (id)tableGroupCache;
- (id)createNewDatabase;
- (id)description;
- (void)setStringValue:forKey:;
- (id)tableGroupTable;
- (id)uniquingKey;
- (id)_pruneTables;
- (id)initWithDatabaseDirectory:;
- (id)numberValueForKey:;
- (id)performDatabaseTransaction:;
- (void)setDataValue:forKey:;
- (void)tableGroupPassedValidation:;
- (void)setupDatabaseConnection;
- (id)dateValueForKey:;
- (id)openExistingDatabase;
- (id)allTableNames:;
- (void)assertInTransaction;
- (void)closeDatabase;
- (id)dropTable:;
+ (id)databaseArchiveWithObject:;
+ (id)uniquingKeyForDatabaseDirectory:;
+ (id)databaseFilePathInDirectory:;
+ (void)removeLegacyDatabaseAtPath:;
+ (id)databaseInDirectory:error:;
+ (unsigned long long)openDatabaseCount;
+ (id)unarchivedObjectFromDatabaseArchive:;
+ (id)databaseInDirectory:options:error:;
@end
