@interface GEOPDClientMetadata : PBCodable
@property (nonatomic) BOOL hasAbClientMetadata;
@property (nonatomic) GEOABSecondPartyPlaceRequestClientMetaData abClientMetadata;
@property (nonatomic) BOOL hasAbBranchInfo;
@property (nonatomic) GEOABBranchInfo abBranchInfo;
@property (nonatomic) BOOL hasDeviceCountryCode;
@property (nonatomic) NSString deviceCountryCode;
@property (nonatomic) BOOL hasDeviceDisplayLanguage;
@property (nonatomic) NSString deviceDisplayLanguage;
@property (nonatomic) BOOL hasDeviceKeyboardLanguage;
@property (nonatomic) NSString deviceKeyboardLanguage;
@property (nonatomic) BOOL hasDeviceSpokenLanguage;
@property (nonatomic) NSString deviceSpokenLanguage;
@property (nonatomic) BOOL hasTimeSinceMapEnteredForeground;
@property (nonatomic) I timeSinceMapEnteredForeground;
@property (nonatomic) BOOL hasAdditionalEnabledMarkets;
@property (nonatomic) GEOAdditionalEnabledMarkets additionalEnabledMarkets;
@property (nonatomic) BOOL hasResultListAttributionSupport;
@property (nonatomic) NSInteger resultListAttributionSupport;
@property (nonatomic) BOOL hasHourOfDay;
@property (nonatomic) I hourOfDay;
@property (nonatomic) BOOL hasDayOfWeek;
@property (nonatomic) I dayOfWeek;
@property (nonatomic) BOOL hasDeviceExtendedLocation;
@property (nonatomic) GEOLocation deviceExtendedLocation;
@property (nonatomic) NSMutableArray deviceHistoricalLocations;
@property (nonatomic) BOOL hasRequiredVersion;
@property (nonatomic) NSInteger requiredVersion;
@property (nonatomic) BOOL hasDebugApiKey;
@property (nonatomic) NSString debugApiKey;
@property (nonatomic) Q knownClientResolvedTypeDeprecatedsCount;
@property (nonatomic) ^i knownClientResolvedTypeDeprecateds;
@property (nonatomic) BOOL hasEnablePreflightVenues;
@property (nonatomic) BOOL enablePreflightVenues;
@property (nonatomic) Q knownClientResolvedTypesCount;
@property (nonatomic) ^i knownClientResolvedTypes;
@property (nonatomic) NSMutableArray businessChatPreflightIdentifiers;
@property (nonatomic) BOOL hasClientRevision;
@property (nonatomic) NSInteger clientRevision;
@property (nonatomic) BOOL hasLocalizationCapabilities;
@property (nonatomic) GEOLocalizationCapabilities localizationCapabilities;
@property (nonatomic) BOOL hasDeviceSku;
@property (nonatomic) NSString deviceSku;
@property (nonatomic) BOOL hasSiriUserConsentsForAnalysis;
@property (nonatomic) BOOL siriUserConsentsForAnalysis;
@property (nonatomic) Q supportedMapsResultTypesCount;
@property (nonatomic) ^i supportedMapsResultTypes;
@property (nonatomic) BOOL hasMapsSuggestionsTouristInfo;
@property (nonatomic) GEOPDMapsSuggestionsTouristInfo mapsSuggestionsTouristInfo;
@property (nonatomic) Q clientRevisionsCount;
@property (nonatomic) ^i clientRevisions;
@property (nonatomic) BOOL hasPreferredDisplayCurrencySymbol;
@property (nonatomic) NSString preferredDisplayCurrencySymbol;
@property (nonatomic) BOOL hasDisplayRegion;
@property (nonatomic) NSString displayRegion;
@property (nonatomic) BOOL hasSupportEnrichment;
@property (nonatomic) BOOL supportEnrichment;
@property (nonatomic) PBUnknownFields unknownFields;
- (BOOL)hasDisplayRegion;
- (void)clearLocations;
- (id)displayRegion;
- (void)readAll:;
- (void)setClientRevision:;
- (void)setHasTimeSinceMapEnteredForeground:;
- (id)initWithTraits:;
- (id)unknownFields;
- (unsigned int)hourOfDay;
- (BOOL)hasGreenTeaWithValue:;
- (id)init;
- (BOOL)hasPreferredDisplayCurrencySymbol;
- (id)resultListAttributionSupportAsString:;
- (int)StringAsClientRevisions:;
- (void)clearSensitiveFields:;
- (BOOL)hasAdditionalEnabledMarkets;
- (id)abBranchInfo;
- (int)StringAsKnownClientResolvedTypes:;
- (void)dealloc;
- (BOOL)hasDebugApiKey;
- (int)StringAsClientRevision:;
- (unsigned long long)knownClientResolvedTypeDeprecatedsCount;
- (id)deviceDisplayLanguage;
- (void)addKnownClientResolvedTypeDeprecated:;
- (int)knownClientResolvedTypeAtIndex:;
- (id)initWithJSON:;
- (int)supportedMapsResultTypeAtIndex:;
- (BOOL)hasDeviceExtendedLocation;
- (BOOL)hasDeviceKeyboardLanguage;
- (int)StringAsRequiredVersion:;
- (void)setPreferredDisplayCurrencySymbol:;
- (BOOL)hasDayOfWeek;
- (BOOL)hasDeviceCountryCode;
- (id)jsonRepresentation;
- (id)knownClientResolvedTypeDeprecateds;
- (BOOL)hasAbClientMetadata;
- (void)setDeviceExtendedLocation:;
- (id)deviceSku;
- (id)initWithDictionary:;
- (void)clearUnknownFields:;
- (id)localizationCapabilities;
- (int)StringAsSupportedMapsResultTypes:;
- (void)writeTo:;
- (BOOL)hasResultListAttributionSupport;
- (void)setHasResultListAttributionSupport:;
- (void)setHasDayOfWeek:;
- (BOOL)hasLocalizationCapabilities;
- (void)setHasRequiredVersion:;
- (BOOL)enablePreflightVenues;
- (void)clearSupportedMapsResultTypes;
- (void)setHasEnablePreflightVenues:;
- (void)setDeviceSpokenLanguage:;
- (int)requiredVersion;
- (BOOL)hasTimeSinceMapEnteredForeground;
- (unsigned int)dayOfWeek;
- (unsigned long long)hash;
- (void)clearKnownClientResolvedTypeDeprecateds;
- (unsigned long long)deviceHistoricalLocationsCount;
- (int)clientRevisionsAtIndex:;
- (id)deviceCountryCode;
- (int)StringAsResultListAttributionSupport:;
- (void)setAdditionalEnabledMarkets:;
- (id)deviceHistoricalLocationAtIndex:;
- (id)mapsSuggestionsTouristInfo;
- (void)copyTo:;
- (void)addClientRevisions:;
- (id)preferredDisplayCurrencySymbol;
- (id)knownClientResolvedTypesAsString:;
- (id)debugApiKey;
- (BOOL)hasDeviceDisplayLanguage;
- (id)deviceExtendedLocation;
- (unsigned long long)clientRevisionsCount;
- (void)setDisplayRegion:;
- (void)mergeFrom:;
- (void)setLocalizationCapabilities:;
- (id)deviceSpokenLanguage;
- (void)setResultListAttributionSupport:;
- (unsigned int)timeSinceMapEnteredForeground;
- (void)setAbBranchInfo:;
- (BOOL)hasDeviceSku;
- (unsigned long long)knownClientResolvedTypesCount;
- (void)setSupportEnrichment:;
- (void)setAbClientMetadata:;
- (void)clearKnownClientResolvedTypes;
- (void)setKnownClientResolvedTypeDeprecateds:count:;
- (id)businessChatPreflightIdentifierAtIndex:;
- (unsigned long long)supportedMapsResultTypesCount;
- (void)setRequiredVersion:;
- (id)deviceHistoricalLocations;
- (void)setHourOfDay:;
- (void)setDayOfWeek:;
- (void)setClientRevisions:count:;
- (void)addBusinessChatPreflightIdentifier:;
- (void)setEnablePreflightVenues:;
- (BOOL)siriUserConsentsForAnalysis;
- (id)initWithData:;
- (BOOL)hasClientRevision;
- (id)knownClientResolvedTypes;
- (int)clientRevision;
- (void)setHasSiriUserConsentsForAnalysis:;
- (id)businessChatPreflightIdentifiers;
- (void).cxx_destruct;
- (id)additionalEnabledMarkets;
- (void)setDebugApiKey:;
- (void)clearDeviceHistoricalLocations;
- (BOOL)hasRequiredVersion;
- (void)setTimeSinceMapEnteredForeground:;
- (BOOL)hasSupportEnrichment;
- (BOOL)readFrom:;
- (void)addSupportedMapsResultType:;
- (id)clientRevisionAsString:;
- (BOOL)hasEnablePreflightVenues;
- (void)setDeviceDisplayLanguage:;
- (void)setDeviceHistoricalLocations:;
- (unsigned long long)businessChatPreflightIdentifiersCount;
- (void)setSiriUserConsentsForAnalysis:;
- (id)description;
- (id)requiredVersionAsString:;
- (id)supportedMapsResultTypesAsString:;
- (BOOL)hasDeviceSpokenLanguage;
- (void)setMapsSuggestionsTouristInfo:;
- (BOOL)hasMapsSuggestionsTouristInfo;
- (void)addKnownClientResolvedType:;
- (void)clearClientRevisions;
- (id)dictionaryRepresentation;
- (int)knownClientResolvedTypeDeprecatedAtIndex:;
- (id)supportedMapsResultTypes;
- (void)setDeviceCountryCode:;
- (int)resultListAttributionSupport;
- (void)setSupportedMapsResultTypes:count:;
- (id)clientRevisionsAsString:;
- (void)setKnownClientResolvedTypes:count:;
- (void)setDeviceKeyboardLanguage:;
- (int)StringAsKnownClientResolvedTypeDeprecateds:;
- (void)setBusinessChatPreflightIdentifiers:;
- (id)deviceKeyboardLanguage;
- (BOOL)supportEnrichment;
- (id)abClientMetadata;
- (void)setDeviceSku:;
- (void)clearBusinessChatPreflightIdentifiers;
- (void)addDeviceHistoricalLocation:;
- (void)setHasClientRevision:;
- (void)setHasSupportEnrichment:;
- (BOOL)isEqual:;
- (id)clientRevisions;
- (BOOL)hasHourOfDay;
- (BOOL)hasAbBranchInfo;
- (id)knownClientResolvedTypeDeprecatedsAsString:;
- (id)copyWithZone:;
- (BOOL)hasSiriUserConsentsForAnalysis;
- (void)setHasHourOfDay:;
+ (BOOL)isValid:;
+ (Class)businessChatPreflightIdentifierType;
+ (Class)deviceHistoricalLocationType;
@end
