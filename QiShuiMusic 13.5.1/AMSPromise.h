@interface AMSPromise : NSObject
@property (nonatomic) BOOL asc_failed;
@property (nonatomic) AMSPromiseCompletionBlocks completionBlocks;
@property (nonatomic) AMSPromiseResult promiseResult;
@property (nonatomic) NSConditionLock stateLock;
@property (nonatomic) {Promise<PromiseResult>=^^?{shared_ptr<AMSCore::Future<PromiseResult>::FutureImp>=^{FutureImp}^{__shared_weak_count}}} backingPromise;
@property (nonatomic) BOOL cancelled;
@property (nonatomic) BOOL finished;
@property (nonatomic) BOOL timedOut;
- (BOOL)asc_isFailed;
- (id)asc_copy;
- (id)errorOnlyCompletionHandlerAdapter;
- (id)completionHandlerAdapter;
- (id)completionBlocks;
- (id)init;
- (id)boolCompletionHandlerAdapter;
- (BOOL)cancel;
- (id)stateLock;
- (id)promiseWithTimeout:;
- (void)_addBlock:orCallWithResult:;
- (BOOL)isCancelled;
- (id)resultWithError:;
- (BOOL)_isFinished;
- (id)initWithTimeout:;
- (void)resultWithTimeout:completion:;
- (BOOL)finishWithResult:;
- (void)setCompletionBlocks:;
- (BOOL)finishWithPromiseResult:;
- (void)setStateLock:;
- (void)addFinishBlock:;
- (BOOL)isTimedOut;
- (BOOL)isFinished;
- (void)resultWithCompletion:;
- (void)waitUntilFinished;
- (id)continueWithBlock:;
- (id)catchWithBlock:;
- (void)addSuccessBlock:;
- (void).cxx_destruct;
- (void)setBackingPromise:;
- (id)backingPromise;
- (BOOL)finishWithError:;
- (void)setPromiseResult:;
- (id)thenWithBlock:;
- (id)promiseResult;
- (id)resultBeforeDate:error:;
- (id)resultWithTimeout:error:;
- (BOOL)finishWithPromise:;
- (void)waitUntilFinishedWithTimeout:;
- (BOOL)finishWithResult:error:;
- (void)addErrorBlock:;
- (id).cxx_construct;
- (id)nilValueCompletionHandlerAdapter;
- (id)binaryPromiseAdapter;
- (id)mutablePromiseAdapter;
- (void)resultBeforeDate:completion:;
+ (void)_configureFlattenedPromise:withPromises:results:previousError:currentPromiseIndex:;
+ (void)_enumeratePromises:startingAt:block:;
+ (BOOL)_errorIsTimeOutError:;
+ (id)promiseWithFlattenedPromises:;
+ (id)_globalPromiseStorageAccessQueue;
+ (id)promiseWithAny:timeout:;
+ (id)_globalPromiseStorage;
+ (id)promiseWithPromiseResult:;
+ (id)promiseWithAll:timeout:;
+ (id)promiseWithSome:timeout:;
+ (id)promiseWithResult:;
+ (id)promiseWithError:;
+ (BOOL)_errorIsCanceledError:;
+ (id)promiseWithSome:;
+ (id)promiseFinishedWithDefaultErrorOrResult:;
+ (id)unwrappedPromiseWithPromise:;
+ (id)promiseWithAll:;
+ (id)promiseWithAny:;
@end
