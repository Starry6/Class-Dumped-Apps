@interface VSSpeechSynthesizer : NSObject
@property (nonatomic) NSString language;
@property (nonatomic) NSUUID accessoryID;
@property (nonatomic) NSMutableDictionary durationRequests;
@property (nonatomic) SiriTTSDaemonSession proxySession;
@property (nonatomic) NSMutableDictionary stsRequestMapping;
@property (nonatomic) NSObject<OS_dispatch_queue> audioPowerUpdaterQueue;
@property (nonatomic) AFAudioPowerUpdater audioPowerUpdater;
@property (nonatomic) BOOL isPlayingPreview;
@property (nonatomic) AFAudioPowerXPCProvider previewAudioPowerXPCProvider;
@property (nonatomic) <VSSpeechSynthesizerDelegate> delegate;
@property (nonatomic) BOOL keepActive;
@property (nonatomic) float rate;
@property (nonatomic) float pitch;
@property (nonatomic) float volume;
@property (nonatomic) NSString voice;
@property (nonatomic) Q hash;
@property (nonatomic) # superclass;
@property (nonatomic) NSString description;
@property (nonatomic) NSString debugDescription;
- (void)forwardStreamObject:;
- (void)invokeDaemon:;
- (void)cancelRequest:;
- (id)availableLanguageCodes;
- (void)endAudioPowerUpdate;
- (void)_setDelegate:;
- (id)audioPowerUpdater;
- (void)setAudioPowerUpdaterQueue:;
- (void)setRate:;
- (void)setPitch:;
- (void)textToPhonemesWithRequest:phonemeSystem:completion:;
- (void)getLocalVoiceAssets:;
- (void)getLocalVoiceAssetsForLanguage:reply:;
- (id)init;
- (void)connection:previewRequestDidStartPlaying:;
- (float)volume;
- (void)connection:speechRequest:successWithInstrumentMetrics:;
- (void)setLanguage:;
- (void)connection:speechRequest:didStopAtEnd:phonemesSpoken:error:;
- (id)language;
- (id)durationRequests;
- (id)errorFromSTSError:;
- (void)cancelAudioRequest:;
- (id)initWithAccessoryID:;
- (void)setVolume:;
- (void)estimateDurationOfRequest:completion:;
- (id)accessoryID;
- (void)setVoice:;
- (id)STS_prewarmRequest:;
- (BOOL)keepActive;
- (float)rate;
- (void)connection:speechRequestDidPause:;
- (void)getVoiceInfoForLanguageCode:name:footprint:gender:type:reply:;
- (void)getAllAutoDownloadedVoiceAssets:;
- (void)getVoiceInfoForLanguageCode:name:type:footprint:reply:;
- (void)setDelegate:;
- (void)setAudioPowerUpdater:;
- (float)pitch;
- (id)STS_startSpeakingAudioRequest:;
- (void)triggerCellularDownloadedVoiceAssets:;
- (BOOL)isPlayingPreview;
- (id)_stopSpeakingPresynthesizedAudioRequest:synchronously:;
- (BOOL)getAveragePower:andPeakPower:;
- (id)STS_signalInlineStreaming:;
- (id)availableFootprintsForVoice:languageCode:;
- (void)didEndAccessPower;
- (void)getLocalVoiceResources:;
- (void)setProxySession:;
- (void)STS_forwardStreamObject:;
- (void)cleanUnusedAssets:;
- (BOOL)continueSpeakingWithError:;
- (void)setDurationRequests:;
- (void)STS_cancelRequest:;
- (void)killDaemon;
- (void)connection:speechRequest:didReceiveTimingInfo:;
- (void)connection:speechRequest:willSpeakMark:inRange:;
- (void)STS_cancelAudioRequest:;
- (id)_stopSpeakingRequest:atNextBoundary:synchronously:;
- (void)STS_textToPhonemesWithRequest:phonemeSystem:completion:;
- (BOOL)stopSpeakingPresynthesizedAudioSynchronously:error:;
- (BOOL)isSystemSpeaking;
- (void)connection:speechRequest:didGenerateAudioChunk:;
- (void)getVoiceResourceForLanguage:reply:;
- (void)setKeepActive:;
- (void)playVoicePreviewForLanguageCode:voiceName:previewType:completion:;
- (id)_pauseSpeakingRequestAtNextBoundary:synchronously:;
- (id)delegate;
- (void)setAccessoryID:;
- (BOOL)stopSpeakingAtNextBoundary:synchronously:error:;
- (id)previewAudioPowerXPCProvider;
- (float)maximumRate;
- (void)willBeginAccessPower;
- (void)connection:synthesisRequest:didFinishWithInstrumentMetrics:error:;
- (double)estimateDurationOfRequest:;
- (id)voice;
- (void)setStsRequestMapping:;
- (void).cxx_destruct;
- (BOOL)isSpeaking;
- (void)connection:presynthesizedAudioRequest:successWithInstrumentMetrics:error:;
- (float)minimumRate;
- (void)connection:speechRequestDidStart:;
- (BOOL)pauseSpeakingAtNextBoundary:synchronously:error:;
- (id)speechString;
- (id)_continueSpeakingRequest;
- (void)setIsPlayingPreview:;
- (void)setAutoDownloadedVoiceAssets:;
- (void)connection:presynthesizedAudioRequestDidStart:;
- (BOOL)STS_isSpeaking;
- (id)STS_startSynthesizingRequest:;
- (void)beginAudioPowerUpdateWithReply:;
- (id)prewarmIfNeededWithRequest:;
- (void)connection:speechRequestDidContinue:;
- (id)stsRequestMapping;
- (id)startSpeakingRequest:;
- (id)startSpeakingPresynthesizedAudioRequest:;
- (void)connection:invalidatedWithError:;
- (id)availableVoicesForLanguageCode:;
- (void)setPreviewAudioPowerXPCProvider:;
- (id)audioPowerUpdaterQueue;
- (void)stopPlayingVoicePreview;
- (id)initForInputFeedback;
- (BOOL)queryPhaticCapability:;
- (void)connection:presynthesizedAudioRequest:didStopAtEnd:error:;
- (id)cachePresynthesizedAudioRequest:;
- (id)proxySession;
- (void)getAutoDownloadedVoiceAssets:;
- (id)startSynthesizingRequest:;
- (id)STS_startSpeakingRequest:;
+ (id)sharedInstance;
+ (BOOL)playVoicePreviewForLanguageCode:voiceName:previewType:completion:;
+ (void)stopPlayingVoicePreview;
+ (id)errorWithReason:;
+ (id)validatePrewarmRequest:;
+ (id)validateRequest:;
+ (id)validateAudioRequest:;
+ (id)validateAudioCachingRequest:;
+ (id)characterClassCountForUtterance:language:;
@end
