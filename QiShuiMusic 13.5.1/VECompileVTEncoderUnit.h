@interface VECompileVTEncoderUnit : IESMMObject
@property (nonatomic) VECompileFramebufferManager framebufferManager;
@property (nonatomic) HTSVideoData videoData;
@property (nonatomic) VETransData transData;
@property (nonatomic) VEConfigData configData;
@property (nonatomic) ^{OpaqueVTCompressionSession=} videoEncodeSession;
@property (nonatomic) VEMVPRenderer textureMvpRenderer;
@property (nonatomic) VEMVPRenderer pixelbufferMvpRenderer;
@property (nonatomic) {?=qiIq} lastVideoFrameTime;
@property (nonatomic) BOOL waitForFrameAfterSeek;
@property (nonatomic) NSMutableArray latestVideoPTS;
@property (nonatomic) NSLock vPTSLock;
@property (nonatomic) q status;
@property (nonatomic) q inputVideoDataType;
@property (nonatomic) NSCondition pipelineResourcesCont;
@property (nonatomic) q pipeResources;
@property (nonatomic) NSObject<OS_dispatch_queue> writerQueue;
@property (nonatomic) VEFence fenceObj;
@property (nonatomic) VEPixelBufferCopyUtils pixelBufferCopyUtils;
@property (nonatomic) BOOL encodeUseFenceRender;
@property (nonatomic) BOOL passVTEncode;
@property (nonatomic) BOOL isMultiClip;
@property (nonatomic) BOOL enableAsyncWriter;
@property (nonatomic) BOOL enableAgfxContext;
@property (nonatomic) BOOL enableEncodeFrameOpt;
@property (nonatomic) NSMutableArray splitTimePoints;
@property (nonatomic) <VEProcessSampleDelegate> downstream;
@property (nonatomic) BOOL hasDecreseFrameTimeStamp;
@property (nonatomic) NSError encoderError;
@property (nonatomic) NSString route;
@property (nonatomic) Q hash;
@property (nonatomic) # superclass;
@property (nonatomic) NSString description;
@property (nonatomic) NSString debugDescription;
@property (nonatomic) q curVideoStage;
@property (nonatomic) q curAudioStage;
- (void)setWriterQueue:;
- (id)splitTimePoints;
- (BOOL)initVTSessions:;
- (void)setIsMultiClip:;
- (void)applySmartCodecRet;
- (id)configData;
- (long long)curAudioStage;
- (long long)curVideoStage;
- (BOOL)enableAgfxContext;
- (BOOL)enableAsyncWriter;
- (BOOL)enableEncodeFrameOpt;
- (BOOL)encodeFinish:;
- (BOOL)encodeSampleData:;
- (BOOL)encodeUseFenceRender;
- (id)encoderError;
- (id)fenceObj;
- (BOOL)getAudioWriterFinish;
- (BOOL)getVideoWriterFinish;
- (BOOL)hasDecreseFrameTimeStamp;
- (void)initSmartCodecHandle:;
- (long long)inputVideoDataType;
- (void)invokeSmartCodecProcess:pixel:;
- (BOOL)isMultiClip;
- (id)lastVideoFrameTime;
- (id)latestVideoPTS;
- (void)p_acruireResource;
- (void)p_downstreamProcessSampleData:;
- (BOOL)p_encodeSampleDataByFrameBuffer:;
- (BOOL)p_encodeSampleDataByPixelBuf:;
- (BOOL)p_needEncodeAsIFrame:;
- (void)p_releaseResource;
- (id)p_renderAtInternalSizeUsingFramebuffer:fence:;
- (BOOL)passVTEncode;
- (long long)pipeResources;
- (id)pipelineResourcesCont;
- (id)pixelBufferCopyUtils;
- (id)pixelbufferMvpRenderer;
- (BOOL)processSampleData:;
- (void)returnFramebuffer:;
- (void)setConfigData:;
- (void)setCurAudioStage:;
- (void)setCurVideoStage:;
- (void)setEnableAgfxContext:;
- (void)setEnableEncodeFrameOpt:;
- (void)setEncodeUseFenceRender:;
- (void)setEncoderError:;
- (void)setFenceObj:;
- (void)setFramebufferManager:;
- (void)setHasDecreseFrameTimeStamp:;
- (void)setInputVideoDataType:;
- (void)setLastVideoFrameTime:;
- (void)setLatestVideoPTS:;
- (void)setPassVTEncode:;
- (void)setPipeResources:;
- (void)setPipelineResourcesCont:;
- (void)setPixelBufferCopyUtils:;
- (void)setPixelbufferMvpRenderer:;
- (void)setSplitTimePoints:;
- (void)setTextureMvpRenderer:;
- (void)setTransData:;
- (void)setVPTSLock:;
- (int)setVTSessionConfig:;
- (void)setVideoData:;
- (void)setVideoEncodeSession:;
- (void)setWaitForFrameAfterSeek:;
- (id)textureMvpRenderer;
- (id)transData;
- (id)vPTSLock;
- (id)videoData;
- (id)videoEncodeSession;
- (void)vtEncodeCallback:sample:flags:;
- (BOOL)waitForFrameAfterSeek;
- (void)setEnableAsyncWriter:;
- (void)setStatus:;
- (id)init;
- (void)dealloc;
- (void)setRoute:;
- (id)route;
- (id)downstream;
- (void)closeSession:;
- (BOOL)setConfig:;
- (void)setDownstream:;
- (void).cxx_destruct;
- (long long)status;
- (void)resetSession;
- (id)framebufferManager;
- (id)writerQueue;
@end
