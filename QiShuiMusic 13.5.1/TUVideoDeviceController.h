@interface TUVideoDeviceController : NSObject
@property (nonatomic) NSObject<OS_dispatch_queue> serialQueue;
@property (nonatomic) <TUVideoDeviceControllerProvider><TUVideoEffectsProvider> provider;
@property (nonatomic) <TUFeatureFlags> featureFlags;
@property (nonatomic) BOOL wantsPreview;
@property (nonatomic) BOOL hasRefreshedPreviewAfterError;
@property (nonatomic) AVCaptureDevice currentInputDevice;
@property (nonatomic) NSInteger currentVideoOrientation;
@property (nonatomic) NSArray inputDevices;
@property (nonatomic) BOOL previewRunning;
@property (nonatomic) BOOL cinematicFramingEnabled;
@property (nonatomic) BOOL currentInputSupportsCinematicFraming;
@property (nonatomic) BOOL supportsCameraBlur;
@property (nonatomic) BOOL cameraBlurEnabled;
@property (nonatomic) NSInteger currentBackgroundBlurControlMode;
@property (nonatomic) BOOL hasAvailableDeskViewCameras;
@property (nonatomic) CALayer localFrontLayer;
@property (nonatomic) CALayer localBackLayer;
@property (nonatomic) {CGRect={CGPoint=dd}{CGSize=dd}} localScreenContentsRect;
@property (nonatomic) {CGSize=dd} localVideoPortraitAspectRatio;
@property (nonatomic) {CGSize=dd} localScreenPortraitAspectRatio;
@property (nonatomic) {CGSize=dd} localVideoLandscapeAspectRatio;
@property (nonatomic) {CGSize=dd} localScreenLandscapeAspectRatio;
@property (nonatomic) TUVideoEffect currentVideoEffect;
@property (nonatomic) NSArray availableVideoEffects;
@property (nonatomic) BOOL followSystemCameraEnabled;
@property (nonatomic) BOOL ignoreStartPreview;
- (void)setCinematicFramingEnabled:;
- (id)inputDevices;
- (void)setCameraZoomFactor:;
- (id)init;
- (id)serialQueue;
- (id)debugDescription;
- (id)provider;
- (id)currentInputDevice;
- (void).cxx_destruct;
- (id)featureFlags;
- (void)setCurrentInputDevice:;
- (BOOL)isCinematicFramingEnabled;
- (id)initWithSerialQueue:;
- (void)startPreview;
- (void)stopPreview;
- (void)didStartPreviewForProvider:;
- (void)didPausePreviewForProvider:;
- (void)didStopPreviewForProvider:;
- (void)captureDevicesChangedForProvider:;
- (void)provider:cameraDidBecomeAvailableForUniqueID:;
- (void)provider:didChangeLocalVideoAttributes:;
- (void)provider:didReceiveErrorFromCameraUniqueID:error:;
- (void)provider:didReceiveFirstPreviewFrameFromCameraUniqueID:;
- (void)provider:didChangeLocalCameraUID:;
- (void)provider:cameraZoomAvailabilityDidChange:;
- (void)provider:cameraBlurEnabledDidChange:;
- (void)provider:userPreferredCameraUIDDidChange:;
- (void)provider:didGetSnapshot:;
- (void)provider:cameraCinematicFramingAvailabilityDidChange:;
- (void)provider:cameraCinematicFramingEnabledDidChange:;
- (id)initWithProvider:serialQueue:featureFlags:;
- (BOOL)currentInputSupportsCinematicFraming;
- (void)setCurrentInputDevice:isUserPreferred:;
- (int)currentVideoOrientation;
- (void)setCurrentVideoOrientation:;
- (BOOL)isFollowSystemCameraEnabled;
- (void)setFollowSystemCameraEnabled:;
- (BOOL)hasAvailableDeskViewCameras;
- (BOOL)isPreviewRunning;
- (id)localFrontLayer;
- (void)setLocalFrontLayer:;
- (id)localBackLayer;
- (void)setLocalBackLayer:;
- (void)setCurrentVideoEffect:;
- (id)currentVideoEffect;
- (id)availableVideoEffects;
- (void)pausePreview;
- (void)getSnapshot;
- (BOOL)supportsCameraBlur;
- (int)currentBackgroundBlurControlMode;
- (void)setCurrentBackgroundBlurControlMode:;
- (BOOL)cameraBlurEnabled;
- (void)setCameraBlurEnabled:;
- (void)rampCameraZoomFactor:withRate:;
- (void)noteBeginAnimationToPreview;
- (void)flipCamera;
- (void)noteEndAnimationToPreview;
- (void)noteBeginAnimationToPIP;
- (void)noteEndAnimationToPIP;
- (void)setLocalPortraitAspectRatio:localLandscapeAspectRatio:;
- (id)localScreenContentsRect;
- (id)localVideoPortraitAspectRatio;
- (id)localScreenPortraitAspectRatio;
- (id)localVideoLandscapeAspectRatio;
- (id)localScreenLandscapeAspectRatio;
- (id)portraitScreenAttributes;
- (id)landscapeScreenAttributes;
- (BOOL)shouldIgnoreStartPreview;
- (void)setIgnoreStartPreview:;
- (BOOL)wantsPreview;
- (void)setWantsPreview:;
- (BOOL)hasRefreshedPreviewAfterError;
- (void)setHasRefreshedPreviewAfterError:;
+ (void)prewarm;
+ (int)_videoOrientationForTUOrientation:;
+ (int)_tuOrientationForVideoOrientation:;
@end
