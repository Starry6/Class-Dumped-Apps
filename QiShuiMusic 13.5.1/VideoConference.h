@interface VideoConference : VCObject
@property (nonatomic) Q hash;
@property (nonatomic) # superclass;
@property (nonatomic) NSString description;
@property (nonatomic) NSString debugDescription;
@property (nonatomic) VCMoments vcMoments;
@property (nonatomic) NSMutableDictionary sessionDict;
@property (nonatomic) BOOL useCompressedConnectionData;
@property (nonatomic) BOOL enableSpeakerPhone;
@property (nonatomic) BOOL requiresWifi;
@property (nonatomic) I transportType;
@property (nonatomic) BOOL shouldPrioritizeParticipantIDForSIPInvite;
@property (nonatomic) NSObject<VideoConferenceDelegate> delegate;
@property (nonatomic) BOOL useViceroyBlobFormat;
@property (nonatomic) BOOL microphoneMuted;
@property (nonatomic) BOOL outputMeteringEnabled;
@property (nonatomic) BOOL inputMeteringEnabled;
@property (nonatomic) BOOL inputFrequencyMeteringEnabled;
@property (nonatomic) BOOL outputFrequencyMeteringEnabled;
@property (nonatomic) float outputMeterLevel;
@property (nonatomic) float inputMeterLevel;
@property (nonatomic) q inputAudioPowerSpectrumToken;
@property (nonatomic) q outputAudioPowerSpectrumToken;
@property (nonatomic) NSInteger chatMode;
@property (nonatomic) BOOL isFocus;
@property (nonatomic) NSString currentFocus;
@property (nonatomic) NSInteger packetsPerBundle;
@property (nonatomic) BOOL hasMic;
@property (nonatomic) float conferenceVolume;
@property (nonatomic) NSObject<VideoConferenceSpeakingDelegate> speakingDelegate;
@property (nonatomic) NSObject<VideoConferenceChannelQualityDelegate> qualityDelegate;
@property (nonatomic) I talkingPeersLimit;
@property (nonatomic) BOOL disableVAD;
@property (nonatomic) BOOL shouldTimeoutPackets;
@property (nonatomic) NSInteger upstreamBandwidth;
@property (nonatomic) NSInteger downstreamBandwidth;
@property (nonatomic) NSInteger localFrameHeight;
@property (nonatomic) NSInteger localFrameWidth;
@property (nonatomic) I preferredCodec;
@property (nonatomic) BOOL isUsingSuppression;
@property (nonatomic) BOOL isGKVoiceChat;
@property (nonatomic) VCVideoRule conferenceCaptureRule;
@property (nonatomic) I lastActiveCall;
@property (nonatomic) BOOL isValid;
@property (nonatomic) NSInteger deviceRole;
@property (nonatomic) Q hash;
@property (nonatomic) # superclass;
@property (nonatomic) NSString description;
@property (nonatomic) NSString debugDescription;
- (void)setTransportType:;
- (void)dealloc;
- (void)setIsValid:;
- (void)setDelegate:;
- (unsigned int)transportType;
- (void)unlock;
- (id)delegate;
- (BOOL)isValid;
- (BOOL)setActive:;
- (long long)inputAudioPowerSpectrumToken;
- (long long)outputAudioPowerSpectrumToken;
- (BOOL)isMicrophoneMuted;
- (void)setMicrophoneMuted:;
- (BOOL)isOutputMeteringEnabled;
- (void)setOutputMeteringEnabled:;
- (BOOL)isInputMeteringEnabled;
- (void)setInputMeteringEnabled:;
- (float)outputMeterLevel;
- (float)inputMeterLevel;
- (void)didUpdateBasebandCodec:;
- (void)didServerDie;
- (BOOL)isGKVoiceChat;
- (void)setIsGKVoiceChat:;
- (BOOL)isSpeakerPhoneEnabled;
- (unsigned int)initializeNewCallWithDeviceRole:;
- (unsigned int)initializeNewCallWithDeviceRole:reportingHierarchyToken:;
- (void)warmupForCall;
- (void)setUseViceroyBlobFormat:;
- (void)sendARPLData:toCallID:;
- (id)callMetadataForCallID:;
- (void)setPeerCN:callID:;
- (void)setSessionID:callID:;
- (double)networkQualityForCallID:;
- (BOOL)requiresWifi;
- (void)setRequiresWifi:;
- (void)stopCallID:;
- (void)cancelCallID:;
- (void)remoteCancelledCallID:;
- (void)setCallReport:withReport:;
- (void)processRemoteIPChange:callID:;
- (BOOL)isInputFrequencyMeteringEnabled;
- (void)setInputFrequencyMeteringEnabled:;
- (BOOL)isOutputFrequencyMeteringEnabled;
- (void)setOutputFrequencyMeteringEnabled:;
- (BOOL)getIsAudioPaused:callID:error:;
- (BOOL)getIsVideoPaused:callID:error:;
- (double)localFramerateForCallID:;
- (double)localBitrateForCallID:;
- (double)remoteFramerateForCallID:;
- (double)remoteBitrateForCallID:;
- (int)localFrameHeight;
- (int)localFrameWidth;
- (double)remotePacketLossRateForCallID:;
- (double)localPacketLossRateForCallID:;
- (double)roundTripTimeForCallID:;
- (id)statsForCallID:;
- (void)setEnableSpeakerPhone:;
- (int)natType;
- (BOOL)setPauseAudio:callID:error:;
- (BOOL)setPauseVideo:callID:error:;
- (void)updateCapabilities:forCallID:;
- (void)processRelayRequestResponse:responseDict:didOriginateRequest:;
- (void)processRelayUpdate:updateDict:didOriginateRequest:;
- (void)setConferenceState:forCallID:;
- (void)setConferenceVisualRectangle:forCallID:;
- (void)setPeerProtocolVersion:forCallID:;
- (BOOL)useViceroyBlobFormat;
- (void)NATTypeDictionaryUpdated:;
- (void)triggerInterfaceChange;
- (int)deviceRole;
- (BOOL)onVideoFrame:frameTime:attribute:;
- (void)pushAudioSamples:;
- (void)didSuspendAudioIO:;
- (void)didResumeAudioIO:;
- (void)captureMeshMode:;
- (id)initWithClientPid:;
- (void)pullAudioSamples:;
- (BOOL)canProcessAudio;
- (void)setCanProcessAudio:;
- (void)session:didChangeRemoteScreenAttributes:;
- (BOOL)useCompressedConnectionData;
- (void)setUseCompressedConnectionData:;
- (void)thermalLevelDidChange:;
- (void)setQualityDelegate:;
- (id)qualityDelegate;
- (BOOL)startConnectionWithParticipantID:callID:usingInviteData:isCaller:capabilities:idsSocket:destination:error:;
- (id)inviteDataForParticipantID:callID:remoteInviteData:nonCellularCandidateTimeout:error:;
- (void)setPacketsPerBundle:;
- (int)packetsPerBundle;
- (BOOL)shouldTimeoutPackets;
- (void)setShouldTimeoutPackets:;
- (BOOL)stopVideoSend:error:;
- (void)vcAudioPowerLevelMonitor:isAudioBelowThreshold:;
- (void)moments:shouldProcessRequest:recipientID:;
- (id)newSessionWithDeviceRole:reportingHierarchyToken:;
- (void)cleanupManager;
- (void)sendData:toCallID:encrypted:;
- (void)setupNATObserver;
- (double)packetLossRateForCallID:;
- (void)setChatMode:;
- (void)setIsFocus:;
- (void)setIsUsingSuppression:;
- (void)cleanupQueues;
- (void)inviteDataForParticipantID:callID:remoteInviteData:nonCellularCandidateTimeout:block:queue:caller:;
- (void)connectionBlobForParticipantID:callID:block:queue:caller:;
- (id)connectionBlobForParticipantID:callID:error:;
- (int)natTypeForCallSessions:;
- (void)notifyDelegateOfLocalVariablesChange;
- (BOOL)shouldSendAudioForCallID:;
- (void)setSendAudio:forCallID:;
- (void)setPeerReportingID:sessionID:callID:;
- (void)updateCapabilities:forSession:;
- (BOOL)shouldReinitializeCallWithDuration:forCallID:;
- (void)setConferenceOperatingMode:;
- (int)conferenceOperatingMode;
- (BOOL)startConnectionWithParticipantID:callID:oldCallID:usingInviteData:isCaller:relayResponseDict:didOriginateRelayRequest:capabilities:idsSocket:destination:error:;
- (BOOL)startConnectionWithParticipantID:callID:usingInviteData:isCaller:relayResponseDict:didOriginateRelayRequest:capabilities:idsSocket:destination:error:;
- (void)setUpAudioIO:callID:;
- (int)setupSpatialAudioWithCallID:;
- (void)cleanupSpatialAudioForCallID:;
- (void)setCurrentFocus:;
- (void)updatedMutedPeers:forParticipantID:;
- (void)updatedConnectedPeers:;
- (void)stopAllCalls:;
- (void)setCallReportProtobuf:withProtobufData:forMetricID:;
- (id)remoteFrameSizeForCallID:;
- (void)forceNoICE:;
- (void)setHasMic:;
- (BOOL)hasMic;
- (void)setConferenceVolume:;
- (float)conferenceVolume;
- (void)handleCellTechChange:cellularMaxPktLen:;
- (unsigned char)powerFloatToInt:;
- (float)powerIntToFloat:;
- (int)chatMode;
- (BOOL)isFocus;
- (id)currentFocus;
- (unsigned int)preferredCodec;
- (void)setPreferredCodec:;
- (int)upstreamBandwidth;
- (void)setUpstreamBandwidth:;
- (int)downstreamBandwidth;
- (void)setDownstreamBandwidth:;
- (id)speakingDelegate;
- (void)setSpeakingDelegate:;
- (BOOL)isUsingSuppression;
- (unsigned int)talkingPeersLimit;
- (void)setTalkingPeersLimit:;
- (BOOL)disableVAD;
- (void)setDisableVAD:;
- (BOOL)shouldPrioritizeParticipantIDForSIPInvite;
- (void)setShouldPrioritizeParticipantIDForSIPInvite:;
- (id)conferenceCaptureRule;
- (unsigned int)lastActiveCall;
- (void)setLastActiveCall:;
- (id)vcMoments;
- (id)sessionDict;
- (void)setSessionDict:;
- (BOOL)updateSpeaking:timeStamp:;
- (unsigned int)pruneQuietestPeers:talking:mask:meters:;
- (unsigned int)calculateTalkingMaskAtTimeStamp:;
- (void)calculateMixingArrays:talkingMask:;
- (void)captureAsFocus:;
- (void)captureAsFocusClient:;
- (void)updateAudioTimestampsForSession:withNewSampleTime:hostTime:numSamples:;
- (void)updateMeter:forParticipant:atIndex:;
- (void)updateMeters:;
- (BOOL)recvSamplesForSession:sampleBuffer:;
- (int)pullDecodedAsFocus:;
- (int)pullDecodedAsFocusClient:;
- (int)pullDecodedMeshMode:;
- (int)sipCallbackNotification:callID:msgIn:msgOut:optional:confIndex:;
- (BOOL)matchesCallID:;
- (BOOL)matchesOpenSessionForParticipantID:;
- (unsigned int)callIDForOpenSessionWithParticipantID:;
- (id)openSessionForParticipant:;
- (BOOL)matchesParticipantID:;
- (id)sessionForParticipantID:;
- (BOOL)conferenceMatchesSourceDestinationInfo:;
- (id)sessionForSourceDestinationInfo:;
- (BOOL)hasSessionWaitingForSIPInvite;
- (id)loopbackSessionWaitingForSIPInvite;
- (id)sessionForIncomingParticipantID:;
- (int)stateForCallID:;
- (void)cleanupProc:;
- (void)wrlock;
- (int)tryrdlock;
- (void)rdlock;
- (void)stopCallID:didRemoteCancel:error:;
- (void)cancelCallID:error:;
- (void)cleanupSession:withDelay:;
- (void)defaultCleanupSession:;
- (void)threadSafeCleanupSession:;
- (void)cleanupSession:didRemoteCancel:;
- (BOOL)setPauseAudio:;
- (BOOL)setPauseVideo:;
- (void)markUnfinishedSessions;
- (void)session:withCallID:networkHint:;
- (void)session:withCallID:videoIsDegraded:isRemote:;
- (void)session:localIPChange:withCallID:;
- (void)session:connectionDidChangeWithLocalInterfaceType:remoteInterfaceType:callID:;
- (void)session:didStart:connectionType:localInterfaceType:remoteInterfaceType:error:;
- (void)session:cleanUpWithDelay:error:;
- (void)session:didStopWithError:;
- (void)session:receivedNoPacketsForSeconds:;
- (void)session:remoteMediaStalled:;
- (void)session:packMeters:withLength:;
- (void)session:didChangeVideoRule:;
- (BOOL)session:receivedRemoteFrame:atTime:withScreenAttributes:videoAttributes:isFirstFrame:isVideoPaused:;
- (void)session:didReceiveARPLData:fromCallID:;
- (void)session:didReceiveData:messageType:withCallID:;
- (BOOL)session:startVideoSend:captureRuleWifi:captureRuleCell:interface:isUnpausing:;
- (BOOL)registerForVideoFramesWithDeviceRole:captureRule:isUnpausing:;
- (BOOL)session:startVideoReceive:;
- (BOOL)deregisterForVideoFramesWithDeviceRole:;
- (BOOL)session:stopVideoReceive:isPausing:;
- (BOOL)session:didStopVideoIO:error:;
- (void)session:isSendingAudio:error:;
- (void)session:didPauseAudio:error:;
- (void)session:didPauseVideo:error:;
- (void)remoteAudioDidPause:callID:;
- (void)remoteVideoDidPause:callID:;
- (void)session:initiateRelayRequest:;
- (void)session:sendRelayResponse:;
- (void)session:cancelRelayRequest:;
- (void)didChangeLocalVariablesForSession:;
- (void)session:remoteAudioEnabled:withCallID:;
- (void)session:localAudioEnabled:withCallID:error:;
- (void)session:remoteCallingModeChanged:withCallID:;
- (void)setBWEOptions:UseNewBWEMode:FakeLargeFrameMode:ProbingSenderLog:;
- (int)currentCameraID;
- (void)session:changeVideoRulesToCaptureRule:encodeRule:featureListString:;
- (void)session:startAudioWithFarEndVersionInfo:internalFrameFormat:completionHandler:;
- (void)session:stopAudioWithCompletionHandler:;
- (void)session:setRemoteBasebandCodecType:sampleRate:;
- (id)audioIOFormat;
- (void)session:setMomentsCapabilities:imageType:videoCodec:;
- (unsigned int)momentsCapabilitiesWithNegotiationBlobMomentsSettings_Capabilities:;
- (void)session:didReceiveMomentsRequest:;
- (id)clientCaptureRule;
- (BOOL)initiateResolutionChangeToWidth:height:rate:;
- (void)avConferencePreviewError:;
- (void)avConferenceScreenCaptureError:;
- (void)shouldSendBlackFrame:callID:;
- (void)cameraAvailabilityDidChange:;
- (void)sourceFrameRateDidChange:;
+ (void)terminateProcess:terminateSource:agent:;
@end
