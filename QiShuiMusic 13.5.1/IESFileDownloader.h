@interface IESFileDownloader : NSObject
@property (nonatomic) NSArray extraDownloadQueueList;
@property (nonatomic) NSArray downloadStrategys;
@property (nonatomic) NSMapTable taskOperationMap;
@property (nonatomic) IESEffectDownloadFlowConflictMonitor monitor;
@property (nonatomic) BOOL enableDownloadOptimize;
@property (nonatomic) NSOperationQueue downloadQueue;
@property (nonatomic) <EffectPlatformRequestDelegate> requestDelegate;
- (id)requestDelegate;
- (void)cancelTaskWithKeyIfNeed:;
- (void)configDownloadStratgys;
- (void)configExtraDownloadQueue;
- (id)delegateDownloadFileWithURLs:downloadPath:downloadParameters:downloadQueuePriority:downloadQualityOfService:downloadProgress:completion:;
- (id)delegateDownloadFileWithURLs:downloadPath:downloadProgress:completion:;
- (id)delegateDownloadFileWithURLs:downloadPath:downloadQueuePriority:downloadQualityOfService:downloadProgress:completion:;
- (id)delegateV2DownloadFileWithURLs:downloadPath:taskKey:insertFront:cancelExistDownloading:defaultDownloadQueue:downloadParameters:downloadProgress:completion:;
- (id)delegateV2DownloadFileWithURLs:downloadPath:taskKey:insertFront:cancelExistDownloading:defaultDownloadQueue:downloadProgress:completion:;
- (id)downloadFileWithURLs:downloadPath:downloadProgress:completion:;
- (id)downloadStrategys;
- (BOOL)enableDownloadOptimize;
- (id)extraDownloadQueueList;
- (BOOL)isDownloadTaskFinished:;
- (void)notifyTrackCurrentDownloadingFlowWithBusinessParameters:;
- (void)pauseTaskWithKeyIfNeed:;
- (void)resumeTaskWithKeyIfNeed:insertFront:cancelDownloading:defaultDownloadQueue:downloadProgress:completion:;
- (void)setDownloadStrategys:;
- (void)setEnableDownloadOptimize:;
- (void)setExtraDownloadQueueList:;
- (void)setMaxConcurrentCount:;
- (void)setRequestDelegate:;
- (void)setTaskOperationMap:;
- (BOOL)shouldTaskBePausedWithTaskKey:thresholdSize:;
- (id)taskOperationMap;
- (id)downloadQueue;
- (void)setDownloadQueue:;
- (id)init;
- (void)setMonitor:;
- (void).cxx_destruct;
- (id)monitor;
+ (id)sharedInstance;
@end
