@interface EKReminderStore : NSObject
@property (nonatomic) REMStore remStore;
@property (nonatomic) EKEventStore eventStore;
@property (nonatomic) NSArray sources;
@property (nonatomic) NSArray calendars;
@property (nonatomic) Q hash;
@property (nonatomic) # superclass;
@property (nonatomic) NSString description;
@property (nonatomic) NSString debugDescription;
- (BOOL)saveReminder:error:;
- (void)_loadListsIfNeeded;
- (id)_fetchAndCacheConstraintsForFrozenSource:;
- (id)createNewReminder;
- (id)remindersWithExternalIdentifier:;
- (id)eventStore;
- (void)_loadLists;
- (id)resetBackingAlarmWithBackingAlarm:;
- (id)reminderWithIdentifier:;
- (void)fillInPath:usingParents:;
- (BOOL)removeReminder:error:;
- (id)initWithEventStore:token:;
- (void)_loadAccountsIfNeeded;
- (id)_moveRemindersToNewLists:error:;
- (void)_checkPredicate:;
- (id)frozenAlarmForREMAlarms:;
- (BOOL)saveCalendar:error:;
- (id)calendars;
- (id)fetchRemindersMatchingPredicate:completion:;
- (id)cachedConstraintsForSource:;
- (id)backingCalendarWithIdentifier:;
- (id)predicateForCompletedRemindersWithCompletionDateStarting:ending:calendars:;
- (id)completionBlockForFetchRequestToken:remove:;
- (id)resetBackingLocationWithBackingLocation:;
- (BOOL)removeCalendar:error:;
- (void)_loadAccounts;
- (BOOL)saveObject:withFrozenObject:error:;
- (id)remStore;
- (id)createNewReminderCalendar;
- (void).cxx_destruct;
- (id)newFrozenObjectForReminderObject:withChanges:;
- (void)reset;
- (id)frozenObjectForReminderObject:;
- (id)backingReminderWithIdentifier:;
- (id)predicateForIncompleteRemindersWithDueDateStarting:ending:calendars:;
- (BOOL)_commit:error:;
- (void)remindersChanged;
- (id)sourceWithIdentifier:;
- (id)reminderWithUniqueId:;
- (id)predicateForRemindersInCalendars:;
- (id)sources;
- (id)frozenCalendarFromCalendar:error:;
- (BOOL)isSourceManaged:;
- (id)predicateForCalendarStoreForRemindersInCalendars:;
- (id)defaultCalendarForNewReminders;
- (id)_allLists;
- (void)_reminderCopiedToNewList:;
- (id)calendarWithIdentifier:;
- (id)remindersMatchingPredicate:;
- (id)existingUpdatedObject:;
- (BOOL)commit:;
+ (id)log;
+ (Class)frozenClassForReminderClass:;
+ (id)uniqueIdentifierForREMObject:;
+ (BOOL)isNotFoundError:;
@end
