@interface TLKImageView : TLKView
@property (nonatomic) UIView shadowContainer;
@property (nonatomic) UIImageView imageView;
@property (nonatomic) TLKProminenceView placeholderView;
@property (nonatomic) TLKImage lastTlkImage;
@property (nonatomic) TLKImage tlkImage;
@property (nonatomic) Q prominence;
@property (nonatomic) BOOL useButtonColoring;
@property (nonatomic) BOOL alwaysShowPlaceholderView;
@property (nonatomic) UIFont symbolFont;
@property (nonatomic) q symbolScale;
@property (nonatomic) q symbolWeight;
@property (nonatomic) <TLKImageViewDelegate> delegate;
@property (nonatomic) BOOL disableCornerRounding;
@property (nonatomic) Q alignment;
- (long long)symbolScale;
- (id)placeholderView;
- (id)init;
- (void)setSymbolScale:;
- (void)setAlignment:;
- (void)setProminence:;
- (unsigned long long)prominence;
- (id)intrinsicContentSize;
- (void)tlk_updateForAppearance:;
- (void)setPlaceholderView:;
- (void)layoutSubviews;
- (id)systemLayoutSizeFittingSize:;
- (void)setDelegate:;
- (void)_dynamicUserInterfaceTraitDidChange;
- (void)setSymbolWeight:;
- (id)delegate;
- (void)setTlkImage:;
- (id)sizeThatFits:;
- (void)setAlwaysShowPlaceholderView:;
- (id)tlkImage;
- (void).cxx_destruct;
- (void)didMoveToWindow;
- (id)imageView;
- (long long)symbolWeight;
- (unsigned long long)alignment;
- (void)setImageView:;
- (BOOL)alwaysShowPlaceholderView;
- (id)symbolFont;
- (void)observedPropertiesChanged;
- (void)setUseButtonColoring:;
- (void)setDisableCornerRounding:;
- (BOOL)alignmentIsAspectFill;
- (void)updateWithUIImage:animate:;
- (void)updateSizeAndLayout;
- (void)invalidateIntrinsicContentSizeIfNecessary;
- (id)constrainedSizeForImageSize:fittingSize:;
- (void)setSymbolFont:;
- (void)updateSymbolConfiguration;
- (id)naturalSizeForSize:;
- (void)updateShadow;
- (id)aspectRatioPreservedFrameForSize:;
- (void)applyCornerRoundingStyle:toView:;
- (BOOL)useButtonColoring;
- (BOOL)disableCornerRounding;
- (id)shadowContainer;
- (void)setShadowContainer:;
- (id)lastTlkImage;
- (void)setLastTlkImage:;
+ (id)roundedSizeForSize:;
+ (double)cornerRadiusForSize:roundingStyle:;
+ (unsigned long long)defaultCornerMask;
+ (BOOL)imageIsProbablyOpaque:tlkImage:;
+ (BOOL)checkTransparencyForImageAtCorners:shouldCropToCircle:;
+ (BOOL)hasTransparencyAtPoint:forCGImage:;
@end
