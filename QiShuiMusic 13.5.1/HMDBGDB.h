@interface HMDBGDB : NSObject
@property (nonatomic) FMDatabaseQueue queue;
@property (nonatomic) FMDatabase db;
@property (nonatomic) BOOL inTransaction;
@property (nonatomic) I transactionThread;
@property (nonatomic) NSString rootPath;
@property (nonatomic) q delteErrorCode;
@property (nonatomic) NSMutableDictionary changeBlocks;
@property (nonatomic) NSMutableArray transactionBlocks;
@property (nonatomic) BOOL debug;
@property (nonatomic) NSString sqliteName;
@property (nonatomic) BOOL disableCloseDB;
- (id)bg_valueForKey:;
- (void)addTable:key:complete:;
- (BOOL)bg_deleteValueForKey:;
- (void)bg_enumerateKeysAndObjectsUsingBlock:;
- (id)bg_executeSql:tablename:class:;
- (BOOL)bg_isExistWithTableName:;
- (void)bg_saveOrUpateArray:ignoredKeys:complete:;
- (void)bg_saveOrUpdateWithTableName:class:DictArray:complete:;
- (BOOL)bg_setValue:forKey:;
- (BOOL)bg_updateValue:forKey:;
- (id)changeBlocks;
- (void)clearTable:complete:;
- (void)clearWithObject:complete:;
- (void)copyA:toB:class:keys:complete:;
- (void)copyA:toB:keyDict:complete:;
- (void)copyQueueTable:to:keyDict:append:complete:;
- (void)copyTable:to:keyDict:append:complete:;
- (long long)countForTable:conditions:;
- (long long)countForTable:forKeyPathAndValues:;
- (long long)countForTable:where:;
- (long long)countQueueForTable:conditions:;
- (long long)countQueueForTable:forKeyPathAndValues:;
- (long long)countQueueForTable:where:;
- (void)createTableWithTableName:keys:unionPrimaryKeys:uniqueKeys:complete:;
- (BOOL)deleteObjectWithName:index:;
- (void)deleteQueueWithTableName:conditions:complete:;
- (void)deleteQueueWithTableName:forKeyPathAndValues:complete:;
- (void)deleteWithTableName:conditions:complete:;
- (void)deleteWithTableName:forKeyPathAndValues:complete:;
- (void)deleteWithTableName:where:complete:;
- (long long)delteErrorCode;
- (BOOL)disableCloseDB;
- (void)doChangeWithName:flag:state:;
- (void)dropSafeTable:complete:;
- (void)dropTable:complete:;
- (void)dropWithTableName:complete:;
- (void)executeCheckpoint;
- (void)executeDB:;
- (void)executeTransation:;
- (void)executeTransationBlocks;
- (id)getArray:ignoredKeys:filtModelInfoType:;
- (long long)getKeyMaxForTable:key:db:;
- (void)ifIvarChangeForObject:ignoredKeys:;
- (BOOL)ifNotExistWillCreateTableWithObject:ignoredKeys:;
- (void)insertIntoTableName:Dict:complete:;
- (void)insertIntoTableName:DictArray:complete:;
- (void)insertWithObject:ignoredKeys:complete:;
- (void)insertWithObjects:ignoredKeys:complete:;
- (void)isExistWithTableName:complete:;
- (void)queryArrayWithName:complete:;
- (id)queryArrayWithName:index:;
- (void)queryObjectQueueWithTableName:class:where:complete:;
- (void)queryObjectWithTableName:class:where:complete:;
- (void)queryQueueWithTableName:conditions:complete:;
- (void)queryWithTableName:conditions:complete:;
- (void)queryWithTableName:keys:where:complete:;
- (void)queryWithTableName:where:complete:;
- (void)refreshQueueTable:class:keys:complete:;
- (void)refreshQueueTable:class:keys:keyDict:complete:;
- (void)refreshTable:class:keys:complete:;
- (void)refreshTable:class:keys:keyDict:complete:;
- (BOOL)registerChangeWithName:block:;
- (BOOL)removeChangeWithName:;
- (void)saveArray:name:complete:;
- (void)saveDictionary:complete:;
- (void)saveObject:ignoredKeys:complete:;
- (void)saveObjects:ignoredKeys:complete:;
- (void)setChangeBlocks:;
- (void)setDelteErrorCode:;
- (void)setDisableCloseDB:;
- (void)setSqliteName:;
- (void)setTransactionBlocks:;
- (void)setTransactionThread:;
- (double)sqliteMethodForTable:type:key:where:;
- (double)sqliteMethodQueueForTable:type:key:where:;
- (id)sqliteName;
- (id)transactionBlocks;
- (unsigned int)transactionThread;
- (void)updateObject:checkIvarChanged:propertyName:propertyValue:conditions:complete:;
- (void)updateObject:ignoreKeys:conditions:complete:;
- (void)updateObject:propertyName:propertyValue:conditions:complete:;
- (BOOL)updateObjectWithName:object:index:;
- (void)updateObjects:ignoredKeys:complete:;
- (void)updateQueueWithObject:forKeyPathAndValues:ignoreKeys:complete:;
- (void)updateQueueWithObject:where:ignoreKeys:complete:;
- (void)updateQueueWithTableName:conditions:complete:;
- (void)updateQueueWithTableName:valueDict:conditions:complete:;
- (void)updateSetTableName:class:DictArray:complete:;
- (void)updateSetWithObjects:ignoredKeys:complete:;
- (void)updateWithObject:forKeyPathAndValues:ignoreKeys:complete:;
- (void)updateWithObject:valueDict:conditions:complete:;
- (void)updateWithObject:where:ignoreKeys:complete:;
- (void)updateWithTableName:forKeyPathAndValues:valueDict:complete:;
- (void)updateWithTableName:valueDict:where:complete:;
- (void)vacuumDB;
- (id)rootPath;
- (id)db;
- (id)init;
- (void)setDebug:;
- (void)dealloc;
- (BOOL)debug;
- (void)inTransaction:;
- (void)destroy;
- (void).cxx_destruct;
- (id)initWithPath:;
- (void)setQueue:;
- (void)setDb:;
- (id)queue;
- (void)closeDB;
- (long long)deleteErrorCode;
- (BOOL)inTransaction;
- (void)setInTransaction:;
- (void)setRootPath:;
+ (unsigned int)currentDBUserVersion;
@end
