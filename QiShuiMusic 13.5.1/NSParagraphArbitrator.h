@interface NSParagraphArbitrator : NSObject
@property (nonatomic) NSAttributedString attributedString;
@property (nonatomic) {_NSRange=QQ} paragraphRange;
@property (nonatomic) r^{__CTLine=} paragraphLine;
@property (nonatomic) @? lineWidth;
@property (nonatomic) @? validateLineBreakContext;
@property (nonatomic) Q lineBreakStrategy;
@property (nonatomic) double hyphenationFactor;
@property (nonatomic) q typesetterBehavior;
@property (nonatomic) BOOL textContainerIsSimple;
@property (nonatomic) double textContainerWidth;
@property (nonatomic) {_NSRange=QQ} previousLineRange;
@property (nonatomic) NSString preferredLanguage;
@property (nonatomic) ^{__CFStringTokenizer=} tokenizer;
@property (nonatomic) BOOL mayCompressLines;
- (id)paragraphRange;
- (void)setHyphenationFactor:;
- (double)hyphenationFactor;
- (void)setParagraphLine:;
- (void)setLineBreakStrategy:;
- (void)setLineWidth:;
- (unsigned long long)lineBreakStrategy;
- (id)init;
- (BOOL)prepareBreakIteratorForAttributedString:characterIndex:;
- (id)initWithAttributedString:range:;
- (id)lineWidth;
- (void)dealloc;
- (void)setPreferredLanguage:;
- (id)lineBreakContextBeforeIndex:lineFragmentWidth:range:;
- (id)_firstFitLineBreakContextBeforeIndex:lineFragmentWidth:range:;
- (BOOL)textContainerIsSimple;
- (BOOL)mayCompressLines;
- (void)setValidateLineBreakContext:;
- (double)textContainerWidth;
- (void)setTextContainerIsSimple:;
- (id)_optimalLineBreakContextBeforeIndex:lineFragmentWidth:range:;
- (void)setAttributedString:;
- (BOOL)prepareTokenizerForPreferredLanguage:;
- (double)raggednessWithCharIndexAsLineBreak:inRange:;
- (void)setParagraphRange:;
- (id)attributedString;
- (void)setTypesetterBehavior:;
- (void)setPreviousLineRange:;
- (id)previousLineRange;
- (BOOL)_shouldUseOptimalLayout;
- (id)validateLineBreakContext;
- (void)resetBreaker;
- (unsigned long long)adjustedLineBreakIndexForProposedIndex:;
- (id)tokenizer;
- (long long)typesetterBehavior;
- (void)_computeOptimalLayout;
- (void)reset;
- (void)setTextContainerWidth:;
- (id)preferredLanguage;
- (id)paragraphLine;
+ (id)paragraphArbitratorWithAttributedString:range:;
@end
