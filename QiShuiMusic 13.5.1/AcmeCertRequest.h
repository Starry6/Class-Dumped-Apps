@interface AcmeCertRequest : NSObject
@property (nonatomic) q state;
@property (nonatomic) BOOL logAcmeCSR;
@property (nonatomic) BOOL permitLocalIssuer;
@property (nonatomic) BOOL requireAttestation;
@property (nonatomic) NSObject<OS_dispatch_queue> queue;
@property (nonatomic) NSArray subject;
@property (nonatomic) NSDictionary parameters;
@property (nonatomic) NSDictionary keyParams;
@property (nonatomic) NSArray attestationOids;
@property (nonatomic) NSArray attestationChain;
@property (nonatomic) NSData attestation;
@property (nonatomic) NSData csr;
@property (nonatomic) NSString nonce;
@property (nonatomic) NSString location;
@property (nonatomic) NSString account;
@property (nonatomic) NSString token;
@property (nonatomic) NSString timestamp;
@property (nonatomic) NSArray authorizations;
@property (nonatomic) NSString authorizationURL;
@property (nonatomic) NSString challengeURL;
@property (nonatomic) NSString finalizeOrderURL;
@property (nonatomic) NSString orderURL;
@property (nonatomic) NSString certificateURL;
@property (nonatomic) NSString nextMessageURL;
@property (nonatomic) NSString acmeNewAccountURL;
@property (nonatomic) NSString acmeNewNonceURL;
@property (nonatomic) NSString acmeNewOrderURL;
@property (nonatomic) NSObject<OS_dispatch_queue> xpc_queue;
@property (nonatomic) NSObject<OS_xpc_object> connection;
@property (nonatomic) SecJWSEncoder encoder;
@property (nonatomic) ^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v} publicKey;
@property (nonatomic) ^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v} privateKey;
@property (nonatomic) ^{__SecCertificate=} certificate;
@property (nonatomic) ^{__SecIdentity=} identity;
- (id)account;
- (id)serialNumber;
- (id)authorizationURL;
- (void)setIdentity:;
- (id)privateKey;
- (id)subject;
- (void)setAccount:;
- (id)identity;
- (void)dealloc;
- (void)setSubject:;
- (id)publicKey;
- (void)setPublicKey:;
- (void)setEncoder:;
- (id)token;
- (void)setState:;
- (id)encoder;
- (id)nonce;
- (void)setPrivateKey:;
- (id)location;
- (void)setToken:;
- (id)parameters;
- (void)setTimestamp:;
- (id)certificate;
- (long long)state;
- (void)setLocation:;
- (id)connection;
- (void).cxx_destruct;
- (void)setConnection:;
- (id)timestamp;
- (void)setQueue:;
- (void)setParameters:;
- (id)certificateURL;
- (void)setCertificate:;
- (id)queue;
- (id)identityWithError:;
- (id)attestation;
- (void)setAttestation:;
- (id)createKeyPair;
- (id)initWithSubject:parameters:;
- (id)sanitizeSubject;
- (id)sanitizeParameters;
- (id)createCSR;
- (BOOL)deviceAttestationSupported;
- (id)requestAttestationChainWithError:;
- (id)attestationObjectWithCertificates:;
- (id)createAttestation;
- (id)createCertificate;
- (id)attestationChainPEMRepresentation;
- (int)errorStatusWithHTTPErrorCode:;
- (id)sendRequestToXPCService:response:;
- (id)pollForStatus:until:;
- (id)acmeRequest;
- (id)processReply:;
- (BOOL)valueForBooleanDefault:;
- (id)executeRequest;
- (BOOL)logAcmeCSR;
- (void)setLogAcmeCSR:;
- (BOOL)permitLocalIssuer;
- (void)setPermitLocalIssuer:;
- (BOOL)requireAttestation;
- (void)setRequireAttestation:;
- (id)keyParams;
- (void)setKeyParams:;
- (id)attestationOids;
- (void)setAttestationOids:;
- (id)attestationChain;
- (void)setAttestationChain:;
- (id)csr;
- (void)setCsr:;
- (void)setNonce:;
- (id)authorizations;
- (void)setAuthorizations:;
- (void)setAuthorizationURL:;
- (id)challengeURL;
- (void)setChallengeURL:;
- (id)finalizeOrderURL;
- (void)setFinalizeOrderURL:;
- (id)orderURL;
- (void)setOrderURL:;
- (void)setCertificateURL:;
- (id)nextMessageURL;
- (void)setNextMessageURL:;
- (id)acmeNewAccountURL;
- (void)setAcmeNewAccountURL:;
- (id)acmeNewNonceURL;
- (void)setAcmeNewNonceURL:;
- (id)acmeNewOrderURL;
- (void)setAcmeNewOrderURL:;
- (id)xpc_queue;
- (void)setXpc_queue:;
@end
