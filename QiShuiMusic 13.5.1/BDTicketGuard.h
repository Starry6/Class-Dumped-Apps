@interface BDTicketGuard : NSObject
@property (nonatomic) BDTicketGuardConfig config;
@property (nonatomic) NSString domain;
@property (nonatomic) @? eventTrackControllBlock;
- (id)eventTrackControllBlock;
- (void)setEventTrackControllBlock:;
- (void)setConfig:;
- (void).cxx_destruct;
- (id)config;
- (id)domain;
- (void)setDomain:;
+ (id)decryptHexString:timeout:error:;
+ (void)eventV3:params:;
+ (void)setTeeHasFailed;
+ (id)addHeadersToGetTicketRequest:;
+ (id)addHeadersToGetTicketRequest:ticketName:;
+ (id)addHeadersToGetTicketRequestReeOnly:timeout:;
+ (id)addHeadersToUseTicketRequest:ticket:tsSign:;
+ (id)addHeadersToUseTicketRequest:ticket:tsSign:ticketName:;
+ (id)addHeadersToUseTicketRequestReeOnly:ticket:tsSign:timeout:;
+ (void)addTTNetRequestForPassportAccessTokenFilterBlock;
+ (id)clientCert;
+ (id)decryptBase64String:error:;
+ (id)decryptBase64String:timeout:error:;
+ (id)decryptData:keyType:error:;
+ (id)decryptData:timeout:error:;
+ (id)decryptDataForString:error:;
+ (id)decryptDataForString:timeout:error:;
+ (id)decryptHexString:error:;
+ (BOOL)enableRee;
+ (id)eventTrackControllBlock;
+ (id)handleGetTicketRequest:;
+ (void)handleGetTicketResponse:request:;
+ (id)handleUseTicketRequest:;
+ (BOOL)hasGeneratedForKeyType:;
+ (void)loadCertWithCompletion:;
+ (void)p_loadCertWithCompletion:;
+ (void)p_preloadCert;
+ (void)preloadCert;
+ (id)reeDecryptBase64StringForString:timeout:error:;
+ (id)reeDecryptData:error:;
+ (id)reeGetTicketRequestHeadersWithUrl:needTicketEncrypted:timeout:error:;
+ (id)reeKeyManager;
+ (id)reeUseTicketRequestHeadersWithUrl:tsSignItem:timeout:error:;
+ (id)serverCertSN;
+ (void)setEventTrackControllBlock:;
+ (void)setHasGeneratedForKeyType:;
+ (id)snapshotForRequest:response:;
+ (BOOL)teeHasFailedBefore;
+ (id)teeKeyManager;
+ (void)ticketDidUpdateWithRequset:response:ticketName:ticket:tsSign:;
+ (id)ticketForRequestPath:tag:;
+ (id)ticketGuardIterationVersion;
+ (id)ticketGuardVersion;
+ (void)trackAddGetTicketHeaders:error:startTimestamp:;
+ (void)trackCreateSignatureResult:startTimestamp:;
+ (void)trackDecryptTimeout:keyType:;
+ (void)trackDecryptWithError:startTimestamp:keyType:;
+ (void)trackFullPathWithTicketName:eventType:error:extraInfo:;
+ (void)trackGetCertWithParams:error:startTimestamp:;
+ (void)trackGetClientCSRWithResult:;
+ (void)trackGetPrivateKeySuccessWithTimes:isFromCache:;
+ (void)trackGetPrivateKeyWithError:startTimestamp:keyType:isFromCache:attemptCount:;
+ (void)trackGetPublicKeyWithError:startTimestamp:;
+ (void)trackGetTicketWithRequest:response:startTimestamp:hasLocalClientCert:hasRemoteClientCert:hasServerData:;
+ (void)trackKeyCertNotMatch:;
+ (void)trackPrivateKeyDidChange:;
+ (void)trackSDKLaunch;
+ (void)trackSignClientDataForRequestPath:error:startTimestamp:attemptCount:;
+ (void)trackUseTicketIfFail:response:;
+ (id)tsSignItemsInResponse:;
+ (void)configure:;
+ (id)sharedInstance;
+ (void)start;
+ (id)decryptData:error:;
+ (id)config;
+ (id)domain;
+ (void)setDomain:;
+ (id)sdkVersion;
@end
