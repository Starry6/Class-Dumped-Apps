@interface MPMediaLibrary : NSObject
@property (nonatomic) {shared_ptr<mlcore::DeviceLibrary>=^{DeviceLibrary}^{__shared_weak_count}} _MediaLibrary_coreLibrary;
@property (nonatomic) NSURL protectedContentSupportStorageURL;
@property (nonatomic) NSString _syncValidity;
@property (nonatomic) NSNumber sagaAccountID;
@property (nonatomic) NSDate sagaLastItemPlayDataUploadDate;
@property (nonatomic) NSDate sagaLastPlaylistPlayDataUploadDate;
@property (nonatomic) q sagaDatabaseUserVersion;
@property (nonatomic) NSString storefrontIdentifier;
@property (nonatomic) NSDate sagaLastLibraryUpdateTime;
@property (nonatomic) NSDate sagaLastSubscribedContainersUpdateTime;
@property (nonatomic) q sagaOnDiskDatabaseRevision;
@property (nonatomic) q libraryChangeObservers;
@property (nonatomic) q removalReason;
@property (nonatomic) {os_unfair_lock_s=I} _MLCoreStorageLock;
@property (nonatomic) _MPActiveUserChangeMonitor activeUserChangeMonitor;
@property (nonatomic) @ _MLCoreStorage;
@property (nonatomic) ^{os_unfair_lock_s=I} _MLCoreStorageLockPointer;
@property (nonatomic) ML3MusicLibrary ml3Library;
@property (nonatomic) ICUserIdentity userIdentity;
@property (nonatomic) NSDate lastModifiedDate;
@property (nonatomic) Q hash;
@property (nonatomic) # superclass;
@property (nonatomic) NSString description;
@property (nonatomic) NSString debugDescription;
- (BOOL)isGeniusEnabled;
- (id)databasePath;
- (id)initWithDatabasePath:;
- (BOOL)hasAlbums;
- (BOOL)_handlesSameAccountAs:;
- (BOOL)_checkHasContent:determined:queryHasEntitiesBlock:;
- (id)valueForDatabaseProperty:;
- (void)_performBlockOnLibraryHandlingTheSameAccount:;
- (id)itemWithPersistentID:verifyExistence:;
- (void)clearLocationPropertiesOfItem:;
- (long long)sagaOnDiskDatabaseRevision;
- (BOOL)hasVideoITunesUContent;
- (id)init;
- (void)addStoreItemIDs:referralObject:andAddTracksToCloudLibrary:withCompletion:;
- (void)dealloc;
- (BOOL)hasGenres;
- (BOOL)isValidAssetURL:;
- (BOOL)removePlaylist:;
- (id)uniqueIdentifier;
- (id)itemWithPersistentID:;
- (id)photosMemoriesPlaylist;
- (BOOL)hasMediaOfType:;
- (void)setCloudFilteringType:;
- (id)collectionWithPersistentID:groupingType:;
- (id)lastModifiedDate;
- (long long)removalReason;
- (void)clearSagaCloudAccountID;
- (id)libraryDataProvider;
- (void)_reloadLibraryForRestrictionsChange;
- (BOOL)itemExistsWithPersistentID:;
- (BOOL)hasUbiquitousBookmarkableItems;
- (id)_initWithUserIdentity:;
- (BOOL)hasArtists;
- (BOOL)collectionExistsWithSagaID:groupingType:existentPID:;
- (BOOL)hasVideoPodcasts;
- (void)_reloadLibraryForPathChange;
- (void)enumerateEntityChangesAfterSyncAnchor:usingBlock:;
- (void)disconnect;
- (id)_MediaLibrary_coreLibrary;
- (BOOL)hasHomeVideos;
- (void)setSagaAccountID:;
- (unsigned int)homeSharingDatabaseID;
- (id)activeUserChangeMonitor;
- (id)artworkDataSource;
- (id)_getCachedValueForQueryCritiera:valueCriteriaCache:entitiesForCriteriaCache:didLoadBlocksByQueryCriteria:valueLoadedFromEntitiesArrayBlock:loadValueFromDataProviderBlock:;
- (void)_disconnect;
- (id)entityWithSiriSyncIdentifier:;
- (BOOL)hasAudiobooks;
- (id)preferredSubtitleLanguages;
- (id)connectionAssertionWithIdentifier:;
- (id)entityWithMultiverseIdentifier:;
- (void)_tearDownNotifications;
- (void)_setupNotifications;
- (void)_reloadLibraryForDynamicPropertyChangeWithNotificationInfo:;
- (BOOL)hasCompilations;
- (id)ml3Library;
- (void)_clearPendingDisconnection;
- (id)initWithCoder:;
- (id)entityWithLibraryURL:;
- (id)_initWithLibraryDataProvider:;
- (id)collectionWithPersistentID:groupingType:verifyExistence:;
- (id)sagaLastItemPlayDataUploadDate;
- (id)_MLCoreStorageLockPointer;
- (void)addItemWithProductID:completionHandler:;
- (unsigned long long)hash;
- (id)_itemPersistentIdentifiersForQueryCriteria:;
- (id)errorResolverForItem:;
- (unsigned long long)syncGenerationID;
- (BOOL)writable;
- (id)sagaLastPlaylistPlayDataUploadDate;
- (BOOL)importOriginalArtworkFromImageData:withArtworkToken:artworkType:sourceType:mediaType:;
- (id)_itemsForQueryCriteria:;
- (void)addGlobalPlaylistWithID:andAddToCloudLibrary:completion:;
- (void)setSagaDatabaseUserVersion:;
- (BOOL)_checkHasContent:determined:mediaType:queryHasEntitiesBlock:;
- (BOOL)hasUserPlaylistsContainingAppleMusicContent;
- (unsigned long long)_countOfCollectionsForQueryCriteria:;
- (id)multiverseIdentifierForCollectionWithPersistentID:groupingType:;
- (void)_displayValuesDidChangeNotification:;
- (void)addStoreItem:andAddTracksToCloudLibrary:withCompletion:;
- (void)_removeConnectionAssertion:;
- (void)setStorefrontIdentifier:;
- (BOOL)hasAudioITunesUContent;
- (void)downloadAsset:completionHandler:;
- (void)populateLocationPropertiesOfItem:withPath:assetProtectionType:;
- (id)itemWithStoreID:;
- (BOOL)collectionExistsWithStoreID:groupingType:existentPID:;
- (id)sagaLastLibraryUpdateTime;
- (BOOL)hasGeniusMixes;
- (BOOL)collectionExistsWithCloudUniversalLibraryID:groupingType:existentPID:;
- (void)logDatabaseAccess;
- (BOOL)isHomeSharingLibrary;
- (void)setSyncPlaylistId:;
- (void)encodeWithCoder:;
- (BOOL)hasMusicVideos;
- (void)addPlaylistStoreItemsWithMetadata:completion:;
- (id)userIdentity;
- (unsigned long long)_persistentIDForAssetURL:;
- (id)syncValidity;
- (void)setSagaLastPlaylistPlayDataUploadDate:;
- (void)addLibraryFilterPredicate:;
- (BOOL)hasITunesUContent;
- (void)addNonLibraryOwnedPlaylistWithGlobalID:completion:;
- (id)entityWithPersistentID:entityType:;
- (void)performReadTransactionWithBlock:;
- (BOOL)hasMovieRentals;
- (BOOL)hasAddedToLibraryAppleMusicContent;
- (void)setValues:forProperties:forItemPersistentIDs:;
- (void)getPlaylistWithUUID:creationMetadata:completionHandler:;
- (void)populateLocationPropertiesOfItem:withPath:assetProtectionType:completionBlock:;
- (BOOL)recordPlayEventForAlbumPersistentID:;
- (id)pathForAssetURL:;
- (id)addPlaylistWithName:;
- (BOOL)hasTVShows;
- (BOOL)hasPlaylists;
- (BOOL)hasMedia;
- (void)importArtworkTokenForEntityPersistentID:entityType:artworkToken:artworkType:sourceType:;
- (id)additionalLibraryFilterPredicates;
- (void)setRemovalReason:;
- (long long)playlistGeneration;
- (void)setSagaLastItemPlayDataUploadDate:;
- (void)addNonLibraryOwnedPlaylistsWithGlobalIDs:completion:;
- (BOOL)hasPodcasts;
- (void)_clearCachedEntitiesIncludingResultSets:;
- (void).cxx_destruct;
- (BOOL)hasMovies;
- (BOOL)_hasItemsForQueryCriteria:;
- (float)connectionProgress;
- (id)storefrontIdentifier;
- (void)setSagaLastSubscribedContainersUpdateTime:;
- (void)_setLibraryFilterPredicates;
- (void)beginGeneratingLibraryChangeNotifications;
- (void)connectWithCompletionHandler:;
- (void)_canShowCloudTracksDidChangeNotification:;
- (unsigned long long)_countOfItemsForQueryCriteria:;
- (BOOL)collectionExistsWithName:groupingType:existentPID:;
- (void)_clearCachedContentDataAndResultSets:;
- (void)setSagaLastLibraryUpdateTime:;
- (BOOL)deleteItems:;
- (unsigned long long)currentEntityRevision;
- (id)entityWithSpotlightIdentifier:;
- (id)sagaAccountID;
- (id)playlistWithPersistentID:;
- (void)_didReceiveMemoryWarning:;
- (void)clearSagaLastItemPlayDataUploadDate;
- (void)activeUserChangeDidFinish;
- (id)description;
- (id)_collectionsForQueryCriteria:;
- (void)_reloadLibraryForContentsChangeWithNotificationInfo:;
- (void)addTracksToMyLibrary:;
- (void)setClientIdentity:;
- (unsigned long long)syncPlaylistId;
- (long long)status;
- (BOOL)_hasCollectionsForQueryCriteria:;
- (id)_MLCoreStorage;
- (id)preferredAudioLanguages;
- (BOOL)hasVideos;
- (id)addPlaylistWithName:activeGeniusPlaylist:;
- (id)sagaLastSubscribedContainersUpdateTime;
- (void)_activeUserDidChangeNotification:;
- (id)name;
- (BOOL)hasUserPlaylists;
- (id)localizedSectionHeaderForSectionIndex:;
- (id)_collectionPersistentIdentifiersForQueryCriteria:;
- (id)_addPlaylistWithName:externalVendorIdentifier:;
- (void)clearSagaLastPlaylistPlayDataUploadDate;
- (BOOL)hasSongs;
- (id)playbackHistoryPlaylist;
- (BOOL)hasComposers;
- (void)connectWithAuthenticationData:completionBlock:;
- (BOOL)collectionExistsWithPersistentID:groupingType:;
- (void)_scheduleLibraryChangeNotificationPostingBlock:;
- (id)entityCache;
- (id)initWithClientIdentity:userIdentity:;
- (void)setActiveUserChangeMonitor:;
- (BOOL)isCurrentThreadInTransaction;
- (id)localizedSectionIndexTitles;
- (void)geniusItemsForSeedItem:completion:;
- (BOOL)collectionExistsContainedWithinSyncIDs:groupingType:existentPID:;
- (id)_addPlaylistWithName:activeGeniusPlaylist:externalVendorIdentifier:;
- (BOOL)isDeviceLibrary;
- (void)_reloadLibraryForInvisiblePropertyChangeWithNotificationInfo:;
- (id)decodeItemWithCoder:;
- (BOOL)hasAudibleAudioBooks;
- (long long)sagaDatabaseUserVersion;
- (void)enumerateEntityChangesAfterSyncAnchor:maximumRevisionType:usingBlock:;
- (id)_syncValidity;
- (BOOL)recordPlayEventForPlaylistPersistentID:;
- (id)_MLCoreStorageLock;
- (void)performStoreItemLibraryImport:withCompletion:;
- (BOOL)setValue:forDatabaseProperty:;
- (void)addStoreItemIDs:andAddTracksToCloudLibrary:withCompletion:;
- (unsigned long long)filterAvailableContentGroups:withOptions:;
- (BOOL)deleteDatabaseProperty:;
- (id)multiverseIdentifierForTrackWithPersistentID:;
- (BOOL)isEqual:;
- (BOOL)removeItems:;
- (void)endGeneratingLibraryChangeNotifications;
- (BOOL)playlistExistsWithPersistentID:;
- (void)removeLibraryFilterPredicate:;
- (long long)libraryChangeObservers;
- (BOOL)requiresAuthentication;
- (void)_setMLCoreStorage:;
- (BOOL)collectionExistsContainedWithinPersistentIDs:count:groupingType:existentPID:;
- (BOOL)itemExistsInDatabaseWithPersistentID:;
- (BOOL)performTransactionWithBlock:;
- (void)enumerateEntityChangesAfterSyncAnchor:maximumRevisionType:inUsersLibrary:usingBlock:;
- (id)URLForHomeSharingRequest:;
- (id)protectedContentSupportStorageURL;
- (void)setSagaOnDiskDatabaseRevision:;
- (id)newPlaylistWithPersistentID:;
- (long long)cloudFilteringType;
+ (id)libraryDataProviders;
+ (id)defaultMediaLibrary;
+ (long long)authorizationStatus;
+ (void)setRunLoopForNotifications:;
+ (id)mediaLibraries;
+ (BOOL)supportsSecureCoding;
+ (void)uniqueIdentifierDidChangeForLibraryDataProvider:;
+ (id)deviceMediaLibraryWithUserIdentity:;
+ (id)_mediaLibraries;
+ (void)requestAuthorization:;
+ (void)_postNotificationName:library:userInfo:;
+ (id)_deviceMediaLibraryWithUserIdentity:createIfRequired:;
+ (id)mediaLibraryWithUniqueIdentifier:allowsLoadingFromDisk:;
+ (void)removeLibraryDataProvider:removalReason:;
+ (id)_mediaLibraryWithUniqueIdentifier:userDSID:;
+ (long long)_mediaLibraryAuthorizationStatusFromCloudServiceAuthorizationStatus:;
+ (void)reloadLibraryDataProvider:;
+ (void)reloadDisplayValuesForLibraryDataProvider:;
+ (id)_libraryForDataProvider:;
+ (void)setLibraryServerDisabled:;
+ (id)_sharedCloudServiceStatusMonitor;
+ (id)mediaLibraryWithUniqueIdentifier:;
+ (void)logDatabaseAccess;
+ (id)_libraryDataProviders;
+ (BOOL)isLibraryServerDisabled;
+ (void)_postNotificationName:library:;
+ (void)syncGenerationDidChangeForLibraryDataProvider:;
+ (void)addLibraryDataProvider:;
+ (void)libraryPathDidChangeForDataProvider:;
+ (void)endDiscoveringMediaLibraries;
+ (id)deviceMediaLibrary;
+ (void)reloadInvisiblePropertiesForLibraryDataProvider:;
+ (void)beginDiscoveringMediaLibraries;
+ (void)_endDiscoveringMediaLibrariesIfAllowed;
+ (void)setGlobalPrivacyClientWithAuditToken:;
+ (void)postEntitiesAddedOrRemovedNotificationForLibraryDataProvider:;
+ (void)reloadDynamicPropertiesForLibraryDataProvider:;
+ (void)setDefaultMediaLibrary:;
+ (id)sharedMediaLibraries;
@end
