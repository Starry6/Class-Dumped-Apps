@interface AMapServices : NSObject
@property (nonatomic) q authorizationStatus;
@property (nonatomic) NSString authorizationInfo;
@property (nonatomic) q authorizationStatus;
@property (nonatomic) NSString authorizationInfo;
@property (nonatomic) BOOL analyticsEnabled;
@property (nonatomic) AMapPrivacy privacy;
@property (nonatomic) NSString apiKey;
@property (nonatomic) BOOL enableHTTPS;
@property (nonatomic) BOOL crashReportEnabled;
@property (nonatomic) NSString identifier;
- (void)setEnableHTTPS:;
- (id)authorizationInfo;
- (BOOL)checkPrivacyStatus:component:;
- (BOOL)crashReportEnabled;
- (void)deallocOperation;
- (BOOL)enableHTTPS;
- (void)handleCommonCloudConfigs:withComponent:;
- (void)initAnalytics;
- (id)keyAuthInfoWithServerInfo:;
- (void)onNetworkTypeChanged:;
- (void)onReceiveMemoryWarning:;
- (void)prepareCommonCloldConfigKeys:;
- (void)registerAuthWithComponent:authKeys:forceUpdate:handler:;
- (void)registerAuthWithComponent:authKeys:handler:;
- (void)registerWithComponent:;
- (void)registerWithComponent:authKeys:params:handler:;
- (void)requestAuthWithComponent:authKeys:params:updateCache:handler:;
- (void)sendAuthRequestWithComponent:authKeys:handler:;
- (void)sendAuthRequestWithComponent:authKeys:params:handler:;
- (void)sendInitInfoWithComponent:;
- (void)sendStatisticsWithComponent:handler:;
- (void)setAuthorizationInfo:;
- (void)setCrashReportEnabled:;
- (void)setPrivacy:;
- (void)setUpAnalytics;
- (void)showKeyAuthorizationInfo:responseHeader:forComponent:;
- (void)updatePrivacyAgree:component:;
- (void)updatePrivacyShow:privacyInfo:component:;
- (void)uploadAnalyticsInfo;
- (void)validatingAPIKey;
- (void)setAuthorizationStatus:;
- (id)init;
- (long long)authorizationStatus;
- (void)dealloc;
- (id)identifier;
- (id)privacy;
- (id)initSingleton;
- (void).cxx_destruct;
- (id)mutableCopyWithZone:;
- (BOOL)analyticsEnabled;
- (id)copyWithZone:;
- (void)setAnalyticsEnabled:;
- (void)setApiKey:;
- (id)apiKey;
+ (id)commonHTTPHeadersWithComponent:;
+ (id)commonHTTPHeadersWithComponent:logVersion:withXinfo:;
+ (id)getEncryptedXInfoData20;
+ (id)getEncryptedXInfoData21;
+ (id)patchRequestParams;
+ (id)platInfoWithComponent:;
+ (id)postRequestHTTPHeadersWithComponent:logVersion:;
+ (id)publicPostDataWithComponent:logVersion:;
+ (id)responseHeaderWithRestResponse:response:request:;
+ (id)sharedServices;
@end
