@interface AVVoiceController : NSObject
@property (nonatomic) BOOL bargeInDetectEnabled;
@property (nonatomic) BOOL stopOnBargeInEnabled;
@property (nonatomic) NSString recordRoute;
@property (nonatomic) NSString playbackRoute;
@property (nonatomic) Q lastRecordStartTime;
@property (nonatomic) NSDictionary voiceTriggerInfo;
@property (nonatomic) BOOL synchronousCallbackEnabled;
@property (nonatomic) AVAudioFormat pcmRecordBufferFormat;
@property (nonatomic) BOOL duckOthersOption;
@property (nonatomic) Q numberOfChannels;
@property (nonatomic) NSDictionary recordSettings;
@property (nonatomic) BOOL recording;
@property (nonatomic) <Endpointer> endpointerDelegate;
@property (nonatomic) NSInteger recordEndpointMode;
@property (nonatomic) double recordStartWaitTime;
@property (nonatomic) double recordInterspeechWaitTime;
@property (nonatomic) double recordEndWaitTime;
@property (nonatomic) <AVVoiceControllerRecordDelegate> recordDelegate;
@property (nonatomic) BOOL meteringEnabled;
@property (nonatomic) BOOL stopOnEndpointEnabled;
@property (nonatomic) float alertVolume;
@property (nonatomic) Q alertStartTime;
@property (nonatomic) NSDictionary metrics;
@property (nonatomic) Q hash;
@property (nonatomic) # superclass;
@property (nonatomic) NSString description;
@property (nonatomic) NSString debugDescription;
- (float)peakPowerForChannel:;
- (double)getRecordBufferDuration;
- (void)releaseAudioSession;
- (void)dealloc;
- (id)initWithError:;
- (void)setEndpointerDelegate:;
- (void)setMeteringEnabled:;
- (id)metrics;
- (BOOL)startRecordingWithSettings:error:;
- (void)setSynchronousCallbackEnabled:;
- (void)enableMiniDucking:;
- (void)resetEndpointer;
- (id)recordRoute;
- (void)setDuckOthersOption:;
- (id)voiceTriggerInfo;
- (void)finalize;
- (id)playbackRoute;
- (id)endpointerDelegate;
- (void)updateMeters;
- (BOOL)startListening:;
- (float)averagePowerForChannel:;
- (id)recordSettings;
- (BOOL)startRecording;
- (BOOL)setCurrentContext:error:;
- (id)impl;
- (BOOL)startRecording:;
- (unsigned long long)alertStartTime;
- (BOOL)isRecording;
- (void)stopRecording;
- (void)releaseAudioSession:;
- (BOOL)setRecordBufferDuration:;
- (BOOL)playAlertSoundForType:;
- (BOOL)playRecordStartingAlertAndResetEndpointer;
- (BOOL)prepareRecordWithSettings:error:;
- (void)configureAlertBehavior:;
- (void)prewarmAudioSession;
- (id)initWithContext:error:;
- (void)setRecordDelegate:;
- (BOOL)stopRecordForStream:error:;
- (BOOL)activateAudioSessionForStream:isPrewarm:recordMode:error:;
- (void)setRecordEndWaitTime:;
- (void)setRecordEndpointMode:;
- (void)setRecordStartWaitTime:;
- (id)initVoiceControllerForClient:withError:;
- (BOOL)updateMeterForStream:;
- (BOOL)playAlertSoundForType:overrideMode:;
- (unsigned long long)setContext:streamType:error:;
- (float)getAveragePowerForStream:forChannel:;
- (BOOL)startRecordForStream:error:;
- (void)deactivateAudioSessionForStream:withOptions:error:;
- (BOOL)setAlertSoundFromURL:forType:;
- (BOOL)prepareRecordForStream:error:;
- (BOOL)configureAlertBehaviorForStream:error:;
- (unsigned long long)numberOfChannels;
- (void)sessionSetup_v1v2;
- (void)sessionCleanup_v1v2;
- (void)setSessionNotifications_v1v2:;
- (void)removeSessionNotifications:;
- (void)hardwareConfigChanged:;
- (void)handleInterruption_v1v2:;
- (void)handleRouteChange_v1v2:;
- (void)handleMediaServerDeath_v1v2:;
- (void)handleMediaServerReset_v1v2:;
- (void)handlePluginDidPublishDevice:withDevice:;
- (void)handlePluginDidUnpublishDevice:withDevice:;
- (void)beganRecording_v1v2:status:;
- (void)finishedRecording_v1v2:status:;
- (void)startpointDetected;
- (void)interspeechPointDetected;
- (void)endpointDetected;
- (void)encodeError:;
- (void)alertPlaybackFinishedOfType_v1v2:;
- (void)notifyStreamInvalidated_v1v2:;
- (void)beginRecordInterruptionWithContext_v1v2:;
- (void)endRecordInterruption_v1v2;
- (void)beginAudioSessionActivate_v1v2:;
- (void)endAudioSessionActivate_v1v2:;
- (void)sendRemoteConnectionMessage:;
- (unsigned long long)lastRecordStartTime;
- (BOOL)isBargeInDetectEnabled;
- (void)setBargeInDetectEnabled:;
- (BOOL)isStopOnBargeInEnabled;
- (void)setStopOnBargeInEnabled:;
- (BOOL)isSynchronousCallbackEnabled;
- (id)pcmRecordBufferFormat;
- (BOOL)duckOthersOption;
- (id)mockPluginEndpoint;
- (void)teardownWithError:;
- (void)_teardownWithError:;
- (BOOL)willAcceptContext:;
- (BOOL)IsDeviceAvailableInLocalRoute:error:;
- (int)doStartRecordingAtTime_v1:behavior:;
- (void)setupAlertBehavior_v1:;
- (BOOL)startRecordingAtTime:error:;
- (BOOL)prepareListenWithSettings:error:;
- (BOOL)startListeningWithSettings:error:;
- (BOOL)setRecordMode:error:;
- (BOOL)releaseAudioSessionForListening:;
- (BOOL)releaseAudioSessionForListening:error:;
- (id)recordDelegate;
- (int)recordEndpointMode;
- (double)recordStartWaitTime;
- (double)recordInterspeechWaitTime;
- (void)setRecordInterspeechWaitTime:;
- (double)recordEndWaitTime;
- (void)setAlertVolume:;
- (float)alertVolume;
- (unsigned long long)getAlertStartTime;
- (BOOL)isMeteringEnabled;
- (BOOL)isStopOnEndpointEnabled;
- (void)setStopOnEndpointEnabled:;
- (id)currentRecordDeviceInfo;
- (void)setContext:completion:;
- (unsigned long long)setContext:error:;
- (void)prepareRecordForStream:completion:;
- (void)startRecordWithSettings:completion:alertCompletion:audioCallback:;
- (void)startRecordForStream:completion:;
- (void)configureAlertBehaviorForStream:completion:;
- (void)stopRecordForStream:completion:;
- (long long)getCurrentStreamState:;
- (id)getRecordDeviceInfoForStream:;
- (BOOL)activateAudioSessionForStream:isPrewarm:error:;
- (void)deactivateAudioSessionWithOptions:;
- (void)deactivateAudioSessionForStream:withOptions:completion:;
- (long long)getCurrentSessionState;
- (long long)getCurrentSessionStateForStream:;
- (BOOL)setContextForStream:forStream:error:;
- (void)playAlert:withOverride:completion:;
- (double)getRecordBufferDurationForStream:;
- (id)getRecordSettingsForStream:;
- (BOOL)isMeteringEnabledForStream:;
- (float)getPeakPowerForStream:forChannel:;
- (void)setRecordStatusChangeBlock:;
- (BOOL)enableSmartRoutingConsiderationForStream:enable:error:;
- (BOOL)setRecordModeForStream:recordMode:error:;
- (long long)getRecordModeForStream:;
- (BOOL)setAnnounceCallsEnabledForStream:enable:;
- (void)getInputChannelInfoForStream:completion:;
- (BOOL)setDuckOthersForStream:withSettings:error:;
- (BOOL)isDuckingSupportedOnPickedRouteForStream:error:;
- (void)enableTriangleModeForStream:enable:withCompletion:;
@end
