@interface MPVolumeSlider : UISlider
@property (nonatomic) BOOL _isOffScreen;
@property (nonatomic) {UIEdgeInsets=dddd} hitRectInsets;
@property (nonatomic) UILayoutGuide trackLayoutGuide;
@property (nonatomic) UIView thumbView;
@property (nonatomic) MPVolumeController volumeController;
@property (nonatomic) MPAVRoute route;
@property (nonatomic) MPAVEndpointRoute groupRoute;
@property (nonatomic) MPAVOutputDeviceRoute outputDeviceRoute;
@property (nonatomic) BOOL optimisticState;
@property (nonatomic) float optimisticValue;
@property (nonatomic) q style;
@property (nonatomic) UIImage volumeWarningTrackImage;
@property (nonatomic) NSString volumeControlLabel;
@property (nonatomic) Q hash;
@property (nonatomic) # superclass;
@property (nonatomic) NSString description;
@property (nonatomic) NSString debugDescription;
@property (nonatomic) UIWindowScene windowSceneForVolumeDisplay;
@property (nonatomic) BOOL onScreenForVolumeDisplay;
@property (nonatomic) NSString volumeAudioCategory;
@property (nonatomic) BOOL onScreen;
- (id)volumeControlLabel;
- (void)_logVolumeValueDidChange:;
- (id)groupRoute;
- (void)setOutputDeviceRoute:;
- (void)_resetThumbImageForState:;
- (float)minimumValue;
- (void)setHitRectInsets:;
- (BOOL)isOnScreenForVolumeDisplay;
- (id)trackRectForBounds:;
- (void)volumeController:volumeControlCapabilitiesDidChange:;
- (void)updateVolume;
- (void)dealloc;
- (void)setGroupRoute:;
- (void)setVolumeDataSource:;
- (id)trackLayoutGuide;
- (id)hitRectInsets;
- (BOOL)beginTrackingWithTouch:withEvent:;
- (void)setRoute:;
- (void)setValue:animated:;
- (void)didMoveToSuperview;
- (id)thumbView;
- (void)volumeController:volumeValueDidChange:;
- (id)volumeController;
- (id)volumeWarningTrackImage;
- (void)_layoutForAvailableRoutes;
- (void)_beginBlinkingWarningView;
- (id)outputDeviceRoute;
- (void)layoutSubviews;
- (void)_endBlinkingWarningView;
- (id)thumbRectForBounds:trackRect:value:;
- (void)_endTracking;
- (id)route;
- (void)_setIsOffScreen:;
- (void)setOptimisticValue:;
- (void)_applicationWillEnterForegroundNotification:;
- (id)_routeName;
- (void)_applicationDidEnterBackgroundNotification:;
- (BOOL)pointInside:withEvent:;
- (void)_blinkWarningView;
- (id)createThumbView;
- (void)volumeController:volumeControlAvailableDidChange:;
- (void)_commitVolumeChange;
- (void)_dynamicUserInterfaceTraitDidChange;
- (BOOL)_isOffScreen;
- (void)volumeController:EUVolumeLimitDidChange:;
- (void)setThumbImage:forState:;
- (void)setAlpha:;
- (float)maximumValue;
- (id)windowSceneForVolumeDisplay;
- (id)volumeAudioCategory;
- (void)_layoutVolumeWarningView;
- (void)setVolumeController:;
- (id)_newVolumeWarningView;
- (float)optimisticValue;
- (id)initWithFrame:style:;
- (id)initWithFrame:style:endpointRoute:outputDeviceRoute:;
- (id)hitRect;
- (id)initWithFrame:;
- (void)setUserInteractionEnabled:;
- (void)setVolumeWarningTrackImage:;
- (id)_maxTrackImageForStyle:;
- (void)volumeController:volumeControlLabelDidChange:;
- (void).cxx_destruct;
- (void)didMoveToWindow;
- (void)setHidden:;
- (id)description;
- (void)setOptimisticState:;
- (void)volumeController:EUVolumeLimitEnforcedDidChange:;
- (BOOL)isInOptimisticState;
- (id)_thumbImageForStyle:;
- (void)cancelTrackingWithEvent:;
- (long long)style;
- (void)volumeController:volumeWarningStateDidChange:;
- (id)_minTrackImageForStyle:;
- (void)endTrackingWithTouch:withEvent:;
- (BOOL)continueTrackingWithTouch:withEvent:;
@end
