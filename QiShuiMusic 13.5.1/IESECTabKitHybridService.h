@interface IESECTabKitHybridService : IESECTabKitService
@property (nonatomic) IESECServiceProxy<IESECTabKitMonitorService> monitorService;
@property (nonatomic) IESECServiceProxy<IESECTabKitEventService><IESECTabKitEventSubscriber> eventService;
@property (nonatomic) IESECServiceProxy<IESECTabKitDataService> dataService;
@property (nonatomic) IESECServiceProxy<IESECTabKitAbilityService> abilityService;
@property (nonatomic) Q hash;
@property (nonatomic) # superclass;
@property (nonatomic) NSString description;
@property (nonatomic) NSString debugDescription;
@property (nonatomic) NSArray bridges;
- (id)bridges;
- (void)registerBridge:;
- (void)setDataService:;
- (void)tabElement:visibilityDidChange:;
- (void)tabElement:hybridViewDidScroll:;
- (long long)updateTabModel:bundleUrl:query:;
- (id)abilityService;
- (BOOL)checkBridgeEnvWithCallBack:;
- (void)checkFirstScreenTabDataConsistencyWithBFFModel:;
- (void)configHybridTabElement:withModel:;
- (void)configPuzzleTabElement:withModel:;
- (void)configTabElement:withModel:;
- (id)createTabElementWithModel:;
- (id)createTabElementWithModel:isPreload:;
- (id)dataService;
- (id)formatTabsInfoFromTabsModel:;
- (id)initialDataWithCurrentTab:bottomTab:;
- (id)initialDataWithCurrentTab:bottomTab:extra:;
- (id)monitorService;
- (id)p_createTabElementForModel:;
- (void)registerCommonBridges;
- (void)registerHybridElement:;
- (void)reloadTabElement:withModel:isPreload:;
- (void)requestTabDataWithModel:completion:;
- (id)rootGlobalPropsWithURL:initialData:;
- (id)scrollViewForTabModel:;
- (void)sendEvent:params:;
- (void)setAbilityService:;
- (void)setMonitorService:;
- (BOOL)shouldRequestTabData:;
- (void)tabElement:hybridViewDidFinishLoadWithURL:error:;
- (id)tabElementForTabID:;
- (id)tabElementForTabModel:;
- (void)tabElementHybridViewDidCreate:;
- (id)tabElementKey:;
- (id)updateHybridContainerUrl:extraParams:;
- (void)updateTabModel:withResponse:;
- (id)init;
- (void)setEventService:;
- (void).cxx_destruct;
- (id)eventService;
@end
