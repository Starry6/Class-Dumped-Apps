@interface CLLocationManager : NSObject
@property (nonatomic) BOOL matchInfoEnabled;
@property (nonatomic) BOOL _groundAltitudeEnabled;
@property (nonatomic) BOOL privateMode;
@property (nonatomic) BOOL locationServicesAvailable;
@property (nonatomic) BOOL locationServicesApproved;
@property (nonatomic) double expectedGpsUpdateInterval;
@property (nonatomic) BOOL supportInfo;
@property (nonatomic) ^{__CLClient=} internalClient;
@property (nonatomic) BOOL locationServicesPreferencesDialogEnabled;
@property (nonatomic) BOOL dynamicAccuracyReductionEnabled;
@property (nonatomic) BOOL allowsAlteredAccessoryLocations;
@property (nonatomic) BOOL _limitsPrecision;
@property (nonatomic) NSInteger _authorizationStatus;
@property (nonatomic) BOOL authorizedForPreciseLocation;
@property (nonatomic) NSInteger authorizationStatus;
@property (nonatomic) q accuracyAuthorization;
@property (nonatomic) BOOL authorizedForWidgetUpdates;
@property (nonatomic) <CLLocationManagerDelegate> delegate;
@property (nonatomic) BOOL locationServicesEnabled;
@property (nonatomic) NSString purpose;
@property (nonatomic) q activityType;
@property (nonatomic) double distanceFilter;
@property (nonatomic) double desiredAccuracy;
@property (nonatomic) BOOL pausesLocationUpdatesAutomatically;
@property (nonatomic) BOOL allowsBackgroundLocationUpdates;
@property (nonatomic) BOOL showsBackgroundLocationIndicator;
@property (nonatomic) CLLocation location;
@property (nonatomic) BOOL headingAvailable;
@property (nonatomic) double headingFilter;
@property (nonatomic) NSInteger headingOrientation;
@property (nonatomic) CLHeading heading;
@property (nonatomic) double maximumRegionMonitoringDistance;
@property (nonatomic) NSSet monitoredRegions;
@property (nonatomic) NSSet rangedRegions;
@property (nonatomic) NSSet rangedBeaconConstraints;
- (int)tm_getCurrentStatus;
- (void)tm_hook_location_requestLocation;
- (void)tm_hook_location_requestTemporaryFullAccuracyAuthorizationWithPurposeKey:completion:;
- (void)tm_hook_location_requestWhenInUseAuthorization;
- (void)tm_hook_location_startMonitoringForRegion:;
- (void)tm_hook_location_startMonitoringSignificantLocationChanges;
- (void)tm_hook_location_startUpdatingLocation;
- (void)tm_hook_motion_startUpdatingHeading;
- (void)tspk_motion_startUpdatingHeading;
- (int)getCurrentStatus;
- (void)tspk_location_requestLocation;
- (void)tspk_location_requestTemporaryFullAccuracyAuthorizationWithPurposeKey:completion:;
- (void)tspk_location_requestWhenInUseAuthorization;
- (void)tspk_location_startMonitoringForRegion:;
- (void)tspk_location_startMonitoringSignificantLocationChanges;
- (void)tspk_location_startUpdatingLocation;
- (void)setPausesLocationUpdatesAutomatically:;
- (id)initWithEffectiveBundleIdentifier:bundlePath:websiteIdentifier:delegate:silo:;
- (BOOL)privateMode;
- (long long)activityType;
- (BOOL)supportInfo;
- (void)setPurpose:;
- (void)startMonitoringForRegion:desiredAccuracy:;
- (void)setActivityType:;
- (BOOL)isLocationServicesPreferencesDialogEnabled;
- (id)monitoredRegions;
- (void)requestMicroLocationStaticSourcesStatisticsWithCompletion:;
- (void)setLocationServicesPreferencesDialogEnabled:;
- (void)dismissHeadingCalibrationDisplay;
- (void)requestWhenInUseAuthorizationWithPrompt;
- (id)init;
- (void)requestWhenInUseAuthorization;
- (void)requestTemporaryPreciseLocationAuthorizationWithPurposeKey:completion:;
- (double)distanceFilter;
- (long long)accuracyAuthorization;
- (void)startTranscriptSession;
- (int)authorizationStatus;
- (double)desiredAccuracy;
- (void)dealloc;
- (void)stopRangingToPeers:;
- (id)heading;
- (id)technologiesInUse;
- (id)getRecordingTriggerUUIDAndRequestMicroLocationRecordingScanWithAdditionalInformation:shouldForceRecording:handler:;
- (void)onClientEventRegionError:;
- (id)initWithEffectiveBundle:delegate:onQueue:;
- (BOOL)pausesLocationUpdatesAutomatically;
- (void)endTranscriptSessionWithCompletion:;
- (void)onClientEventPlaceInferenceResult:;
- (void)requestAlwaysAuthorization;
- (void)onClientEventPeerRanging:;
- (void)onClientEventNoLocationWatchdog:;
- (void)onClientEventHeadingCalibration:;
- (BOOL)showsBackgroundLocationIndicator;
- (void)setHeadingOrientation:;
- (void)onDidEnterBackground:;
- (void)onClientEventSignificantLocationVisitStateRequest:;
- (void)resetApps;
- (void)setDelegate:;
- (void)onWillEnterForeground:;
- (id)initWithWebsiteIdentifier:delegate:onQueue:;
- (void)stopRangingFromPeers:;
- (void)donateMicroLocationTruthTagWithTagUUID:forRecordingEventsBetweenDate:andDate:handler:;
- (void)onRangingRequestTimeout;
- (BOOL)isAuthorizedForPreciseLocation;
- (id)purpose;
- (BOOL)_isFusionInfoEnabled;
- (void)exportMicroLocationDatabaseTablesWithCompletion:;
- (void)onClientEventError:;
- (void)onClientEventRangingError:;
- (void)_startMonitoringSignificantLocationChangesOfDistance:withPowerBudget:;
- (void)onClientEventAutopauseStatus:;
- (void)onClientEventRanging:;
- (void)onDidBecomeActive:;
- (void)onClientEventVehicleSpeed:;
- (id)appsUsingLocation;
- (void)setAllowsBackgroundLocationUpdates:;
- (void)startTechStatusUpdates;
- (BOOL)headingAvailable;
- (void)_requestTemporaryFullAccuracyWithUsageDescription:completion:;
- (void)startRangingFromPeers:;
- (void)pauseLocationUpdates:;
- (id)initWithEffectiveBundleIdentifier:delegate:onQueue:;
- (void)startUpdatingVehicleSpeed;
- (void)startMonitoringVisits;
- (void)onClientEventLocation:forceMapMatching:type:;
- (void)allowDeferredLocationUpdatesUntilTraveled:timeout:;
- (double)maximumRegionMonitoringDistance;
- (void)_fetchPlaceInferencesWithFidelityPolicy:handler:;
- (void)startUpdatingVehicleHeading;
- (void)requestTemporaryPreciseLocationAuthorizationWithPurposeKey:;
- (void)startUpdatingHeading;
- (void)requestCurrentMicroLocationWithAdditionalInformation:;
- (void)_startLeechingVisits;
- (id)location;
- (void)purgeMicroLocationSemiSupervisedData;
- (void)startTranscriptSessionWithCompletion:;
- (BOOL)allowsBackgroundLocationUpdates;
- (void)_updateVLLocalizationResult:;
- (id)initWithEffectiveBundle:;
- (void)stopAppStatusUpdates;
- (void)startRangingBeaconsInRegion:;
- (void)startRangingToPeers:intervalSeconds:;
- (id)initWithEffectiveBundlePath:;
- (void)markAsHavingReceivedLocation;
- (void)setMatchInfoEnabled:;
- (void)stopRangingBeaconsSatisfyingConstraint:;
- (void)requestRangingToPeers:timeoutSeconds:;
- (id)_zAxisStatistics;
- (void)endTranscriptSession;
- (void)requestMicroLocationRecordingScanWithAdditionalInformation:;
- (void)callPlaceInferenceHandlerWithResult:error:;
- (id)rangedRegions;
- (void)stopMonitoringForRegion:;
- (void)setShowsBackgroundLocationIndicator:;
- (void)startUpdatingLocationWithPrompt;
- (void)donateMicroLocationTruthTagWithTagUUID:correspondingToTriggerUUID:handler:;
- (void)setDistanceFilter:;
- (void)stopMonitoringSignificantLocationChanges;
- (id)appsUsingLocationWithDetails;
- (void)onClientEventPeerRangingError:;
- (void)_updateARSessionState:;
- (void)requestTemporaryFullAccuracyAuthorizationWithPurposeKey:;
- (id)delegate;
- (void)stopRangingBeaconsInRegion:;
- (id)getMicroLocationInternalVersion;
- (void)startMonitoringSignificantLocationChanges;
- (void)stopUpdatingVehicleSpeed;
- (void)startMonitoringForRegion:;
- (void)onLocationRequestTimeout;
- (double)headingFilter;
- (void)startMonitoringLocationPushesWithCompletion:;
- (BOOL)locationServicesAvailable;
- (BOOL)_isGroundAltitudeEnabled;
- (id)initWithEffectiveBundleIdentifier:;
- (void)setHeadingFilter:;
- (void)stopTechStatusUpdates;
- (void)onClientEventRegionState:;
- (id)initWithEffectiveBundlePath:limitingBundleIdentifier:delegate:onQueue:;
- (void)stopMonitoringVisits;
- (BOOL)locationServicesEnabled;
- (void)onClientEventPeerRangingRequestProcessed:;
- (void)disallowDeferredLocationUpdates;
- (void)onClientEvent:supportInfo:;
- (void)startAppStatusUpdates;
- (double)expectedGpsUpdateInterval;
- (void)resumeLocationUpdates;
- (void)onClientEventAuthStatus:;
- (void)startRangingBeaconsSatisfyingConstraint:;
- (void)onClientEventSignificantLocationVisit:;
- (id)_initWithDelegate:onQueue:;
- (void)onClientEventRegionResponseDelayed:;
- (void)_setFusionInfoEnabled:;
- (id)initWithEffectiveBundle:limitingBundleIdentifier:delegate:onQueue:;
- (void)_stopFetchingContinuousPlaceInferences;
- (id)initWithWebsiteIdentifier:;
- (void)onClientEventInterrupted:;
- (id)initWithEffectiveBundlePath:delegate:onQueue:;
- (void)onClientEventBatch:;
- (void)_requestTemporaryFullAccuracyWithUsageDescription:;
- (void)_fetchEstimatedLocationAtDate:handler:;
- (int)headingOrientation;
- (void)setIsActuallyAWatchKitExtension:;
- (void)onClientEventHeading:;
- (void)_setGroundAltitudeEnabled:;
- (void)requestHistoricalLocationsWithPurposeKey:sampleCount:completionHandler:;
- (BOOL)_limitsPrecision;
- (void)_updateVIOEstimation:;
- (BOOL)locationServicesApproved;
- (void)setSupportInfo:;
- (void)_fetchContinuousPlaceInferencesWithFidelityPolicy:handler:;
- (id)rangedBeaconConstraints;
- (void)setDesiredAccuracy:;
- (void)requestStateForRegion:;
- (void)onClientEventRegion:;
- (void)changeFencesStateMatchingHandoffTags:forDeviceID:completion:;
- (id)internalClient;
- (void)stopMonitoringLocationPushes;
- (void)fetchTranscriptLocationsWithRadius:sampleCount:center:completionHandler:;
- (void)requestLocation;
- (id)initWithIdentifier:;
- (void)setAllowsAlteredAccessoryLocations:;
- (void)stopUpdatingHeading;
- (BOOL)isMatchInfoEnabled;
- (void)requestMicroLocationRecordingScanWithAdditionalInformation:shouldForceRecording:;
- (int)_authorizationStatus;
- (id)_startPlaceInferencesCommonLogic:handler:;
- (BOOL)isDynamicAccuracyReductionEnabled;
- (void)onClientEventVehicleHeading:;
- (void)onClientEventRegionSetupCompleted:;
- (void)setPrivateMode:;
- (void)respondToRangingFromPeers:timeoutSeconds:;
- (void)stopUpdatingVehicleHeading;
- (void)_requestVisitState;
- (BOOL)allowsAlteredAccessoryLocations;
- (void)stopUpdatingLocation;
- (id)_groundAltitudeAtLocation:;
- (void)onClientEventPlaceInferenceError:;
- (void)requestTemporaryFullAccuracyAuthorizationWithPurposeKey:completion:;
- (void)startUpdatingLocation;
- (BOOL)isAuthorizedForWidgetUpdates;
- (id)appLocationInfo;
- (void)onClientEventLocationUnavailable:;
- (void)registerAsLocationClient;
- (void)setDynamicAccuracyReductionEnabled:;
+ (void)tm_hook_location_preload;
+ (void)tm_hook_motion_preload;
+ (void)tspk_motion_preload;
+ (void)tspk_location_preload;
+ (int)authorizationStatus;
+ (id)sharedManager;
+ (BOOL)headingAvailable;
+ (void)updateCorrectiveCompensationChoiceForOutstandingPrompt:;
+ (void)setLocationServicesEnabled:;
+ (id)setAuthorizationPromptMapDisplayEnabled:;
+ (BOOL)locationServicesEnabled;
+ (BOOL)shutdownDaemon;
+ (int)authorizationStatusForBundleIdentifier:;
+ (int)_authorizationStatus;
+ (int)authorizationStatusForBundle:;
+ (BOOL)mapCorrectionAvailable;
+ (void)resetLocationAuthorizationForBundleId:orBundlePath:;
+ (BOOL)locationServicesEnabled:;
+ (BOOL)authorizationPromptMapDisplayEnabled;
+ (BOOL)significantLocationChangeMonitoringAvailable;
+ (BOOL)isMonitoringAvailableForClass:;
+ (BOOL)regionMonitoringAvailable;
+ (BOOL)regionMonitoringEnabled;
+ (BOOL)isRangingAvailable;
+ (BOOL)_checkAndExerciseAuthorizationForBundleID:error:;
+ (BOOL)_checkAndExerciseAuthorizationForBundle:error:;
+ (BOOL)deferredLocationUpdatesAvailable;
+ (BOOL)isPeerRangingAvailable;
+ (id)metadataForHomekitAccessoryControlEventWithUUID:stateString:serviceUUID:serviceType:characteristicType:serviceGroupUUID:source:roomUUID:;
+ (id)metadataForHomekitActionSetEventWithUUID:name:type:clientName:source:homeName:;
+ (id)metadataForMicroLocationTruthTagEventWithTagUUID:;
+ (id)activeLocationClientsWithInfo;
+ (id)userLocationClientsWithInfo;
+ (id)_archivedAuthorizationDecisionsWithError:;
+ (id)_applyArchivedAuthorizationDecisions:;
+ (int)_authorizationStatusForBundleIdentifier:bundlePath:;
+ (int)authorizationStatusForBundlePath:;
+ (void)setAuthorizationStatus:forBundleIdentifier:;
+ (void)setAuthorizationStatus:forBundlePath:;
+ (void)setAuthorizationStatus:forBundle:;
+ (void)setAuthorizationStatusByType:forBundleIdentifier:;
+ (void)setAuthorizationStatusByType:forBundlePath:;
+ (void)setAuthorizationStatusByType:forBundle:;
+ (void)setAuthorizationStatusByType:withCorrectiveCompensation:forBundleIdentifier:;
+ (void)setAuthorizationStatusByType:withCorrectiveCompensation:forBundle:;
+ (void)setIncidentalUseMode:forBundle:;
+ (void)setIncidentalUseMode:forBundleIdentifier:;
+ (void)getIncidentalUseMode:forBundle:;
+ (void)getIncidentalUseMode:forBundleIdentifier:;
+ (void)setLocationButtonUseMode:forBundle:;
+ (void)setLocationButtonUseMode:forBundleIdentifier:;
+ (void)registerCircularInterestZoneWithId:latitue:longitude:radius:serviceMaskOperator:provenanceType:forBundleIdentifier:error:;
+ (void)registerCircularInterestZoneWithId:latitue:longitude:radius:serviceMaskOperator:provenanceType:forBundle:error:;
+ (void)registerPhenolicInterestZoneWithId:phenolicLocation:serviceMaskOperator:provenanceType:forBundleIdentifier:error:;
+ (void)registerPhenolicInterestZoneWithId:phenolicLocation:serviceMaskOperator:provenanceType:forBundle:error:;
+ (void)setAuthorizationStatus:withCorrectiveCompensation:forInterestZoneWithId:registeredForBundleIdentifier:;
+ (void)setAuthorizationStatus:withCorrectiveCompensation:forInterestZoneWithId:registeredForBundle:;
+ (void)setRelevance:forInterestZoneWithId:registeredForBundleIdentifier:error:;
+ (void)setRelevance:forInterestZoneWithId:registeredForBundle:error:;
+ (void)deleteInterestZoneWithId:registeredForBundleIdentifier:error:;
+ (void)deleteInterestZoneWithId:registeredForBundle:error:;
+ (void)setTemporaryAuthorizationGranted:forBundleIdentifier:;
+ (void)setTemporaryAuthorizationGranted:forBundle:;
+ (void)grantTemporaryAuthorizationUsingLocationButtonToClientWithAuditToken:voiceInteractionEnabled:;
+ (void)setBackgroundIndicatorEnabled:forBundleIdentifier:;
+ (void)setBackgroundIndicatorEnabled:forBundle:;
+ (void)setDefaultEffectiveBundleIdentifier:;
+ (void)setDefaultEffectiveBundle:;
+ (BOOL)dumpLogsWithMessage:;
+ (void)dumpDiagnosticFilesWithHandler:;
+ (BOOL)bundleSupported:;
+ (BOOL)advertiseAsBeacon:withPower:;
+ (id)_getClientTransientAuthorizationInfoForBundleId:error:;
+ (id)_getClientTransientAuthorizationInfoForBundlePath:error:;
+ (id)_setClientTransientAuthorizationInfoForBundleId:data:;
+ (id)_setClientTransientAuthorizationInfoForBundlePath:data:;
+ (void)setStatusBarIconEnabled:forLocationEntityClass:;
+ (BOOL)isStatusBarIconEnabledForLocationEntityClass:;
+ (unsigned long long)primaryEntityClassForLocationDictionary:;
+ (unsigned long long)entityClassesForLocationDictionary:;
+ (BOOL)isLocationActiveForLocationDictionary:;
+ (unsigned long long)activeLocationServiceTypesForLocationDictionary:;
+ (id)dateLocationLastUsedForLocationDictionary:;
+ (BOOL)hasUsedBackgroundLocationServices:;
+ (BOOL)isEntityAuthorizedForLocationDictionary:;
+ (unsigned long long)entityAuthorizationForLocationDictionary:;
+ (unsigned long long)allowableAuthorizationForLocationDictionary:;
+ (BOOL)correctiveCompensationStatusForLocationDictionary:;
+ (unsigned long long)incidentalUseModeForLocationDictionary:;
+ (id)interestZonesIdentifierListForLocationDictionary:;
+ (id)interestZoneDictionaryIdentifiedById:forLocationDictionary:;
+ (BOOL)isInterestZoneReleventForLocationDictionary:;
+ (void)setEntityAuthorized:forLocationDictionary:;
+ (void)setEntityAuthorization:forLocationDictionary:;
+ (void)setEntityAuthorization:withCorrectiveCompensation:forLocationDictionary:;
+ (void)setEntityAuthorization:withCorrectiveCompensationType:forLocationDictionary:;
+ (BOOL)backgroundIndicatorEnabledForLocationDictionary:;
+ (void)setBackgroundIndicatorEnabled:forLocationDictionary:;
@end
