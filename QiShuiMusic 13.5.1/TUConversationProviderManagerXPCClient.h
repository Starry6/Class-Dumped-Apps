@interface TUConversationProviderManagerXPCClient : NSObject
@property (nonatomic) {os_unfair_lock_s=I} accessorLock;
@property (nonatomic) NSObject<OS_dispatch_queue> queue;
@property (nonatomic) NSXPCConnection xpcConnection;
@property (nonatomic) BOOL hasRequestedInitialState;
@property (nonatomic) BOOL hasInitialState;
@property (nonatomic) NSInteger shouldConnectToken;
@property (nonatomic) BOOL shouldConnectToHost;
@property (nonatomic) Q hash;
@property (nonatomic) # superclass;
@property (nonatomic) NSString description;
@property (nonatomic) NSString debugDescription;
- (void)registerForCallbacksForProvider:completionHandler:;
- (void)registerWithCompletionHandler:;
- (id)init;
- (void)setShouldConnectToken:;
- (void)dealloc;
- (id)accessorLock;
- (void)doesHandle:correspondToConversationProvider:completionHandler:;
- (void)_requestInitialStateWithCompletionHandler:;
- (BOOL)hasRequestedInitialState;
- (id)synchronousServerWithErrorHandler:;
- (BOOL)hasInitialState;
- (void)_invokeCompletionHandler:;
- (void)generatePseudonymHandleForConversationProvider:expiryDuration:URI:completionHandler:;
- (int)shouldConnectToken;
- (void)setShouldConnectToHost:;
- (void)setHasRequestedInitialState:;
- (void)setXpcConnection:;
- (BOOL)shouldConnectToHost;
- (void)revokePseudonymHandle:forConversationProvider:completionHandler:;
- (void)_requestInitialStateIfNecessary;
- (void)renewPseudonymHandle:forConversationProvider:expirationDate:completionHandler:;
- (id)updateConversationProviders:;
- (void)setHasInitialState:;
- (id)asynchronousServerWithErrorHandler:;
- (id)xpcConnection;
- (void).cxx_destruct;
- (void)registerConversationProvider:completionHandler:;
- (id)queue;
- (void)invalidate;
- (void)conversationProviderForIdentifier:completionHandler:;
+ (id)conversationProviderManagerAllowedClasses;
+ (void)setSynchronousServer:;
+ (void)setAsynchronousServer:;
+ (id)conversationProviderManagerServerXPCInterface;
+ (id)conversationProviderManagerClientXPCInterface;
+ (id)asynchronousServer;
+ (id)synchronousServer;
@end
