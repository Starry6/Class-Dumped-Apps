@interface APURLConnectionOperation : NSOperation
@property (nonatomic) s state;
@property (nonatomic) BOOL cancelled;
@property (nonatomic) NSRecursiveLock lock;
@property (nonatomic) NSURLConnection connection;
@property (nonatomic) NSURLRequest request;
@property (nonatomic) NSURLResponse response;
@property (nonatomic) NSError error;
@property (nonatomic) NSData responseData;
@property (nonatomic) NSString responseString;
@property (nonatomic) Q responseStringEncoding;
@property (nonatomic) q totalBytesRead;
@property (nonatomic) Q backgroundTaskIdentifier;
@property (nonatomic) @? uploadProgress;
@property (nonatomic) @? downloadProgress;
@property (nonatomic) @? authenticationChallenge;
@property (nonatomic) @? cacheResponse;
@property (nonatomic) @? redirectResponse;
@property (nonatomic) NSSet runLoopModes;
@property (nonatomic) BOOL allowsInvalidSSLCertificate;
@property (nonatomic) BOOL shouldUseCredentialStorage;
@property (nonatomic) NSURLCredential credential;
@property (nonatomic) NSInteger SSLPinningMode;
@property (nonatomic) NSInputStream inputStream;
@property (nonatomic) NSOutputStream outputStream;
@property (nonatomic) NSDictionary userInfo;
@property (nonatomic) Q hash;
@property (nonatomic) # superclass;
@property (nonatomic) NSString description;
@property (nonatomic) NSString debugDescription;
- (void)setAllowsInvalidSSLCertificate:;
- (int)SSLPinningMode;
- (BOOL)allowsInvalidSSLCertificate;
- (unsigned long long)responseStringEncoding;
- (void)setResponseStringEncoding:;
- (void)setSSLPinningMode:;
- (void)setShouldExecuteAsBackgroundTaskWithExpirationHandler:;
- (void)setShouldUseCredentialStorage:;
- (BOOL)shouldUseCredentialStorage;
- (id)downloadProgress;
- (id)inputStream;
- (void)setResponseData:;
- (id)initWithRequest:;
- (void)setDownloadProgress:;
- (void)setCancelled:;
- (void)cancel;
- (void)dealloc;
- (id)userInfo;
- (BOOL)isCancelled;
- (void)setState:;
- (void)start;
- (BOOL)isConcurrent;
- (void)setError:;
- (void)setCompletionBlock:;
- (void)finish;
- (id)responseData;
- (BOOL)isReady;
- (BOOL)isExecuting;
- (id)error;
- (id)initWithCoder:;
- (id)request;
- (BOOL)isPaused;
- (id)credential;
- (id)lock;
- (void)setInputStream:;
- (void)resume;
- (void)encodeWithCoder:;
- (BOOL)isFinished;
- (void)setOutputStream:;
- (short)state;
- (void)connection:didReceiveData:;
- (id)response;
- (void)setUserInfo:;
- (id)connection;
- (void).cxx_destruct;
- (void)setConnection:;
- (void)connection:didReceiveResponse:;
- (void)connection:willSendRequestForAuthenticationChallenge:;
- (id)outputStream;
- (id)description;
- (void)setRequest:;
- (void)pause;
- (void)setResponse:;
- (void)connection:didSendBodyData:totalBytesWritten:totalBytesExpectedToWrite:;
- (void)connectionDidFinishLoading:;
- (void)setLock:;
- (void)setUploadProgressBlock:;
- (void)connection:didFailWithError:;
- (id)copyWithZone:;
- (void)setRunLoopModes:;
- (id)runLoopModes;
- (void)setTotalBytesRead:;
- (id)authenticationChallenge;
- (id)connection:willSendRequest:redirectResponse:;
- (id)connection:willCacheResponse:;
- (BOOL)connectionShouldUseCredentialStorage:;
- (id)connection:needNewBodyStream:;
- (unsigned long long)backgroundTaskIdentifier;
- (void)setCredential:;
- (id)cacheResponse;
- (void)setCacheResponse:;
- (void)setBackgroundTaskIdentifier:;
- (void)cancelConnection;
- (void)setDownloadProgressBlock:;
- (id)uploadProgress;
- (id)redirectResponse;
- (void)setRedirectResponse:;
- (id)responseString;
- (long long)totalBytesRead;
- (void)operationDidStart;
- (void)setCacheResponseBlock:;
- (void)setRedirectResponseBlock:;
- (void)setResponseString:;
- (void)setUploadProgress:;
- (void)setAuthenticationChallenge:;
- (void)setWillSendRequestForAuthenticationChallengeBlock:;
+ (id)pinnedPublicKeys;
+ (id)pinnedCertificates;
+ (void)networkRequestThreadEntryPoint:;
+ (id)networkRequestThread;
@end
