@interface BDUGSyncManager : NSObject
@property (nonatomic) BDUGSyncConfig config;
@property (nonatomic) NSObject<OS_dispatch_queue> serialQueue;
@property (nonatomic) NSMutableDictionary observers;
@property (nonatomic) NSMutableDictionary interceptors;
@property (nonatomic) BOOL isSync;
@property (nonatomic) BOOL isDBUpgradeSuccess;
@property (nonatomic) BOOL previousSyncByHttp;
@property (nonatomic) NSMutableSet historyFileStorage;
@property (nonatomic) BOOL pollByFrontier;
@property (nonatomic) BOOL pollServerReceived;
@property (nonatomic) Q hash;
@property (nonatomic) # superclass;
@property (nonatomic) NSString description;
@property (nonatomic) NSString debugDescription;
- (void)_startSimulateFourBusinessID;
- (void)addInterceptor:forBusiness:;
- (void)addObserverForBusinessID:usingBlock:;
- (id)getHistorySynclogWithConfig:;
- (id)historyFileStorage;
- (id)interceptors;
- (BOOL)isDBUpgradeSuccess;
- (BOOL)pollByFrontier;
- (BOOL)pollServerReceived;
- (BOOL)previousSyncByHttp;
- (void)registerWithConfig:;
- (void)removeObserverForBusinessID:;
- (void)setInterceptors:;
- (void)setIsDBUpgradeSuccess:;
- (void)setIsSync:;
- (void)setPollByFrontier:;
- (void)setPollServerReceived:;
- (void)setPreviousSyncByHttp:;
- (void)subscribeTopic:businessID:completion:;
- (void)trySyncDataFromServer;
- (void)unsubscribeTopic:businessID:completion:;
- (void)uploadSyncData:forBusinessID:;
- (void)uploadSyncData:forBusinessID:forMessageID:;
- (void)uploadSyncDatas:forBusinessID:;
- (id)init;
- (void)setConfig:;
- (id)serialQueue;
- (void).cxx_destruct;
- (void)setObservers:;
- (BOOL)isSync;
- (id)config;
- (id)observers;
- (void)setSerialQueue:;
- (void)_startSync;
+ (void)triggerAccountStatusEventWithStatus:;
+ (id)sharedManager;
@end
