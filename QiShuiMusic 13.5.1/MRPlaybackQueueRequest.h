@interface MRPlaybackQueueRequest : NSObject
@property (nonatomic) q location;
@property (nonatomic) BOOL hasLocation;
@property (nonatomic) q length;
@property (nonatomic) BOOL hasLength;
@property (nonatomic) BOOL hasIncludeMetadata;
@property (nonatomic) BOOL hasArtworkWidth;
@property (nonatomic) BOOL hasArtworkHeight;
@property (nonatomic) BOOL hasIncludeLyrics;
@property (nonatomic) BOOL hasIncludeSections;
@property (nonatomic) BOOL hasIncludeInfo;
@property (nonatomic) BOOL hasIncludeLanguageOptions;
@property (nonatomic) BOOL hasIncludeParticipants;
@property (nonatomic) NSArray contentItemIdentifiers;
@property (nonatomic) BOOL legacyNowPlayingInfoRequest;
@property (nonatomic) BOOL hasLegacyNowPlayingInfoRequest;
@property (nonatomic) I cachingPolicy;
@property (nonatomic) BOOL hasCachingPolicy;
@property (nonatomic) _MRPlaybackQueueRequestProtobuf protobuf;
@property (nonatomic) MRPlayerPath playerPath;
@property (nonatomic) BOOL rangeContainsNowPlayingItem;
@property (nonatomic) BOOL shouldRequestItem;
@property (nonatomic) BOOL shouldRequestItemNotConsideringMetadata;
@property (nonatomic) BOOL containsNonDefaultAssets;
@property (nonatomic) MRPlaybackQueueRequest skeleton;
@property (nonatomic) NSData data;
@property (nonatomic) BOOL includeMetadata;
@property (nonatomic) BOOL includeLyrics;
@property (nonatomic) BOOL includeSections;
@property (nonatomic) BOOL includeInfo;
@property (nonatomic) BOOL includeLanguageOptions;
@property (nonatomic) BOOL includeParticipants;
@property (nonatomic) double artworkWidth;
@property (nonatomic) double artworkHeight;
@property (nonatomic) NSString requestIdentifier;
@property (nonatomic) NSString label;
@property (nonatomic) NSDictionary dictionaryRepresentation;
@property (nonatomic) {_NSRange=QQ} range;
@property (nonatomic) BOOL hasRange;
@property (nonatomic) BOOL includeArtwork;
- (id)initWithIdentifiers:;
- (id)skeleton;
- (id)requestIdentifier;
- (void)setHasLocation:;
- (void)setHasIncludeLyrics:;
- (BOOL)hasArtworkWidth;
- (BOOL)hasLocation;
- (unsigned int)cachingPolicy;
- (BOOL)includeLanguageOptions;
- (id)initWithProtobuf:;
- (void)setHasIncludeMetadata:;
- (void)setArtworkWidth:;
- (id)data;
- (BOOL)includeLyrics;
- (id)protobuf;
- (id)contentItemIdentifiers;
- (void)setHasIncludeSections:;
- (void)setIncludeMetadata:;
- (double)artworkHeight;
- (BOOL)hasArtworkHeight;
- (void)setHasIncludeParticipants:;
- (void)setHasArtworkHeight:;
- (void)setLabel:;
- (void)setHasIncludeInfo:;
- (void)setArtworkHeight:;
- (id)initWithCoder:;
- (BOOL)includeInfo;
- (id)label;
- (id)initWithRange:;
- (BOOL)includeArtwork;
- (long long)location;
- (void)setPlayerPath:;
- (BOOL)hasLength;
- (void)setContentItemIdentifiers:;
- (void)mergeFrom:;
- (id)range;
- (void)encodeWithCoder:;
- (void)setHasLength:;
- (BOOL)hasIncludeSections;
- (void)setRequestIdentifier:;
- (void)setIncludeInfo:;
- (void)setHasIncludeLanguageOptions:;
- (BOOL)includeMetadata;
- (void)setIncludeSections:;
- (BOOL)hasIncludeMetadata;
- (id)initWithData:;
- (void)setLocation:;
- (BOOL)hasIncludeParticipants;
- (void)setIncludeLanguageOptions:;
- (void).cxx_destruct;
- (BOOL)hasIncludeLyrics;
- (void)setHasArtworkWidth:;
- (void)setIncludeLyrics:;
- (BOOL)isLegacyNowPlayingInfoRequest;
- (id)description;
- (BOOL)hasCachingPolicy;
- (void)setIncludeParticipants:;
- (long long)length;
- (id)playerPath;
- (void)setCachingPolicy:;
- (id)dictionaryRepresentation;
- (BOOL)includeParticipants;
- (BOOL)match:;
- (void)setLength:;
- (BOOL)includeSections;
- (double)artworkWidth;
- (void)setHasCachingPolicy:;
- (BOOL)isEqual:;
- (BOOL)hasIncludeLanguageOptions;
- (id)copyWithZone:;
- (BOOL)hasIncludeInfo;
- (id)initWithIdentifiers:range:;
- (id)initFromTransactionName:;
- (BOOL)hasRange;
- (BOOL)rangeContainsNowPlayingItem;
- (BOOL)shouldRequestItem;
- (BOOL)shouldRequestItemNotConsideringMetadata;
- (BOOL)containsNonDefaultAssets;
- (void)setLegacyNowPlayingInfoRequest:;
- (id)requestByRemovingArtwork;
- (BOOL)exactMatch:;
- (void)performRequestForDestination:completion:;
- (BOOL)hasLegacyNowPlayingInfoRequest;
- (void)setHasLegacyNowPlayingInfoRequest:;
+ (double)defaultArtwortHeight;
+ (BOOL)supportsSecureCoding;
+ (id)requestWithCurrentState:range:;
+ (id)defaultPlaybackQueueRequestWithRange:;
+ (double)defaultArtworkWidth;
+ (id)defaultPlaybackQueueRequest;
@end
