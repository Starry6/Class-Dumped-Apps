@interface CHRecognizer : NSObject
@property (nonatomic) CHRecognitionInsight recordedInsightFromLastRequest;
@property (nonatomic) ^{CHNeuralNetwork=^?B^{CHCodeMap}IIII@@{CGRect={CGPoint=dd}{CGSize=dd}}} engine;
@property (nonatomic) ^{CHNeuralNetwork=^?B^{CHCodeMap}IIII@@{CGRect={CGPoint=dd}{CGSize=dd}}} freeformEngine;
@property (nonatomic) CHCTCRecognitionModel recognitionModel;
@property (nonatomic) CVNLPCTCTextDecoder textDecoder;
@property (nonatomic) NSObject<OS_dispatch_queue> recognitionQueue;
@property (nonatomic) ^v radicalClusterFST;
@property (nonatomic) ^v formatGrammarFST;
@property (nonatomic) CHPatternNetwork patternFST;
@property (nonatomic) CHPatternNetwork postProcessingFST;
@property (nonatomic) CHRecognizerConfiguration configuration;
@property (nonatomic) ^v wordLanguageModel;
@property (nonatomic) ^v lmVocabulary;
@property (nonatomic) ^v characterLanguageModel;
@property (nonatomic) ^v cjkStaticLexicon;
@property (nonatomic) ^v cjkDynamicLexicon;
@property (nonatomic) ^{_LXLexicon=} staticLexicon;
@property (nonatomic) ^{_LXLexicon=} secondaryStaticLexicon;
@property (nonatomic) ^{_LXLexicon=} phraseLexicon;
@property (nonatomic) ^{_LXLexicon=} customLexicon;
@property (nonatomic) ^{_LXLexicon=} customPhraseLexicon;
@property (nonatomic) NSDictionary textReplacements;
@property (nonatomic) NSMutableDictionary textReplacementLowercasedKeyMapping;
@property (nonatomic) CHSpellChecker spellChecker;
@property (nonatomic) CHMecabraWrapper mecabraWrapper;
@property (nonatomic) CHStringOVSChecker ovsStringChecker;
@property (nonatomic) NSURL learningDictionaryURL;
@property (nonatomic) CHDrawing cachedDrawing;
@property (nonatomic) {map<std::set<long> cachedResults;
@property (nonatomic) {map<unsigned int characterIDMap;
@property (nonatomic) ^{VariantMap=^i^i^ii^iQ} transliterationVariantMap;
@property (nonatomic) ^^v icuTransliterator;
@property (nonatomic) Q lastCharacterSegmentCount;
@property (nonatomic) NSMutableIndexSet lastCharacterSegmentIndexes;
@property (nonatomic) CHPostProcessingManager postProcessor;
@property (nonatomic) CHPostProcessingManager mergedResultPostProcessor;
@property (nonatomic) NSInteger recognitionMode;
@property (nonatomic) NSLocale locale;
@property (nonatomic) NSInteger recognitionType;
@property (nonatomic) BOOL enableCachingIfAvailable;
@property (nonatomic) BOOL enableGen2ModelIfAvailable;
@property (nonatomic) BOOL enableGen2CharacterLMIfAvailable;
@property (nonatomic) NSInteger contentType;
@property (nonatomic) NSInteger autoCapitalizationMode;
@property (nonatomic) NSInteger autoCorrectionMode;
@property (nonatomic) Q maxRecognitionResultCount;
@property (nonatomic) NSCharacterSet activeCharacterSet;
@property (nonatomic) {CGSize=dd} minimumDrawingSize;
@property (nonatomic) Q hash;
@property (nonatomic) # superclass;
@property (nonatomic) NSString description;
@property (nonatomic) NSString debugDescription;
- (void)setContentType:;
- (void)setLocale:;
- (id)engine;
- (void)setEngine:;
- (void)dealloc;
- (int)contentType;
- (id)locale;
- (id)phraseLexicon;
- (id)cachedResults;
- (id)configuration;
- (void).cxx_destruct;
- (void)setCachedResults:;
- (id).cxx_construct;
- (void)_setConfiguration:;
- (id)supportedCharacterSet;
- (id)recognitionQueue;
- (void)setRecognitionQueue:;
- (id)characterLanguageModel;
- (id)wordLanguageModel;
- (id)spellChecker;
- (id)initWithMode:locale:;
- (void)setMaxRecognitionResultCount:;
- (int)autoCapitalizationMode;
- (int)autoCorrectionMode;
- (void)setMinimumDrawingSize:;
- (id)recognitionResultsForDrawing:options:;
- (void)setActiveCharacterSet:;
- (id)characterSetForStrings:;
- (void)setAutoCapitalizationMode:;
- (void)setAutoCorrectionMode:;
- (BOOL)enableCachingIfAvailable;
- (void)setEnableCachingIfAvailable:;
- (BOOL)enableGen2ModelIfAvailable;
- (void)setEnableGen2ModelIfAvailable:;
- (BOOL)enableGen2CharacterLMIfAvailable;
- (void)setEnableGen2CharacterLMIfAvailable:;
- (int)recognitionMode;
- (unsigned long long)maxRecognitionResultCount;
- (id)activeCharacterSet;
- (id)minimumDrawingSize;
- (id)initWithType:mode:locale:learningDictionaryURL:;
- (id)initWithMode:locale:recognizerOptions:;
- (id)initWithMode:locale:learningDictionaryURL:;
- (id)initWithMode:locale:learningDictionaryURL:recognizerOptions:;
- (id)initWithType:mode:learningDictionaryURL:;
- (id)strokeIndexesForLastCharacter;
- (id)_defaultPunctuationStringsOutputScores:maxCandidateCount:;
- (id)_defaultLegacyPunctuationResultsWithStrokeCount:;
- (id)_defaultPunctuationResultWithStrokeCount:;
- (BOOL)isOVSString:;
- (id)transliterationVariantsForString:;
- (id)_transliterationVariantsForString:;
- (id)_alternativeInterpretationsForString:;
- (void)_loadMecabraIfNeeded;
- (void)_reloadEngineAndResources;
- (void)_initializePostProcessor;
- (void)_initializeMergedResultPostProcessor;
- (void)_initializeTextDecoder;
- (BOOL)_isLocaleSupported:;
- (void)_unloadEngineAndResources;
- (void)_safelyUnloadEngineAndResources;
- (void)updateAddressBookLexicon:;
- (void)updateUserDictionaryLexicon:;
- (void)updateMecabraWithRegionalOTAAssets:nonRegionalOTAAssets:;
- (void)setCustomLexicon:customVocabulary:;
- (void)setCustomPhraseLexicon:;
- (void)setTextReplacements:;
- (void)_updateWordLanguageModel:;
- (void)candidateAccepted:;
- (id)completionsForCandidate:prefix:option:;
- (id)completionsForCandidate:candidateContext:prefix:option:;
- (id)whitelistMecabraRareCharacters;
- (BOOL)isRareChineseEntry:;
- (id)mecabraRareWordIndexes:wordRanges:;
- (id)initWithType:mode:;
- (id)initWithType:mode:locale:;
- (id)sketchDescriptionForCode:;
- (id)sketchCodeForDescription:;
- (id)supportedStrings;
- (void)endpointsForDrawing:startLocation:endLocation:;
- (id)starCandidateResultForDrawing:candidate:;
- (id)triangleCandidateResultForDrawing:candidate:;
- (id)chatBubbleCandidateResultForDrawing:candidate:rejectionResult:;
- (id)ellipseCandidateResultForDrawing:candidate:;
- (id)pentagonCandidateResultForDrawing:candidate:;
- (id)rectangleCandidateResultForDrawing:candidate:;
- (id)outlineArrowCandidateResultForDrawing:candidate:;
- (id)lineCandidateResultForDrawing:candidate:;
- (id)manhattanLineCandidateResultForDrawing:candidate:rejectionResult:;
- (id)cloudCandidateResultForDrawing:candidate:rejectionResult:;
- (id)heartCandidateResultForDrawing:candidate:;
- (id)recognitionResultsForSketchDrawing:options:;
- (void)_removeOVSResults:withHistory:;
- (id)recognitionResultsForSingleCharacterDrawing:segmentGroup:options:history:;
- (id)_textReplacementResultForLegacyRecognitionResult:;
- (double)_calculateJointWordLMScoreForTokenPath:tokenizedResult:history:historyLength:pathTranscription:;
- (double)_calculateJointWordLMScoreForString:wordRanges:wordIDs:patternEntries:history:historyLength:;
- (id)_tokensUsingLMTokenizerForString:wordRanges:nonWordPatterns:outTokenIDs:;
- (id)bestPathsFromNetwork:pathCount:staticLexiconCursor:customLexiconCursor:patternCursor:history:activeHistoryRange:mecabraIDs:segmentGroup:precedingSpaceBehavior:effectiveContentType:totalStrokeCount:totalSubstrokeCount:;
- (BOOL)_updateResults:string:score:recognitionScore:lexicalEntry:patternEntry:isInappropriateWord:wordID:wordStrokeSet:;
- (id)tokenizedTextResultForRomanLatticePaths:history:activeHistoryRange:startNode:segmentGroup:;
- (id)tokenizedTextResultForChineseLatticePaths:maximumPathCount:network:mecabraIDs:startNode:endNode:segmentGroup:;
- (id)_addAlternativeCandidatesForTokenizedResult:;
- (id)tokenizedTextResultForRomanSingleWordLatticePaths:history:activeHistoryRange:startNode:segmentGroup:;
- (void)_adjustResultsForConfusableCharacters:;
- (void)_filterNonHumanFriendlyCandidates:;
- (id)_createNetworkTruncatedPrefixStringUsingPrefix:fullHistoryStringLength:hasLexiconCursor:prefixStringLength:hasComplexChars:activeHistoryRange:;
- (void)_cachingWithMatchingStrokeRange:drawing:;
- (id)_sortedIndexesForSegmentGroup:drawing:;
- (id)_recognitionResultsForMultipleCharacterDrawing:segmentGroup:options:shouldCancel:;
- (id)_textResultWithLexiconExpansionFromCandidateNetwork:history:prefix:activeHistoryRange:rootStaticCursor:rootCustomCursor:rootPatternCursor:segmentGroup:maxRecognitionResultCount:precedingSpaceBehavior:shouldPerformNoSpaceRecognition:totalStrokeCount:totalSubstrokeCount:shouldCancel:;
- (id)_textResultWithNetworkComposeFromCandidateNetwork:segmentGroup:drawing:maxRecognitionResultCount:history:totalStrokeCount:totalSubstrokeCount:;
- (long long)_classifyEdgeDrawingsFromContexts:allEdges:segmentationNetwork:candidateNetwork:cachedEdgeSet:completeDrawing:allowSmallerFinalBatch:shouldCancel:;
- (id)_createCandidateNetworkFromSegmentationNetwork:segmentGroup:drawing:boundsAtNode:matchingStrokeRange:sortedSegmentIndexes:shouldCancel:;
- (id)_computeLocalFrameWithLeftBounds:rightBounds:;
- (double)_candidateLatticePruningThresholdForEdgeType:;
- (void)_addEdgesFromCandidates:toEdges:referenceEdge:network:consumedSegmentCount:numSubstrokes:;
- (id)_stringForCode:;
- (unsigned long long)_mininmumPathCount;
- (id)_tokenFromLegacyResult:wordIndex:strokeSet:substrokeCount:;
- (double)_lmRescoringWeightForPath:;
- (id)bestTranscriptionPathsForTokenizedResult:scores:history:;
- (void)_calculateBestTranscriptionPaths:scores:fromTokenizedResult:pathCount:history:skipLMRescoring:;
- (id)_contextTokenIDsFromHistory:maxCharacterLength:maxTokenCount:;
- (id)_resolvedStrokeIndexes:segmentGroup:segmentOffset:substrokeCount:;
- (id)_tokenizedTextResultFromResults:segmentGroup:offsetSegment:decodedStrokeSets:spaceBehavior:;
- (id)_resultUsingNextGenerationPipelineWithDrawing:options:;
- (id)recognitionEngineCachingKey;
- (id)_tokenizedTextResultFromTextDecodingResult:options:strokeEndings:drawing:firstTokenHasPrecedingSpacePreference:;
- (id)_fallbackStructuredResultForDrawing:string:score:firstTokenHasPrecedingSpacePreference:;
- (id)_resultUsingSegmentAndDecodePipelineWithDrawing:insight:options:shouldCancel:;
- (id)_tokenizedTextRecognitionResultForDrawing:options:shouldCancel:;
- (id)_tokenizedTextRecognitionResultForDrawing:writingStatistics:options:shouldCancel:;
- (id)_postprocessingMergedRecognitionResult:options:;
- (id)_changeableColumnCountUpdatedResult:options:;
- (BOOL)_shouldReturnDefaultResultsForDrawing:;
- (id)textRecognitionResultForDrawing:options:shouldCancel:;
- (id)textRecognitionResultForDrawing:options:writingStatistics:shouldCancel:;
- (id)recognitionResultsForDrawing:options:shouldCancel:;
- (id)_legacyTextRecognitionResultsForDrawing:options:shouldCancel:;
- (void)_refineCandidates:withAllowedCandidateCodes:;
- (void)_refineChineseCharacterCandidates:drawing:;
- (void)_adjustCandidatesForChinesePunctuation:segmentDrawing:completeDrawing:;
- (void)_penalizeCandidatesForRomanPunctuation:punctuationStrokeCount:;
- (void)_adjustCandidatesForRomanPunctuation:segmentDrawing:;
- (void)_adjustCandidatesForConfusableCharacters:;
- (id)_applySentenceTransliterationCandidates:codesLen:codesMax:;
- (void)_applyTransliterationAndSyntheticCandidates:;
- (unsigned int)_tokenIDForUNKCharacterString:;
- (void)_rescoreCandidatesWithLanguageModel:history:;
- (id)_historyStringFromRecognizerOptions:;
- (id)_textAfterFromRecognizerOptions:;
- (long long)_precedingSpaceBehaviorFromRecognizerOptions:;
- (id)_initialContextRectFromRecognizerOptions:;
- (id)_drawingAnchorPointFromRecognizerOptions:;
- (id)_minSizeForReliableRescalingFromRecognizerOptions:;
- (id)_inferenceCacheFromRecognizerOptions:;
- (id)_activationMatrixFromInferenceCache:forDrawing:outStrokeEndings:;
- (unsigned long long)_effectiveMaxRecognitionResultCount;
- (void)setRecognitionType:;
- (void)setRecognitionMode:;
- (void)_setupRecognitionInsightRecording;
- (int)recognitionType;
- (id)freeformEngine;
- (void)setFreeformEngine:;
- (id)recognitionModel;
- (void)setRecognitionModel:;
- (id)textDecoder;
- (void)setTextDecoder:;
- (id)radicalClusterFST;
- (void)setRadicalClusterFST:;
- (id)formatGrammarFST;
- (void)setFormatGrammarFST:;
- (id)patternFST;
- (void)setPatternFST:;
- (id)postProcessingFST;
- (void)setPostProcessingFST:;
- (void)setWordLanguageModel:;
- (id)lmVocabulary;
- (void)setLmVocabulary:;
- (void)setCharacterLanguageModel:;
- (id)cjkStaticLexicon;
- (void)setCjkStaticLexicon:;
- (id)cjkDynamicLexicon;
- (void)setCjkDynamicLexicon:;
- (id)staticLexicon;
- (void)setStaticLexicon:;
- (id)secondaryStaticLexicon;
- (void)setSecondaryStaticLexicon:;
- (void)setPhraseLexicon:;
- (id)customLexicon;
- (void)setCustomLexicon:;
- (id)customPhraseLexicon;
- (id)textReplacements;
- (id)textReplacementLowercasedKeyMapping;
- (void)setTextReplacementLowercasedKeyMapping:;
- (void)setSpellChecker:;
- (id)mecabraWrapper;
- (void)setMecabraWrapper:;
- (id)ovsStringChecker;
- (void)setOvsStringChecker:;
- (id)learningDictionaryURL;
- (void)setLearningDictionaryURL:;
- (id)cachedDrawing;
- (void)setCachedDrawing:;
- (id)characterIDMap;
- (void)setCharacterIDMap:;
- (id)transliterationVariantMap;
- (void)setTransliterationVariantMap:;
- (id)icuTransliterator;
- (void)setIcuTransliterator:;
- (unsigned long long)lastCharacterSegmentCount;
- (void)setLastCharacterSegmentCount:;
- (id)lastCharacterSegmentIndexes;
- (void)setLastCharacterSegmentIndexes:;
- (id)postProcessor;
- (void)setPostProcessor:;
- (id)mergedResultPostProcessor;
- (void)setMergedResultPostProcessor:;
- (void)recordInsightWithRequest:;
- (id)recordedInsightFromLastRequest;
+ (BOOL)isLocaleSupported:withMode:;
+ (void)_updatePrecedingAndTrailingSeparatorsForTopCandidate:history:textAfter:locale:outTrailingSeparator:inFirstTokenHasPrecedingSpace:outFirstTokenHasPrecedingSpace:;
@end
