@interface BDUGLuckyServiceManager : NSObject
@property (nonatomic) BOOL deadlockFixSwitch;
@property (nonatomic) NSDictionary abTestSettings;
@property (nonatomic) NSMutableDictionary protocolToClassMap;
@property (nonatomic) NSMutableDictionary protocolToObjectMap;
@property (nonatomic) NSRecursiveLock recLock;
@property (nonatomic) NSMutableSet protocolClassCalledSet;
@property (nonatomic) <BDUGHostSettingsProtocol> hostSettingsDataProvider;
@property (nonatomic) <BDUGLuckyDebugProtocol> debugDataProvider;
- (id)recLock;
- (id)__getLuckyGeckoAccessKeyWithAppSettingsKey:;
- (BOOL)__isDegradationSchemeForProtocol:;
- (BOOL)_bindClass:toProtocol:supportRebind:;
- (id)_buildProtocolToABClassMap;
- (BOOL)_checkClassSelector:withProtocol:assert:;
- (BOOL)_checkSelector:withProtocol:assert:;
- (void)_configABTestSettings:;
- (id)_getABModules;
- (Class)_getClassWithProtocol:;
- (id)_getObjectWithClass:;
- (id)_getObjectWithProtocol:;
- (id)_getProtocolNamesForCls:;
- (void)_registerServiceWithClass:;
- (void)_triggerSetupIfNeededWithProtocolName:protocol:;
- (id)abTestSettings;
- (id)abTestSettings;
- (BOOL)deadlockFixSwitch;
- (id)debugDataProvider;
- (id)defaultAccessKey;
- (id)getGeckoDataSubSubKey;
- (id)getLuckyCatGeckoAccessKey;
- (id)getLuckyDogGeckoAccessKey;
- (id)getLuckyGeckoAccessKey;
- (id)getObjectWithKey:subKey:subSubKey:;
- (id)hostSettingsDataProvider;
- (id)hostSettingsDataProvider;
- (id)protocolClassCalledSet;
- (id)protocolToClassMap;
- (id)protocolToObjectMap;
- (void)registerABTestService;
- (void)registerAllService;
- (void)registerSwiftService:;
- (void)setAbTestSettings:;
- (void)setAbTestSettings:;
- (void)setDeadlockFixSwitch:;
- (void)setDebugDataProvider:;
- (void)setHostSettingsDataProvider:;
- (void)setProtocolClassCalledSet:;
- (void)setProtocolToClassMap:;
- (void)setProtocolToObjectMap:;
- (void)setRecLock:;
- (id)init;
- (void).cxx_destruct;
+ (BOOL)isDegradationSchemeForProtocol:;
+ (id)_bdug_service_BDUGLuckyServiceSwiftManager200;
+ (BOOL)_bindClass:toProtocol:;
+ (BOOL)_bindClass:toProtocol:supportRebind:;
+ (BOOL)_checkClassSelector:withProtocol:assert:;
+ (BOOL)_checkSelector:withProtocol:assert:;
+ (void)_configABTestSettings:;
+ (Class)_getClassWithProtocol:;
+ (id)_getObjectWithProtocol:;
+ (id)_getProtocolesForCls:;
+ (BOOL)_isClassEnableRebind:;
+ (BOOL)_isDegradationSchemeForProtocol:;
+ (void)_registerCustomsizedService:;
+ (void)_registerDefaultSercice:;
+ (BOOL)bindClass:toProtocol:;
+ (BOOL)checkClassSelector:withProtocol:assert:;
+ (BOOL)checkSelector:withProtocol:assert:;
+ (void)collectBDUGService;
+ (void)configABTestSettings:;
+ (Class)getClassWithProtocol:;
+ (id)getObjectWithProtocol:;
+ (id)getServiceList;
+ (void)registerCustomsizedService:;
+ (void)registerDefaultSercice:;
+ (id)sharedInstance;
@end
