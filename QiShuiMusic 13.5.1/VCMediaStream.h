@interface VCMediaStream : VCObject
@property (nonatomic) q streamToken;
@property (nonatomic) NSInteger state;
@property (nonatomic) <VCMediaStreamDelegate> delegate;
@property (nonatomic) <VCMomentsCollectorDelegate> momentsCollectorDelegate;
@property (nonatomic) I localSSRC;
@property (nonatomic) <VCMediaStreamNotification> notificationDelegate;
@property (nonatomic) <RTCPReportProvider> rtcpReportProvider;
@property (nonatomic) double rtcpHeartbeatLeeway;
@property (nonatomic) double lastReceivedRTPPacketTime;
@property (nonatomic) double lastReceivedRTCPPacketTime;
@property (nonatomic) AVCBasebandCongestionDetector basebandCongestionDetector;
@property (nonatomic) NSInteger operatingMode;
@property (nonatomic) ^{tagVCMediaQueue=} mediaQueue;
@property (nonatomic) VCMediaStreamTransport defaultTransport;
@property (nonatomic) NSArray transportArray;
@property (nonatomic) VCMediaStreamConfig defaultStreamConfig;
@property (nonatomic) VCMediaStreamConfig oneToOneStreamConfig;
@property (nonatomic) BOOL isSendingMedia;
@property (nonatomic) AVCRateControlFeedbackController feedbackController;
@property (nonatomic) ^v mediaControlInfoGenerator;
@property (nonatomic) I mediaControlInfoGeneratorType;
@property (nonatomic) VCNetworkFeedbackController networkFeedbackController;
@property (nonatomic) NSArray compoundStreamIDs;
@property (nonatomic) Q hash;
@property (nonatomic) # superclass;
@property (nonatomic) NSString description;
@property (nonatomic) NSString debugDescription;
- (void)setNotificationDelegate:;
- (id)init;
- (id)notificationDelegate;
- (void)dealloc;
- (void)startWithCompletionHandler:;
- (void)setState:;
- (id)start;
- (id)setPause:;
- (void)setDelegate:;
- (id)stop;
- (void)unlock;
- (void)lock;
- (int)state;
- (id)delegate;
- (id)mediaQueue;
- (int)operatingMode;
- (void)setOperatingMode:;
- (long long)streamToken;
- (id)feedbackController;
- (void)setRtpTimeOutEnabled:;
- (void)setRtcpSendInterval:;
- (void)setRtcpTimeOutEnabled:;
- (void)setRtpTimeOutInterval:;
- (void)setRtcpEnabled:;
- (void)setRtcpTimeOutInterval:;
- (id)defaultTransport;
- (id)basebandCongestionDetector;
- (void)setBasebandCongestionDetector:;
- (id)supportedPayloads;
- (void)createNWMonitor;
- (void)destroyNWMonitor;
- (void)onCallIDChanged;
- (BOOL)onConfigureStreamWithConfiguration:error:;
- (void)onStartWithCompletionHandler:;
- (void)onStopWithCompletionHandler:;
- (void)onPauseWithCompletionHandler:;
- (void)onResumeWithCompletionHandler:;
- (void)onSendRTCPPacket;
- (void)onRTPTimeout;
- (void)onRTCPTimeout;
- (double)lastReceivedRTPPacketTime;
- (double)lastReceivedRTCPPacketTime;
- (double)rtcpHeartbeatLeeway;
- (void)handleActiveConnectionChange:;
- (id)initWithTransportSessionID:;
- (id)initWithTransportSessionID:localSSRC:;
- (id)setLocalParticipantInfo:networkSockets:withError:;
- (BOOL)generateReceptionReportList:reportCount:;
- (void)setStreamDirection:;
- (void)willExitState:newState:;
- (void)didEnterState:oldState:;
- (BOOL)shouldUseNWConnectionBackingSocket;
- (BOOL)shouldReportNetworkInterfaceType;
- (void)setStreamIDs:repairStreamIDs:;
- (void)collectRxChannelMetrics:interval:;
- (void)collectRxChannelMetrics:;
- (void)collectTxChannelMetrics:;
- (void)setMediaQueue:;
- (id)networkFeedbackController;
- (void)setNetworkFeedbackController:;
- (unsigned int)getRTCPReportNTPTimeMiddle32ForReportId:;
- (unsigned int)getExtendedSequenceNumberForSequenceNumber:;
- (BOOL)handleEncryptionInfoChange:;
- (void)resetDecryptionTimeout;
- (void)didEncryptionKeyRollTimeout;
- (unsigned int)localSSRC;
- (id)mediaControlInfoGenerator;
- (BOOL)setStreamConfig:withError:;
- (id)setupRTPWithIDSDestination:error:;
- (id)setupRTPWithSocketDictionary:error:;
- (long long)streamDirection;
- (void)setDecryptionTimeOutEnabled:;
- (void)setDecryptionTimeOutInterval:;
- (id)copyDelegate;
- (id)momentsCollectorDelegate;
- (void)setMomentsCollectorDelegate:;
- (id)defaultStreamConfig;
- (id)oneToOneStreamConfig;
- (BOOL)isSendingMedia;
- (void)decryptionStatusChanged:;
- (BOOL)initializeTransportSetupInfoWithTransportSession:;
- (void)handleTransportSessionEvent:info:;
- (BOOL)initializeTransportSessionWithSocketDictionary:error:;
- (void)initializeTransportSetupInfoWithSocketDictionary:;
- (void)initializeTransportSetupInfoWithRTPSocket:RTCPSocket:;
- (void)cleanupNWConnection:;
- (BOOL)initializeTransportSessionWithRTPNWConnectionID:rtcpNWConnectionID:error:;
- (id)setupRTPWithNWConnection:error:;
- (void)dupNWConnectionBackingSocket:;
- (BOOL)setupNWConnectionWithID:;
- (void)setupCallbacksWithNWConnectionMonitor:;
- (id)setupRTPWithLocalParticipantInfo:error:;
- (id)setupRTPForIDS;
- (BOOL)initializeTransportSessionWithIDSDestination:error:;
- (BOOL)initializeTransportSetupInfoWithIDSDestination:error:;
- (id)setupRTPWithIPInfo:error:;
- (void)reportTransportInfo;
- (void)collectChannelSequenceMetrics:;
- (void)setupMediaStream;
- (char *)streamStateToString:;
- (id)createRTPHandleWithStreamConfig:payloadType:localSSRC:;
- (id)createTransportWithStreamConfig:ssrc:;
- (void)unregisterStatistics;
- (int)registerStatisticsHandler:statisticType:;
- (void)registerStatistics:;
- (void)initializeWRMUsingRtpHandle:;
- (void)unregisterWRMCallback;
- (BOOL)shouldStopReportingTimer;
- (void)registerMediaControlInfoGeneratorWithConfigs:;
- (id)getMediaStreamConfigForControlInfoGenerator:;
- (void)createLocalMediaControlInfoGeneratorWithType:version:;
- (void)registerCallbacksForMediaControlInfoGenerator:forDirection:options:;
- (void)unregisterMediaControlInfoGenerator;
- (BOOL)updateRemoteAddressWithConfig:error:;
- (void)handleStartDidSucceed:withError:;
- (void)notifyDelegateDidReceiveRTCPPackets:;
- (BOOL)startMediaTransportsWithError:;
- (void)stopMediaTransports;
- (void)stopInternalWithHandler:;
- (id)getInvalidParamErrorForSetPause:didSucceed:;
- (void)setPause:withCompletionHandler:;
- (void)sendControlPacketWithParameters:;
- (BOOL)isRTPTimeoutEnabled;
- (BOOL)isRTCPTimeoutEnabled;
- (BOOL)isDecryptionTimeoutEnabled;
- (BOOL)isRTCPSendEnabled;
- (void)processRTPTimeoutSettingChange;
- (void)processRTCPTimeoutSettingChange;
- (void)processDecryptionTimeoutSettingChange;
- (id)rtcpReportProvider;
- (void)setRtcpReportProvider:;
- (void)resetRTCPSendHeartbeatTimer:;
- (void)rtcpSendHeartbeat;
- (void)startRTCPSendHeartbeat;
- (void)stopRTCPSendHeartbeat;
- (void)resetTimeoutHeartbeatTimer:;
- (void)resetTimeoutHeartbeatWithRTPTimeout:rtcpTimeout:decryptionTimeout:currentTime:;
- (double)computeNextTimoutWithEnabledTime:timeoutInterval:lastReceivedPacketTime:currentTime:lastTimeoutReportTime:;
- (void)checkRTPPacketTimeoutAgainstTime:lastReceivedPacketTime:;
- (void)checkRTCPPacketTimeoutAgainstTime:lastReceivedPacketTime:;
- (void)checkDecryptionTimeoutAgainstTime:decryptionErrorStartTime:;
- (void)checkDecryptionTimeoutForMKMRecoveryAgainstTime:decryptionErrorStartTime:;
- (void)checkForDecryptionTimeout;
- (void)timeoutHeartbeat;
- (void)startTimeoutHeartbeat;
- (void)stopTimeoutHeartbeat;
- (int)handleMediaCallbackNotification:inData:outData:;
- (unsigned int)mediaControlInfoGeneratorType;
- (id)transportArray;
- (id)compoundStreamIDs;
- (void)setCompoundStreamIDs:;
+ (BOOL)isSameSRTPKey:newKey:;
@end
