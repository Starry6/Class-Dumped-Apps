@interface PLLibraryScope : PLShare
@property (nonatomic) s scopeSyncingState;
@property (nonatomic) s previewState;
@property (nonatomic) NSData rulesData;
@property (nonatomic) s participantCloudUpdateState;
@property (nonatomic) s autoSharePolicy;
@property (nonatomic) s exitState;
@property (nonatomic) s exitType;
@property (nonatomic) S exitSource;
@property (nonatomic) s cloudLocalState;
@property (nonatomic) NSDate lastParticipantAssetTrashNotificationDate;
@property (nonatomic) NSDate lastParticipantAssetTrashNotificationViewedDate;
@property (nonatomic) NSInteger cloudPhotoCount;
@property (nonatomic) NSInteger cloudVideoCount;
@property (nonatomic) NSInteger cloudItemCount;
@property (nonatomic) NSInteger countOfAssetsAddedByCameraSmartSharing;
@property (nonatomic) NSSet libraryScopeAssets;
@property (nonatomic) @ localID;
@property (nonatomic) Q hash;
@property (nonatomic) # superclass;
@property (nonatomic) NSString description;
@property (nonatomic) NSString debugDescription;
@property (nonatomic) s cloudDeleteState;
@property (nonatomic) q cloudDeletionType;
@property (nonatomic) NSString cloudUUIDForDeletion;
- (BOOL)isSyncableChange;
- (void)didSave;
- (void)willSave;
- (void)prepareForDeletion;
- (id)cplFullRecord;
- (void)removeParticipantsWithParticipantUUIDs:fromLibraryScopeWithIdentifier:retentionPolicy:exitSource:completionHandler:;
- (BOOL)supportsCloudUpload;
- (id)localID;
- (BOOL)incrementallyDeleteAndSaveWithError:;
- (BOOL)libraryScopeIsActive;
- (void)setScopeSyncingState:;
- (void)acceptWithCompletionHandler:;
- (BOOL)_libraryScopeWasCreatedInLocalOnlyMode;
- (void)_verifyCurrentUserParticipantExists;
- (BOOL)shouldEnableRulesChangeTracker;
- (void)_insertOwnedParticipantInLibrary:unitTestMode:;
- (void)startTrackingParticipantAssetTrashStateIfNeeded;
- (void)stopTrackingParticipantAssetTrashedStateIfNeeded;
- (void)userViewedAssetTrashNotificationWithManagedObjectContext:;
- (id)cplScopeChange;
- (id)_cplShare;
- (void)publishWithCompletionHandler:;
- (id)activateScopeWithCompletionHandler:;
- (void)deactivateScopeWithCompletionHandler:;
- (id)markOnboardingPreviewAssetsByProcessingRulesWithCompletionHandler:;
- (void)_confirmAllRemainingOnboardingPreviewAssetsWithProgress:photoLibrary:;
- (BOOL)confirmAllRemainingOnboardingPreviewAssetsWithProgress:databaseContext:withError:;
- (void)startExitWithRetentionPolicy:exitSource:completionHandler:;
- (void)updateRulesDataWithCloudSyncableRulesData:;
- (id)cloudSyncableRulesData;
- (BOOL)updatePeopleRulesForTombstonePersonUUID:replaceWithPersonUUID:;
- (BOOL)updatePeopleRulesForAllTombstonedPersons;
+ (id)entityName;
+ (id)_nearestDateSetToHour:;
+ (id)compoundPredicateForMarkingOnboardingPreviewAssetsWithRulePredicate:;
+ (BOOL)libraryScopeScopeIdentifierWasCreatedInLocalOnlyMode:;
+ (id)_shareEverythingInternalQuery;
+ (void)informRapportToAddShareParticipantUUIDs:photoLibrary:;
+ (id)localOnlySharedSyncScopeIdentifierPrefix;
+ (BOOL)_preflightChecksForFiringParticipantAssetTrashNotificationWithPhotoLibrary:;
+ (id)scopeIdentifierPrefix;
+ (void)_cleanupLocalPreviewLibraryScopesInManagedObjectContext:;
+ (id)predicateToExcludeExitingLibraryScopes;
+ (BOOL)libraryScopeIsActiveWithScopeSyncingState:;
+ (id)activeLibraryScopeInManagedObjectContext:;
+ (void)assertIfGoldilocksSyncingAndLocalModeEnabled;
+ (id)_libraryForEnumerationFromBundle:withName:;
+ (id)predicateForActiveLibraryScope;
+ (id)resetLocalOnlyLibraryScopesAndAllLibraryScopeAssetStatesWithManagedObjectContext:;
+ (short)participationStateFromLibraryScope:;
+ (id)createOwnedShareWithUUID:creationDate:title:unitTestMode:inPhotoLibrary:;
+ (void)informRapportToRemoveShareParticipantUUIDs:photoLibraryBundle:;
+ (BOOL)_queryIsShareEverythingInternalQuery:;
+ (short)activeSyncingStateToUse;
+ (BOOL)supportsCPLScopeType:;
+ (id)fireParticipantAssetTrashNotificationIfNeededWithPhotoLibrary:forceNotification:;
+ (BOOL)shouldAllowFetchURLWithScopeChange:photoLibrary:error:;
+ (id)predicateForPreviewLibraryScope;
+ (id)resetLibraryScopeAssetStatesWithManagedObjectContext:;
+ (id)_computeCountOfContributedAssetsTrashedByOtherParticipantsInLibraryScope:outPhotoCount:outVideoCount:outItemCount:;
+ (id)insertOrUpdateShareWithCPLScopeChange:inPhotoLibrary:;
+ (void)updateLibraryScopeActiveDefaultsWithManagedObjectContext:;
@end
