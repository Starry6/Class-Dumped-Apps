@interface GEOClientNetworkTransactionMetrics : PBCodable
@property (nonatomic) BOOL hasFetchStart;
@property (nonatomic) double fetchStart;
@property (nonatomic) BOOL hasDomainLookupStart;
@property (nonatomic) double domainLookupStart;
@property (nonatomic) BOOL hasDomainLookupEnd;
@property (nonatomic) double domainLookupEnd;
@property (nonatomic) BOOL hasConnectStart;
@property (nonatomic) double connectStart;
@property (nonatomic) BOOL hasSecureConnectStart;
@property (nonatomic) double secureConnectStart;
@property (nonatomic) BOOL hasSecureConnectEnd;
@property (nonatomic) double secureConnectEnd;
@property (nonatomic) BOOL hasConnectEnd;
@property (nonatomic) double connectEnd;
@property (nonatomic) BOOL hasRequestStart;
@property (nonatomic) double requestStart;
@property (nonatomic) BOOL hasRequestEnd;
@property (nonatomic) double requestEnd;
@property (nonatomic) BOOL hasResponseStart;
@property (nonatomic) double responseStart;
@property (nonatomic) BOOL hasResponseEnd;
@property (nonatomic) double responseEnd;
@property (nonatomic) BOOL hasProtocolName;
@property (nonatomic) NSInteger protocolName;
@property (nonatomic) BOOL hasProxyConnection;
@property (nonatomic) BOOL proxyConnection;
@property (nonatomic) BOOL hasReusedConnection;
@property (nonatomic) BOOL reusedConnection;
@property (nonatomic) BOOL hasResourceFetchType;
@property (nonatomic) NSInteger resourceFetchType;
@property (nonatomic) BOOL hasIsMultipath;
@property (nonatomic) BOOL isMultipath;
@property (nonatomic) BOOL hasMultipathServiceType;
@property (nonatomic) NSInteger multipathServiceType;
@property (nonatomic) PBUnknownFields unknownFields;
- (void)setHasRequestStart:;
- (double)domainLookupEnd;
- (void)setResponseStart:;
- (double)connectStart;
- (BOOL)hasRequestEnd;
- (double)requestEnd;
- (void)setConnectStart:;
- (double)connectEnd;
- (double)responseEnd;
- (double)domainLookupStart;
- (void)readAll:;
- (void)setRequestStart:;
- (void)setResponseEnd:;
- (double)fetchStart;
- (void)setConnectEnd:;
- (void)setSecureConnectStart:;
- (BOOL)hasFetchStart;
- (void)setRequestEnd:;
- (void)setHasRequestEnd:;
- (double)responseStart;
- (void)setFetchStart:;
- (id)unknownFields;
- (BOOL)hasRequestStart;
- (double)secureConnectStart;
- (double)requestStart;
- (void)setDomainLookupEnd:;
- (void)setReusedConnection:;
- (int)multipathServiceType;
- (void)setHasConnectEnd:;
- (id)initWithJSON:;
- (void)setHasReusedConnection:;
- (BOOL)hasDomainLookupStart;
- (void)setHasDomainLookupStart:;
- (id)jsonRepresentation;
- (BOOL)hasConnectEnd;
- (BOOL)hasSecureConnectEnd;
- (void)setHasSecureConnectEnd:;
- (BOOL)hasResponseStart;
- (void)setHasResponseEnd:;
- (id)initWithDictionary:;
- (BOOL)hasSecureConnectStart;
- (void)clearUnknownFields:;
- (void)writeTo:;
- (id)resourceFetchTypeAsString:;
- (void)setHasResourceFetchType:;
- (void)setHasConnectStart:;
- (int)StringAsResourceFetchType:;
- (void)setMultipathServiceType:;
- (BOOL)hasDomainLookupEnd;
- (void)setHasDomainLookupEnd:;
- (id)multipathServiceTypeAsString:;
- (unsigned long long)hash;
- (void)setProxyConnection:;
- (void)copyTo:;
- (BOOL)isMultipath;
- (int)protocolName;
- (void)mergeFrom:;
- (void)setHasProtocolName:;
- (BOOL)hasIsMultipath;
- (void)setSecureConnectEnd:;
- (void)setIsMultipath:;
- (void)setHasIsMultipath:;
- (void)setHasProxyConnection:;
- (void).cxx_destruct;
- (void)setHasResponseStart:;
- (BOOL)hasProxyConnection;
- (void)setResourceFetchType:;
- (BOOL)hasProtocolName;
- (BOOL)hasReusedConnection;
- (BOOL)readFrom:;
- (void)setProtocolName:;
- (id)description;
- (BOOL)hasConnectStart;
- (int)StringAsMultipathServiceType:;
- (id)protocolNameAsString:;
- (void)setHasMultipathServiceType:;
- (void)setHasSecureConnectStart:;
- (id)dictionaryRepresentation;
- (void)setDomainLookupStart:;
- (int)StringAsProtocolName:;
- (BOOL)reusedConnection;
- (BOOL)proxyConnection;
- (BOOL)hasResponseEnd;
- (BOOL)isEqual:;
- (BOOL)hasResourceFetchType;
- (int)resourceFetchType;
- (BOOL)hasMultipathServiceType;
- (double)secureConnectEnd;
- (void)setHasFetchStart:;
- (id)copyWithZone:;
+ (BOOL)isValid:;
@end
