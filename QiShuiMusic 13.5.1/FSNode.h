@interface FSNode : NSObject
@property (nonatomic) NSURL URL;
@property (nonatomic) FSNode referringAliasNode;
@property (nonatomic) BOOL directory;
@property (nonatomic) BOOL busyDirectory;
@property (nonatomic) BOOL executable;
@property (nonatomic) BOOL resolvable;
@property (nonatomic) BOOL symbolicLink;
@property (nonatomic) BOOL aliasFile;
@property (nonatomic) BOOL sideFault;
@property (nonatomic) BOOL hasPackageBit;
@property (nonatomic) BOOL regularFile;
@property (nonatomic) BOOL hidden;
@property (nonatomic) BOOL hasHiddenExtension;
@property (nonatomic) BOOL volume;
@property (nonatomic) BOOL mountTrigger;
@property (nonatomic) BOOL onDiskImage;
@property (nonatomic) BOOL onLocalVolume;
- (BOOL)isDirectory;
- (id)bookmarkDataWithOptions:relativeToNode:error:;
- (BOOL)getHFSType:creator:error:;
- (id)extensionWithError:;
- (BOOL)isOnLocalVolume;
- (BOOL)setResourceValue:forKey:options:error:;
- (id)temporaryDirectoryNodeWithFlags:error:;
- (BOOL)isExecutable;
- (BOOL)isVolume;
- (BOOL)getFinderInfo:error:;
- (id)copyCFBundleWithError:;
- (id)redactedDescription;
- (BOOL)isMountTrigger;
- (id)sideFaultResourceValuesReturningError:;
- (BOOL)setFinderInfo:error:;
- (id)pathWithError:;
- (BOOL)getTemporaryResourceValue:forKey:;
- (BOOL)canReadMetadataFromSandboxWithAuditToken:;
- (void)prepareForReuse;
- (id)initWithCoder:;
- (id)initWithDirectory:inDomain:lastPathComponent:createIntermediateDirectories:flags:error:;
- (unsigned long long)hash;
- (BOOL)getOwnerUID:error:;
- (void)setReferringAliasNode:;
- (id)nameWithError:;
- (id)resolvedNodeWithFlags:error:;
- (id)initWithPath:flags:error:;
- (BOOL)getDeviceNumber:error:;
- (id)initTemporaryNodeOnVolume:flags:fileDescriptor:error:;
- (id)bundleIdentifierWithContext:error:;
- (BOOL)isBusyDirectory;
- (void)encodeWithCoder:;
- (BOOL)checkResourceIsReachableAndReturnError:;
- (BOOL)getFileSystemRepresentation:error:;
- (BOOL)isResolvable;
- (id)initByResolvingBookmarkData:relativeToNode:bookmarkDataIsStale:error:;
- (id)canonicalPathWithError:;
- (BOOL)hasHiddenExtension;
- (BOOL)getResourceValue:forKey:options:error:;
- (id)extendedAttributeWithName:options:error:;
- (void)setTemporaryResourceValue:forKey:;
- (BOOL)canReadFromSandboxWithAuditToken:;
- (id)bundleIdentifierWithError:;
- (BOOL)getContentModificationDate:error:;
- (BOOL)getCreationDate:error:;
- (BOOL)canReadWithAuditToken:;
- (BOOL)hasPackageBit;
- (BOOL)getIsDirectory_NoIO:;
- (BOOL)canWriteFromSandboxWithAuditToken:;
- (id)bundleInfoDictionaryWithError:;
- (id)initWithConfigurationString:flags:error:;
- (void).cxx_destruct;
- (id)canonical:pathWithError:;
- (BOOL)isSideFault;
- (id)initByResolvingBookmarkData:options:relativeToNode:bookmarkDataIsStale:error:;
- (id)description;
- (BOOL)isRegularFile;
- (id)referringAliasNode;
- (BOOL)isSymbolicLink;
- (void)removeCachedResourceValueForKey:;
- (id)bookmarkDataRelativeToNode:error:;
- (BOOL)isOnDiskImage;
- (BOOL)canWriteWithAuditToken:;
- (BOOL)getInodeNumber:error:;
- (id)childNodeWithRelativePath:flags:error:;
- (BOOL)canReadMetadataWithAuditToken:;
- (id)initWithFileSystemRepresentation:flags:error:;
- (id)volumeNodeWithFlags:error:;
- (BOOL)isHidden;
- (BOOL)setExtendedAttribute:name:options:error:;
- (BOOL)getFileIdentifier:error:;
- (BOOL)getWriterBundleIdentifier:error:;
- (BOOL)isAliasFile;
- (id)initWithURL:flags:error:;
- (BOOL)isEqual:;
- (id)diskImageURLWithFlags:error:;
- (void)clearURLPropertyCacheIfStale;
- (id)URL;
- (BOOL)getLength:error:;
- (BOOL)getVolumeIdentifier:error:;
- (id)copyWithZone:;
+ (BOOL)isBookmarkDataFull:;
+ (BOOL)getFileSystemRepresentation:forBookmarkData:;
+ (BOOL)canReadMetadataOfURL:withAuditToken:;
+ (id)nameForBookmarkData:error:;
+ (BOOL)supportsSecureCoding;
+ (BOOL)canReadMetadataOfURL:fromSandboxWithAuditToken:;
+ (id)userDataVolumeNode;
+ (BOOL)getVolumeIdentifier:forBookmarkData:error:;
+ (BOOL)canWriteURL:fromSandboxWithAuditToken:;
+ (id)_resolvedNodeFromAliasFile:flags:error:;
+ (BOOL)canReadURL:fromSandboxWithAuditToken:;
+ (id)pathForBookmarkData:error:;
+ (id)prebootVolumeNode;
+ (BOOL)canWriteURL:withAuditToken:;
+ (id)rootVolumeNode;
+ (BOOL)canAccessURL:fromSandboxWithAuditToken:operation:;
+ (unsigned char)compareBookmarkData:toBookmarkData:;
+ (id)systemDataVolumeNode;
+ (id)_resolvedURLFromAliasFile:flags:error:;
+ (BOOL)canReadURL:withAuditToken:;
+ (BOOL)canAccessURL:withAuditToken:operation:;
@end
