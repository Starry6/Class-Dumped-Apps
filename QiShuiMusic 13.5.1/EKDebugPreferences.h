@interface EKDebugPreferences : NSObject
@property (nonatomic) double availabilityFreshnessWindow;
@property (nonatomic) BOOL overrideTravelAdvisoryHypothesis;
@property (nonatomic) NSString overriddenTravelAdvisoryHypothesisTransportType;
@property (nonatomic) double overriddenTravelAdvisoryHypothesisConservativeTravelTime;
@property (nonatomic) double overriddenTravelAdvisoryHypothesisEstimatedTravelTime;
@property (nonatomic) double overriddenTravelAdvisoryHypothesisAggressiveTravelTime;
@property (nonatomic) BOOL overriddenTravelAdvisoryHypothesisSupportsLiveTraffic;
@property (nonatomic) NSString overriddenTravelAdvisoryHypothesisCurrentTrafficDensity;
@property (nonatomic) NSString overriddenTravelAdvisoryHypothesisRouteName;
@property (nonatomic) NSString overriddenTravelAdvisoryHypothesisTravelState;
@property (nonatomic) BOOL preventMarkingTravelAdvisoryEntriesAsDismissed;
@property (nonatomic) BOOL forceDisplayOfNewTravelAdvisoryHypotheses;
@property (nonatomic) BOOL saveGeocodedLocationsInTravelEngine;
@property (nonatomic) BOOL performAgendaEntryEqualityChecksInTravelEngine;
@property (nonatomic) BOOL verifyIntegrityOfAvailabilityTimeSearchTimelines;
@property (nonatomic) BOOL showDepartureDateForTransitTimeToLeave;
@property (nonatomic) BOOL shouldBypassTravelEngineThrottle;
@property (nonatomic) BOOL syntheticTravelAdvisoriesEnabled;
- (id)init;
- (void)setOverriddenTravelAdvisoryHypothesisEstimatedTravelTime:;
- (BOOL)overrideTravelAdvisoryHypothesis;
- (void)setForceDisplayOfNewTravelAdvisoryHypotheses:;
- (void)setAvailabilityFreshnessWindow:;
- (void)setPreventMarkingTravelAdvisoryEntriesAsDismissed:;
- (id)overriddenTravelAdvisoryHypothesisTransportType;
- (void)setOverriddenTravelAdvisoryHypothesisConservativeTravelTime:;
- (void)setSyntheticTravelAdvisoriesEnabled:;
- (BOOL)saveGeocodedLocationsInTravelEngine;
- (void)setOverriddenTravelAdvisoryHypothesisTransportType:;
- (BOOL)syntheticTravelAdvisoriesEnabled;
- (id)overriddenTravelAdvisoryHypothesisCurrentTrafficDensity;
- (void)setOverriddenTravelAdvisoryHypothesisTravelState:;
- (BOOL)forceDisplayOfNewTravelAdvisoryHypotheses;
- (BOOL)verifyIntegrityOfAvailabilityTimeSearchTimelines;
- (void)setVerifyIntegrityOfAvailabilityTimeSearchTimelines:;
- (BOOL)performAgendaEntryEqualityChecksInTravelEngine;
- (void)setPerformAgendaEntryEqualityChecksInTravelEngine:;
- (double)overriddenTravelAdvisoryHypothesisAggressiveTravelTime;
- (BOOL)shouldBypassTravelEngineThrottle;
- (void)setShouldBypassTravelEngineThrottle:;
- (void).cxx_destruct;
- (void)setSaveGeocodedLocationsInTravelEngine:;
- (id)overriddenTravelAdvisoryHypothesisRouteName;
- (void)setOverriddenTravelAdvisoryHypothesisRouteName:;
- (double)overriddenTravelAdvisoryHypothesisEstimatedTravelTime;
- (double)overriddenTravelAdvisoryHypothesisConservativeTravelTime;
- (BOOL)preventMarkingTravelAdvisoryEntriesAsDismissed;
- (void)setOverriddenTravelAdvisoryHypothesisAggressiveTravelTime:;
- (void)setShowDepartureDateForTransitTimeToLeave:;
- (void)setOverriddenTravelAdvisoryHypothesisSupportsLiveTraffic:;
- (void)setOverrideTravelAdvisoryHypothesis:;
- (void)setOverriddenTravelAdvisoryHypothesisCurrentTrafficDensity:;
- (BOOL)overriddenTravelAdvisoryHypothesisSupportsLiveTraffic;
- (BOOL)showDepartureDateForTransitTimeToLeave;
- (double)availabilityFreshnessWindow;
- (id)overriddenTravelAdvisoryHypothesisTravelState;
+ (id)shared;
@end
