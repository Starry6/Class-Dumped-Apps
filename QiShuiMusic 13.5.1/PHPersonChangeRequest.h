@interface PHPersonChangeRequest : PHChangeRequest
@property (nonatomic) s keyFacePickSource;
@property (nonatomic) S suggestedForClientType;
@property (nonatomic) PHRelationshipChangeRequestHelper facesHelper;
@property (nonatomic) PHRelationshipChangeRequestHelper keyFaceHelper;
@property (nonatomic) PHRelationshipChangeRequestHelper rejectedFacesHelper;
@property (nonatomic) PHRelationshipChangeRequestHelper mergeCandidatesHelper;
@property (nonatomic) PHRelationshipChangeRequestHelper mergeCandidatesWithConfidenceHelper;
@property (nonatomic) PHRelationshipChangeRequestHelper invalidMergeCandidatesHelper;
@property (nonatomic) PHPerson targetPerson;
@property (nonatomic) PHObjectPlaceholder placeholderForCreatedPerson;
@property (nonatomic) NSString name;
@property (nonatomic) NSString displayName;
@property (nonatomic) NSString identifier;
@property (nonatomic) q type;
@property (nonatomic) Q manualOrder;
@property (nonatomic) double mergeCandidateConfidence;
@property (nonatomic) NSString personUri;
@property (nonatomic) BOOL inPersonNamingModel;
@property (nonatomic) BOOL verified;
@property (nonatomic) q verifiedType;
@property (nonatomic) S questionType;
@property (nonatomic) S ageType;
@property (nonatomic) S genderType;
@property (nonatomic) S sexType;
@property (nonatomic) NSDictionary contactMatchingDictionary;
@property (nonatomic) s detectionType;
@property (nonatomic) PHUserFeedback userFeedback;
@property (nonatomic) BOOL isNewRequest;
@property (nonatomic) BOOL shouldPerformConcurrentWork;
@property (nonatomic) BOOL mutated;
@property (nonatomic) NSString managedEntityName;
@property (nonatomic) NSManagedObjectID objectID;
@property (nonatomic) BOOL clientEntitled;
@property (nonatomic) NSString clientName;
@property (nonatomic) q accessScopeOptionsRequirement;
@property (nonatomic) Q hash;
@property (nonatomic) # superclass;
@property (nonatomic) NSString description;
@property (nonatomic) NSString debugDescription;
- (void)setName:;
- (id)identifier;
- (void)setType:;
- (id)managedEntityName;
- (void)setDisplayName:;
- (id)displayName;
- (long long)type;
- (void).cxx_destruct;
- (void)addFaces:;
- (id)name;
- (void)setIdentifier:;
- (BOOL)isVerified;
- (unsigned short)questionType;
- (void)setQuestionType:;
- (id)contactMatchingDictionary;
- (void)setVerified:;
- (id)initWithUUID:objectID:;
- (void)encodeToXPCDict:;
- (id)initWithXPCDict:request:clientAuthorization:;
- (BOOL)validateMutationsToManagedObject:error:;
- (BOOL)applyMutationsToManagedObject:photoLibrary:error:;
- (id)initForNewObject;
- (id)createManagedObjectForInsertIntoPhotoLibrary:error:;
- (id)_existentFaceObjectIDs;
- (void)_prepareKeyFaceHelperIfNeeded;
- (id)_mutableKeyFaceObjectIDsAndUUIDs;
- (void)removeFaces:;
- (void)setKeyFace:;
- (id)facesHelper;
- (id)keyFaceHelper;
- (id)personUUID;
- (id)userFeedback;
- (void)setUserFeedback:;
- (id)_mutableFaceObjectIDsAndUUIDs;
- (short)detectionType;
- (void)setDetectionType:;
- (unsigned short)ageType;
- (void)setAgeType:;
- (unsigned short)sexType;
- (void)setSexType:;
- (id)placeholderForCreatedPerson;
- (unsigned long long)manualOrder;
- (void)setManualOrder:;
- (double)mergeCandidateConfidence;
- (void)setMergeCandidateConfidence:;
- (void)setPersonUUID:;
- (id)personUri;
- (void)setPersonUri:;
- (BOOL)isInPersonNamingModel;
- (void)setInPersonNamingModel:;
- (long long)verifiedType;
- (void)setVerifiedType:;
- (unsigned short)genderType;
- (void)setGenderType:;
- (void)setContactMatchingDictionary:;
- (short)keyFacePickSource;
- (void)setKeyFacePickSource:;
- (unsigned short)suggestedForClientType;
- (void)setSuggestedForClientType:;
- (BOOL)_containsUserMutations;
- (BOOL)_hasMutationForVerifiedType:;
- (BOOL)_shouldPromotePerson:toVerifiedType:;
- (id)_existentRejectedFaceObjectIDs;
- (id)_noMinimumFaceCountPersonFetchOptions;
- (id)_existentMergeCandidateObjectIDs;
- (id)_existentMergeCandidateWithConfidenceObjectIDs;
- (id)_existentInvalidMergeCandidateObjectIDs;
- (id)_mutableRejectedFacesObjectIDsAndUUIDs;
- (id)_mutableMergeCandidateObjectIDsAndUUIDs;
- (id)_mutableMergeCandidateWithConfidenceObjectIDsAndUUIDs;
- (id)_mutableInvalidMergeCandidateObjectIDsAndUUIDs;
- (id)_mutableRequiringFaceCropGenerationFacesUUIDs;
- (void)_setKeyFace:forCluster:pickSource:;
- (void)setKeyFaceForUserPick:;
- (void)setKeyFaceForUserPick:forCluster:;
- (void)setKeyFace:forCluster:;
- (void)addRejectedFaces:forCluster:;
- (void)addRejectedFaces:;
- (void)removeRejectedFaces:;
- (void)persistSuggestionForClient:;
- (void)_setNominalMergeTargetUUID:;
- (void)mergePersons:;
- (void)addMergeCandidatePersons:;
- (void)removeMergeCandidatePersons:;
- (void)rejectMergeCandidatePersons:;
- (void)addMergeCandidateWithConfidencePersons:;
- (void)removeMergeCandidateWithConfidencePersons:;
- (void)addInvalidMergeCandidatePersons:;
- (void)_setGraphDedupePersons:;
- (id)targetPerson;
- (void)setTargetPerson:;
- (id)rejectedFacesHelper;
- (id)mergeCandidatesHelper;
- (id)mergeCandidatesWithConfidenceHelper;
- (id)invalidMergeCandidatesHelper;
+ (id)creationRequestForPerson;
+ (id)changeRequestForPerson:;
+ (void)deletePersons:;
+ (id)changeRequestForMergingPersons:;
+ (id)changeRequestForMergingPersons:nominalTargetIdentifier:;
+ (id)changeRequestsForMergeCandidatePersons:;
+ (id)changeRequestForDedupingGraphPersons:;
@end
