@interface MMCSHTTPContext : NSObject
@property (nonatomic) ^{mmcs_http_context={_C3Base={__CFRuntimeBase=QAQ}}i{Metricsinfo__HTTPMetricsInfo={ProtobufCMessage=^{ProtobufCMessageDescriptor}I^{ProtobufCMessageUnknownField}}*iiiiidididddqqiqQidiqiq^{Chunkserver__ErrorResponse}idid}^{__CFString}qdCCCCCCCi^{__CFUUID}dd^{__CFError}^{__CFHTTPMessage}CQQ^{_mmcs_http_request_options}dd^{__CFHTTPMessage}C^{__CFData}C^{__sFILE}^{__sFILE}{Metricsinfo__SocketInfo={ProtobufCMessage=^{ProtobufCMessageDescriptor}I^{ProtobufCMessageUnknownField}}**Ii}^{mmcs_metrics_http_info}^?^?^?^?^?^?^?^?^?^v^v^{os_activity_s}^{voucher_s}^{mmcs_read_stream_pool}^{_mmcs_perform_target}^{__CFData}(?=^{mmcs_cfnetwork_http_context}^{mmcs_nsurlsession_http_context}^{mmcs_curl_http_context}^v)} hc;
@property (nonatomic) NSURLSession urlSession;
@property (nonatomic) NSInputStream inputStream;
@property (nonatomic) NSOutputStream outputStream;
@property (nonatomic) NSURLSessionDataTask dataTask;
@property (nonatomic) NSDictionary timingData;
@property (nonatomic) BOOL didOpen;
@property (nonatomic) BOOL isValid;
@property (nonatomic) BOOL isTaskDone;
@property (nonatomic) BOOL requestIsStreamed;
@property (nonatomic) BOOL isHandlingError;
@property (nonatomic) ^{os_activity_s=} activityMarker;
@property (nonatomic) Q hash;
@property (nonatomic) # superclass;
@property (nonatomic) NSString description;
@property (nonatomic) NSString debugDescription;
- (void)URLSession:dataTask:didReceiveData:;
- (id)inputStream;
- (void)URLSession:task:_willSendRequestForEstablishedConnection:completionHandler:;
- (id)urlSession;
- (void)invalidateStreamPair;
- (void)setDataTask:;
- (void)URLSession:task:needNewBodyStream:;
- (void)dealloc;
- (BOOL)requestIsStreamed;
- (id)hc;
- (id)dataTask;
- (BOOL)createNewRequestBodyInputStream;
- (void)URLSession:task:didCompleteWithError:;
- (void)setIsValid:;
- (BOOL)send;
- (id)initWithContext:options:activityMarker:;
- (void)URLSession:dataTask:didReceiveResponse:completionHandler:;
- (id)activityMarker;
- (void)setRequestIsStreamed:;
- (void)URLSession:task:_conditionalRequirementsChanged:;
- (long long)countOfRequestBodyBytesSent;
- (void)setActivityMarker:;
- (void)URLSession:task:willPerformHTTPRedirection:newRequest:completionHandler:;
- (BOOL)isTaskDone;
- (void)setUrlSession:;
- (void)URLSession:task:didSendBodyData:totalBytesSent:totalBytesExpectedToSend:;
- (void)URLSession:_taskIsWaitingForConnection:;
- (BOOL)didOpen;
- (void)requestBodyDone;
- (void)setInputStream:;
- (void)setIsHandlingError:;
- (long long)writeRequestBody:maxLength:;
- (void)setOutputStream:;
- (void)setTimingData:;
- (void)cleanupRequest;
- (BOOL)isValid;
- (void).cxx_destruct;
- (void)setHc:;
- (void)setDidOpen:;
- (id)outputStream;
- (void)stream:handleEvent:;
- (void)cleanupResponse;
- (id)description;
- (BOOL)requestBodyCanAcceptData;
- (void)invalidate;
- (void)setIsTaskDone:;
- (id)timingData;
- (BOOL)isHandlingError;
- (void)URLSession:_willRetryBackgroundDataTask:withError:;
@end
