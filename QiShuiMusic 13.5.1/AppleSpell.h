@interface AppleSpell : NSObject
- (void)clearCaches;
- (id)init;
- (void)resetTimer;
- (id)spellServer:suggestWordWithLengthInRange:language:;
- (id)spellServer:suggestGuessesForWordRange:inString:language:;
- (id)spellServer:suggestCompletionsForPartialWordRange:inString:language:;
- (id)spellServer:stringForInputString:language:;
- (id)spellServer:findMisspelledWordInString:languages:wordCount:countOnly:correction:;
- (id)spellServer:findMisspelledWordInString:language:wordCount:countOnly:correction:;
- (id)spellServer:checkGrammarInString:language:details:;
- (BOOL)spellServer:canChangeCaseOfFirstLetterInString:toUpperCase:language:;
- (id)spellServer:alternativesForPinyinInputString:language:;
- (void)resetAllLanguageModels;
- (void)releaseAllLexicons;
- (void)timeout:;
- (id)spellServer:checkGrammarInString:range:language:offset:options:;
- (id)sentenceTerminatorCharacterSet;
- (id)backgroundLoadingQueue;
- (id)spellServer:findMisspelledWordInString:language:wordCount:countOnly:;
- (id)spellServer:suggestContextualGuessDictionariesForWordRange:inString:language:options:;
- (id)spellServer:suggestGuessDictionariesForWordRange:inString:language:options:errorModel:;
- (id)spellServer:suggestGuessesForWordRange:inString:language:options:;
- (id)dataBundle;
- (id)dataBundlesForLanguageObject:;
- (void)resetDataBundlesForLanguageObject:;
- (void)resetDataBundlesForAllLanguages;
- (id)databasePathForLanguageObject:;
- (id)databaseConnectionForLanguageObject:;
- (void)releaseDatabaseConnections;
- (void)addAlternateDataBundleURL:;
- (void)setUpdateBundleURL:;
- (void)releaseAllLanguageModels;
- (void)loadLexiconsAndLanguageModelsForLanguage:;
- (BOOL)_checkGrammarInString:range:language:connection:sender:bufIO:errorRange:details:;
- (id)spellServer:checkGrammarInString:range:language:orthography:mutableResults:offset:details:;
- (id)spellServer:checkString:offset:types:options:orthography:wordCount:;
- (id)spellServer:generateCandidatesForSelectedRange:inString:offset:types:options:orthography:;
- (id)spellServer:suggestGuessesForWord:inLanguage:;
- (id)spellServer:suggestCompletionsForPartialWordRange:inString:language:options:;
- (id)spellServer:suggestCompletionDictionariesForPartialWordRange:inString:language:options:;
- (id)spellServer:suggestCompletionDictionariesForPartialWordRange:inString:language:;
- (id)spellServer:suggestNextLetterDictionariesForPartialWordRange:inString:language:options:;
- (id)spellServer:suggestNextLetterDictionariesForPartialWordRange:inString:language:;
- (id)spellServer:extendedAlternativesForPinyinInputString:language:;
- (id)spellServer:prefixesForPinyinInputString:language:;
- (id)spellServer:correctionsForPinyinInputString:language:;
- (id)_standardizedLanguageModelStringForString:;
- (unsigned int)_tokenIDForString:languageModel:languageObject:createIfAbsent:terminatorTokenID:;
- (unsigned int)_tokenIDForString:languageModel:languageObject:terminatorTokenID:;
- (id)_stringForTokenIDs:tokenCount:entryString:languageModel:languageObject:connection:sender:prefix:capitalized:;
- (id)_stringForCompletion:languageModel:languageObject:connection:sender:prefix:capitalized:;
- (BOOL)shouldBlockWord:languageObject:;
- (id)backgroundMaintenanceQueue;
- (unsigned long long)_contextLengthForRange:languageObject:tagger:languageModel:maxContextLength:context:cleanOffset:cleanContextRange:lastTokenRange:lastTokenID:;
- (id)languageModelLocalizationForLanguage:;
- (void)_readLanguageModelParametersFromDefaults;
- (void)_readLanguageModelParametersFromDictionary:;
- (id)_loadWordLanguageModelForLanguage:localization:appIdentifier:onQueue:;
- (id)modelCreationQueue;
- (id)wordLanguageModelForLanguage:appIdentifier:waitForResult:;
- (id)wordLanguageModelForLanguageObject:appIdentifier:waitForResult:;
- (BOOL)useWordLanguageModelForLanguageObject:tagger:appIdentifier:;
- (BOOL)useCharacterLanguageModelForLanguageObject:tagger:appIdentifier:;
- (BOOL)useTransformerLanguageModelForLanguageObject:tagger:appIdentifier:;
- (BOOL)useSentencePieceLanguageModelForLanguageObject:tagger:appIdentifier:;
- (void)loadWordLanguageModelForLanguageObject:;
- (BOOL)useUnigramProbabilityForLanguageObject:;
- (id)_loadNLPLanguageModelWithType:forLanguageObject:onQueue:;
- (id)_NLPLanguageModelWithType:forLanguageObject:waitForResult:;
- (id)characterLanguageModelForLanguageObject:waitForResult:;
- (id)transformerLanguageModelForLanguageObject:waitForResult:;
- (id)sentencePieceLanguageModelForLanguageObject:waitForResult:;
- (unsigned long long)_resetLanguageModels;
- (void)_releaseLanguageModels;
- (void)resetLanguageModels;
- (void)releaseLanguageModels;
- (void)_addLanguageModelCompletionsForPrefix:languageModel:languageObject:connection:sender:capitalized:candidates:;
- (id)languageModelCompletionsForPartialWord:languageObject:sender:appIdentifier:;
- (BOOL)_addLanguageModelCompletionsForPartialWordRange:languageObject:connection:sender:tagger:appIdentifier:waitForLanguageModel:allowTransformer:candidates:scoreDictionary:tryTransliteration:;
- (BOOL)_getUnigramProbabilityForString:languageModel:probability:;
- (id)_rankedCandidatesForRange:candidates:languageObject:tagger:appIdentifier:allowTransformer:scoreDictionary:;
- (void)getParameterValue:forName:languageObject:tagger:appIdentifier:parameterBundles:defaultValue:;
- (id)_languageModelStateScoresForCandidateList:languageModel:state:language:tagger:;
- (id)_rankedCandidatesForCandidateList:languageObject:tagger:appIdentifier:parameterBundles:;
- (BOOL)_useAlternateLanguageForRange:ofString:languageObject:tagger:alternateLanguageObject:alternateTagger:appIdentifier:;
- (float)dynamicScoreForWord:languageModel:languageObject:;
- (float)dynamicScoreForWord:languageObject:appIdentifier:;
- (id)assetDataBundleURLsForLanguageObject:;
- (BOOL)getConditionalProbabilityForWord:context:language:probability:;
- (BOOL)getCharacterModelConditionalProbabilityForString:context:language:probability:;
- (BOOL)getTransformerModelConditionalProbabilityForString:context:language:probability:;
- (id)globalDictionaryArray;
- (id)localDictionaryArrayForLanguageObject:;
- (BOOL)checkWordBuffer:length:languageObject:index:;
- (BOOL)checkNameWordBuffer:length:languageObject:globalOnly:;
- (id)dictionaryForLanguageObject:index:;
- (id)autocorrectionDictionaryForLanguageObject:;
- (id)guessesDictionaryForLanguageObject:;
- (id)capitalizationDictionaryArrayForLanguageObject:;
- (id)phraseCorrectionsDictionaryForLanguageObject:;
- (id)sentenceCorrectionsDictionaryForLanguageObject:;
- (id)parameterBundleForLanguageObject:;
- (id)transformerParameterBundleForLanguageObject:;
- (id)taggerForLanguageObject:string:range:;
- (id)spellServer:suggestCompletionsForPartialWordRange:inString:inLanguage:options:;
- (id)spellServer:suggestCompletionDictionariesForPartialWordRange:inString:inLanguage:options:;
- (id)spellServer:suggestNextLetterDictionariesForPartialWordRange:inString:inLanguage:options:;
- (id)spellServer:suggestWordWithMinimumLength:maximumLength:language:;
- (void)personalizeEmojiArray:;
- (BOOL)noSuggestForCompletion:languageObject:appIdentifier:alreadyCapitalized:;
- (id)spellServer:candidatesForSelectedRange:inString:offset:types:options:orthography:;
- (id)vietnameseModificationForWord:;
- (char *)_validatedGuessWordBuffer:length:languageObject:connection:sender:checkUser:additionalBuffer:;
- (void)_addGuessesForWordBuffer:length:languageObject:connection:sender:minAutocorrectionLength:previousLetter:nextLetter:basicOnly:toGuesses:;
- (BOOL)_findMatchingRangesForRange:inString:keyEventArray:endingAtIndex:matchingStringRange:correctableStringRange:matchingKeyEventRange:firstMisspelledKeyEventIndex:lastMisspelledKeyEventIndex:previousBackspaceCount:;
- (BOOL)findMatchingRangesForRange:inString:keyEventArray:selectedRangeValue:matchingStringRange:correctableStringRange:matchingKeyEventRange:firstMisspelledKeyEventIndex:lastMisspelledKeyEventIndex:previousBackspaceCount:;
- (id)_capitalizationResultForString:range:inString:offset:languageObject:onlyAtInsertionPoint:keyEventArray:selectedRangeValue:;
- (id)_phraseCapitalizationResultForString:range:currentWordRange:inString:offset:languageObject:onlyAtInsertionPoint:keyEventArray:selectedRangeValue:;
- (BOOL)wordIsAlreadyAccented:;
- (id)_accentCorrectionResultForString:range:inString:offset:languageObject:onlyAtInsertionPoint:capitalize:keyEventArray:selectedRangeValue:;
- (BOOL)_acceptWithoutAccentForString:range:inString:languageObject:;
- (id)_initialCorrectionForString:lowercaseString:isFirstSecondCapitalized:dictionary:languageObject:connection:;
- (BOOL)_prohibitCorrectionBasedOnCountsForString:lowercaseString:appIdentifier:languageObject:typologyCorrection:;
- (id)_umlautCorrectionForWord:buffer:length:languageObject:connection:typologyCorrection:;
- (id)_connectionCorrectionForWord:buffer:length:languageObject:connection:flags:isCapitalized:accentCorrectionOnly:isAbbreviation:trySpaceInsertion:hasAccentCorrections:candidateList:typologyCorrection:;
- (id)_spaceInsertionCorrectionForWord:buffer:length:languageObject:connection:flags:isCapitalized:typologyCorrection:;
- (BOOL)_permitCorrection:languageObject:flags:isCapitalized:typologyCorrection:;
- (id)_correctionResultForWord:replacementRange:inString:offset:languageObject:capitalize:isCapitalized:isSecondCapitalized:hasCurlyApostrophe:capitalizationLocale:proposedCorrection:;
- (id)_correctionResultForString:range:inString:offset:tagger:appIdentifier:dictionary:languages:connection:flags:keyEventArray:selectedRangeValue:parameterBundles:previousLetter:nextLetter:extraMisspellingCount:extraCorrectionCount:;
- (void)enumerateAssetDataItemsForLocale:withBlock:;
- (id)_lexiconPathForLocalization:type:;
- (id)_lexiconPathForLanguageObject:type:;
- (id)_phraseLexiconPathForLanguage:;
- (id)_loadLexiconsForLanguage:localization:onQueue:;
- (id)_lexiconsForLanguage:waitForResult:;
- (id)_lexiconsForLanguage:;
- (id)lexiconForLanguage:;
- (id)_lexiconsForLanguageObject:;
- (id)lexiconForLanguageObject:;
- (unsigned long long)loadedLexiconsCountForLanguageObject:;
- (id)_loadPhraseLexiconsForLanguage:localization:onQueue:;
- (id)_phraseLexiconsForLanguage:waitForResult:;
- (id)_phraseLexiconsForLanguage:;
- (void)updateLexiconsForLanguage:;
- (void)updateLexiconsForLanguageIfNecessary:;
- (void)updateLexiconsForLanguageObject:;
- (void)updateLexiconsForLanguageObjectIfNecessary:;
- (void)updateAllLexicons;
- (BOOL)validateWord:inLexicons:forLanguage:requiredMetaFlags:alternativeRequiredMetaFlags:prohibitedMetaFlags:caseInsensitive:;
- (BOOL)validateWord:inLexiconForLanguage:;
- (BOOL)validateAdditionalWord:inLexiconForLanguage:;
- (BOOL)validateVariantWord:inLexiconForLanguage:;
- (BOOL)validateNoCapAbbreviation:inLexiconForLanguage:;
- (BOOL)validateUntilLearnedWord:inLexiconForLanguage:;
- (BOOL)validateWord:inLexiconsForLanguageObject:requiredMetaFlags:alternativeRequiredMetaFlags:prohibitedMetaFlags:caseInsensitive:;
- (BOOL)validateWord:inLexiconForLanguageObject:;
- (BOOL)validateAdditionalWord:inLexiconForLanguageObject:;
- (BOOL)validateVariantWord:inLexiconForLanguageObject:;
- (BOOL)validateNoCapAbbreviation:inLexiconForLanguageObject:;
- (BOOL)validateUntilLearnedWord:inLexiconForLanguageObject:;
- (BOOL)validateWord:inLexicon:;
- (BOOL)getMetaFlagsForWord:inLexiconForLanguage:metaFlags:otherMetaFlags:;
- (id)phraseMatching:inLexiconForLanguage:;
- (void)enumerateEntriesForWord:inLexiconForLanguage:withBlock:;
- (void)enumerateCorrectionEntriesForWord:maxCorrections:inLexiconForLanguage:withBlock:;
- (BOOL)getMetaFlagsForWord:inLexiconForLanguageObject:metaFlags:otherMetaFlags:;
- (id)phraseMatching:inLexiconForLanguageObject:;
- (void)enumerateEntriesForWord:inLexiconForLanguageObject:withBlock:;
- (void)enumerateCorrectionEntriesForWord:maxCorrections:inLexiconForLanguageObject:withBlock:;
- (void)_checkEnglishArticlesInSentence:buffer:length:mutableCorrections:;
- (id)englishPhraseRoot;
- (void)_checkEnglishPhrasesInSentence:buffer:length:mutableCorrections:;
- (id)_checkSentence:languageObject:;
- (void)_checkSentence:languageObject:mutableCorrections:;
- (void)spellServer:checkSentenceCorrectionInString:rangeInParagraph:languageObject:locale:tagger:offset:keyEventArray:selectedRangeValue:autocorrect:checkGrammar:mutableResults:;
- (BOOL)supportSentenceCorrectionForLanguageObject:appIdentifier:;
- (void)spellServer:checkSentenceCorrectionInString:range:languageObject:offset:keyEventArray:selectedRangeValue:autocorrect:checkGrammar:mutableResults:;
- (id)potentialSentenceCorrectionsForWord:languageObject:;
- (unsigned long long)numberOfTurkishSuffixPointsInBuffer:length:maxSuffixPoints:suffixPoints:;
- (BOOL)testTurkishSuffixationPattern:;
- (unsigned long long)acceptabilityOfWordBuffer:length:languageObject:forPrediction:alreadyCapitalized:depth:;
- (unsigned long long)acceptabilityOfWordBuffer:length:languageObject:forPrediction:alreadyCapitalized:;
- (BOOL)checkNegativeWordBuffer:length:languageObject:alreadyCapitalized:;
- (BOOL)checkNegativeWordBuffer:length:languageObject:;
- (BOOL)checkNoCapAbbreviationWordBuffer:length:languageObject:;
- (BOOL)validateWordBuffer:length:connection:;
- (BOOL)validateWordPrefixBuffer:length:connection:;
- (BOOL)validateAbbreviationOrNumberWordBuffer:length:languageObject:connection:sender:;
- (BOOL)checkSpecialPrefixesForWordBuffer:length:;
- (id)stringByRemovingArabicDiacriticsFromString:;
- (id)stringByReducingArabicAlefVariantsInString:;
- (BOOL)validateWordBuffer:length:languageObject:connection:sender:checkBase:checkDict:checkTemp:checkUser:checkNames:checkHyphens:checkIntercaps:checkOptions:forCorrection:depth:;
- (BOOL)validateWordBuffer:length:languageObject:connection:sender:checkBase:checkDict:checkTemp:checkUser:checkNames:checkHyphens:checkIntercaps:checkOptions:depth:;
- (BOOL)validateWordBuffer:length:languageObject:connection:sender:checkBase:checkDict:checkTemp:checkNames:checkHyphens:checkIntercaps:checkOptions:depth:;
- (BOOL)validateWordBuffer:length:languageObject:connection:sender:checkBase:checkDict:checkNames:checkHyphens:checkIntercaps:checkOptions:depth:;
- (id)_orthographyByModifyingOrthography:withLatinLanguage:;
- (id)spellServer:findMisspelledWordInString:range:languages:topLanguages:orthography:checkOrthography:mutableResults:offset:autocorrect:onlyAtInsertionPoint:initialCapitalize:autocapitalize:keyEventArray:appIdentifier:selectedRangeValue:parameterBundles:wordCount:countOnly:correction:;
- (BOOL)_spellServer:canChangeCaseOfFirstLetterInString:toUpperCase:languageObject:;
- (id)_modifiedGrammarDescriptionForDescription:;
- (id)_detailWithRange:description:corrections:issueType:;
- (id)_detailWithRange:description:corrections:;
- (id)_modifiedGrammarRangeForDoubledWordRange:sentenceRange:inString:corrections:;
- (BOOL)_acceptErrorWithRuleType:ruleNumber:grammarRange:sentenceRange:inString:corrections:issueType:;
- (BOOL)_checkEnglishGrammarInString:range:indexIntoBuffer:bufferLength:languageObject:connection:sender:bufIO:retval:errorRange:details:;
- (void)_addContextAlternativesForZhuyinInputString:modifications:afterIndex:delta:toArray:;
- (id)contextAlternativeAnnotatedStringsForZhuyinInputString:;
- (void)_addTwoLetterWordGuessesForWord:buffer:length:languageObject:isCapitalized:isAllCaps:twoLetterWords:candidateList:;
- (void)_addConnectionGuessesForWord:buffer:length:languageObject:connection:candidateList:;
- (void)_addAdditionalGuessesForWord:sender:buffer:length:languageObject:connection:accents:isCapitalized:isAllCaps:isAllAlpha:hasLigature:suggestPossessive:checkUser:checkHyphens:candidateList:;
- (void)_addSpaceInsertionGuessesForWord:sender:buffer:length:languageObject:connection:isCapitalized:checkUser:oneLetterWords:twoLetterWords:candidateList:;
- (void)addLexiconGuessesForWord:buffer:length:languageObject:minCorrectionLength:minExtendedCorrectionLength:isCapitalized:stopAfterFreeInsertions:toGuesses:;
- (id)_spellServer:suggestGuessesForWordRange:inString:languageObject:options:tagger:errorModel:guessesDictionaries:;
- (id)_spellServer:suggestGuessesForWordRange:inString:languageObject:options:;
- (id)spellServer:suggestGuessesForWordRange:inString:inLanguage:options:;
- (id)spellServer:suggestContextualGuessDictionariesForWordRange:inString:inLanguage:options:;
- (id)spellServer:suggestGuessDictionariesForWordRange:inString:inLanguage:options:errorModel:;
- (id)englishStringsFromWordBuffer:length:connection:;
- (id)englishStringFromWordBuffer:length:connection:;
- (void)addSpecialModifiedPinyinToArray:inBuffer:length:atEnd:;
- (void)addModifiedPinyinToArray:connection:fromIndex:prevIndex:prevPrevIndex:startingModificationsAt:inBuffer:length:initialSyllableCount:initialScore:prevScore:prevPrevScore:lastSyllableScore:couldBeAbbreviatedPinyin:;
- (void)addModifiedPartialPinyinToArray:connection:fromIndex:prevIndex:prevPrevIndex:prePrevPrevIndex:startingModificationsAt:inBuffer:length:initialSyllableCount:initialScore:prevScore:prevPrevScore:lastSyllableScore:;
- (id)_primitiveRetainedAlternativesForPinyinInputString:;
- (unsigned long long)_getSplitIndexes:maxCount:forPinyinInputString:;
- (id)_pinyinStringByCombiningPinyinString:withPinyinString:;
- (id)_retainedAlternativesByCombiningAlternatives:withAlternatives:andAddingAlternatives:;
- (id)_recursiveRetainedAlternativesForPinyinInputString:depth:;
- (id)spellServer:_retainedAlternativesForPinyinInputString:extended:;
- (id)spellServer:alternativesForPinyinInputString:;
- (id)spellServer:extendedAlternativesForPinyinInputString:;
- (id)spellServer:_retainedPrefixesForPinyinInputString:;
- (id)spellServer:prefixesForPinyinInputString:;
- (id)spellServer:_retainedCorrectionsForPinyinInputString:;
- (id)spellServer:correctionsForPinyinInputString:;
- (id)spellServer:_retainedModificationsForPinyinInputString:geometryModelData:;
- (id)spellServer:_retainedFinalModificationsForPinyinInputString:geometryModelData:;
- (id)spellServer:modificationsForPinyinInputString:;
- (id)spellServer:modificationsForPinyinInputString:geometryModelData:;
- (id)spellServer:finalModificationsForPinyinInputString:;
- (BOOL)inputStringIsPinyin:allowPartialLastSyllable:;
- (BOOL)inputStringIsFullOrAbbreviatedPinyin:;
- (void)_addContextAlternativesForPinyinInputString:modifications:afterIndex:delta:toArray:;
- (id)contextAlternativeAnnotatedStringsForPinyinInputString:;
- (id)contextAlternativeAnnotatedStringsForJyutpingInputString:;
- (id)internalStringForKoreanExternalString:;
- (id)externalStringForKoreanInternalString:;
- (void)addGuessesForKoreanWord:includeAdditionalGuesses:toGuesses:;
- (id)_correctionResultForKoreanString:range:inString:offset:tagger:appIdentifier:dictionary:keyEventArray:;
- (id)spellServer:suggestGuessesForKoreanWordRange:inString:options:;
+ (id)sharedInstance;
+ (void)resetSharedInstance;
@end
