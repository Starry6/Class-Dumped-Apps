@interface ASCAgent : NSObject
@property (nonatomic) Q hash;
@property (nonatomic) # superclass;
@property (nonatomic) NSString description;
@property (nonatomic) NSString debugDescription;
- (void)dealloc;
- (void).cxx_destruct;
- (void)cancelCurrentRequest;
- (void)didReceiveError:;
- (void)requestPINWithRemainingRetries:completionHandler:;
- (void)performAuthorizationRequestsForContext:withCompletionHandler:;
- (void)authorizationPresenter:credentialRequestedForLoginChoice:authenticatedContext:completionHandler:;
- (void)authorizationPresenter:validateUserEnteredPIN:completionHandler:;
- (void)didFetchSecurityKeyLoginChoices:;
- (void)didFetchPlatformLoginChoices:;
- (void)didCompleteRegistrationWithCredential:error:;
- (void)didCompleteAssertionWithCredential:error:;
- (void)presentCABLESheetWithCompletionHandler:;
- (void)clearAllPlatformPublicKeyCredentialsWithCompletionHandler:;
- (void)getShouldUseAlternateCredentialStoreWithCompletionHandler:;
- (void)getArePasskeysDisallowedForRelyingParty:withCompletionHandler:;
- (void)openCABLEURL:fromSourceApplication:withCompletionHandler:;
- (id)encodeGetAssertionCTAPCommandForAuthenticatorWithUserVerificationAvailability:;
- (id)encodeMakeCredentialCTAPCommandForAuthenticatorWithUserVerificationAvailability:;
- (void)cableClientWillConnect:;
- (void)cableClientWillAuthenticate:;
- (void)authorizationPresenter:startCABLEAuthenticationWithCompletionHandler:;
- (id)initWithTrafficController:connection:publicKeyCredentialManager:;
- (void)_prepareForAuthorizationRequestsForContext:clientConnection:withPresentationHandler:;
- (id)_noCredentialsFoundErrorForRequestContext:;
- (void)userSelectedLoginChoice:authenticatedContext:completionHandler:;
- (void)_configureAppleIDCredentialwithCompletionHandler:;
- (BOOL)_isAuthenticationConfiguredForPlatformPublicKeyRequestWithError:;
- (void)_configurePasswordCredentialsWithCompletionHandler:;
- (void)_configurePublicKeyCredentialsWithAssertionOptions:forProcessWithApplicationIdentifier:requestStyle:completionHandler:;
- (void)_configureLoginChoicesForPresentationContext:withRequestContext:;
- (id)_allAvailableLoginChoicesForRequestContext:;
- (id)_cableLoginChoice;
- (void)_presentAuthorizationRequestWithContext:completionHandler:;
- (BOOL)_hasSignInOptionsForRequestTypes:;
- (BOOL)_hasAnyCredentialsAvailableForRequestTypes:;
- (BOOL)_clientHasNecessaryAuthKitEntitlements;
- (BOOL)_clientIsAuthKitOwner;
- (BOOL)_clientHasAuthKitDeveloperEntitlement;
- (BOOL)_clientIsInternalAuthKit;
- (BOOL)_clientIsPrivateAuthKit;
- (id)_bundleIDfromAppID:;
- (void)_performAuthKitAuthorizationValidation;
- (BOOL)_isClientWithApplicationIdentifier:properlyEntitledForRequestContext:error:;
- (BOOL)_isClientEntitledWebBrowser;
- (BOOL)_shouldApplyQuirksToClientWithApplicationIdentifier:;
- (BOOL)_shouldAddCABLEChoiceForRequestContext:;
- (void)_credentialRequestedForPasswordLoginChoice:completionHandler:;
- (void)_credentialRequestedForPlatformLoginChoice:authenticatedContext:completionHandler:;
- (void)_credentialRequestedForSecurityKeyLoginChoice:;
- (void)_credentialRequestedForCABLELoginChoice:;
- (void)_authorizationCompletedWithCredential:error:;
@end
