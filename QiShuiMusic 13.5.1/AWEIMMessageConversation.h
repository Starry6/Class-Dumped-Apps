@interface AWEIMMessageConversation : NSObject
@property (nonatomic) NSString conversationID;
@property (nonatomic) Q type;
@property (nonatomic) Q status;
@property (nonatomic) NSString peerUserID;
@property (nonatomic) IESIMSaaSAWEIMUser peerUser;
@property (nonatomic) IESIMSaaSUserViewModel peerUserViewModel;
@property (nonatomic) <IESIMParticipantsDataManagerProtocol> participantDataController;
@property (nonatomic) NSString ownerID;
@property (nonatomic) NSString creatorUid;
@property (nonatomic) BOOL isNameChanged;
@property (nonatomic) BOOL mute;
@property (nonatomic) BOOL stickOnTop;
@property (nonatomic) NSString roomID;
@property (nonatomic) <IESIMConversationProtocol> con;
@property (nonatomic) NSString peerSecUserID;
@property (nonatomic) q unreadCount;
@property (nonatomic) NSString name;
@property (nonatomic) NSString avatar;
@property (nonatomic) Q participantsCount;
@property (nonatomic) BOOL isCurrentUserAParticipant;
@property (nonatomic) BOOL isCurrentGroupBanned;
@property (nonatomic) NSNumber shortID;
@property (nonatomic) NSString notice;
@property (nonatomic) NSString desc;
@property (nonatomic) NSString alias;
@property (nonatomic) NSDictionary upgradeSetting;
@property (nonatomic) q minLimit;
@property (nonatomic) q maxLimit;
@property (nonatomic) q nextLimit;
@property (nonatomic) q currentLimit;
@property (nonatomic) BOOL allowMemberInvite;
@property (nonatomic) BOOL isGroupManagementSettingActive;
@property (nonatomic) BOOL canShowProfile;
@property (nonatomic) BOOL needAudit;
@property (nonatomic) NSString groupNumber;
@property (nonatomic) BOOL isAuthorService;
@property (nonatomic) NSString messageIdToScroll;
@property (nonatomic) BOOL shouldShowEngageGroupOwnerLocalGIF;
@property (nonatomic) BOOL hasFetchedAuthorFansGroupInfo;
@property (nonatomic) NSHashTable delegates;
@property (nonatomic) Q hash;
@property (nonatomic) # superclass;
@property (nonatomic) NSString description;
@property (nonatomic) NSString debugDescription;
- (BOOL)isAuthorService;
- (id)con;
- (id)initWithConversationID:options:;
- (void)setCon:;
- (void)setGroupNumber:;
- (id)shortID;
- (void)updateGroupChatName:completion:;
- (void)addParticipantsWithIDs:toConversation:completion:;
- (BOOL)allowMemberInvite;
- (BOOL)canShowProfile;
- (id)conversationDataManager;
- (id)creatorUid;
- (long long)currentLimit;
- (void)deleteConversationWithCompletion:;
- (void)deleteParticipantsWithIDs:completion:;
- (void)exitAndDissolveConversationWithCompletion:;
- (BOOL)gma_supportThisFeature;
- (id)groupMessageActiveVM;
- (id)groupNumber;
- (void)handleErrorResponse:error:completion:;
- (BOOL)hasFetchedAuthorFansGroupInfo;
- (void)iesim_participantsDataSourceDidUpdate;
- (BOOL)isCurrentGroupBanned;
- (BOOL)isCurrentUserAParticipant;
- (BOOL)isGroupManagementSettingActive;
- (BOOL)isNameChanged;
- (void)leaveConversationWithCompletion:;
- (long long)maxLimit;
- (id)messageIdToScroll;
- (long long)minLimit;
- (BOOL)needAudit;
- (long long)nextLimit;
- (void)p_addConRoomIDKVO;
- (void)p_fetchAllGroupParticipantInfo;
- (void)p_groupAddKVO;
- (id)p_roomIDFromConversation:;
- (void)p_singleAddKVO;
- (id)participantDataController;
- (id)peerSecUserID;
- (id)peerUser;
- (id)peerUserID;
- (id)peerUserViewModel;
- (void)refreshPeerUserWithCompletion:;
- (void)setCreatorUid:;
- (void)setGma__supportThisFeature:;
- (void)setHasFetchedAuthorFansGroupInfo:;
- (void)setIsAuthorService:;
- (void)setIsCurrentGroupBanned:;
- (void)setIsCurrentUserAParticipant:;
- (void)setIsNameChanged:;
- (void)setMaxLimit:;
- (void)setMessageIdToScroll:;
- (void)setMinLimit:;
- (void)setNeedAudit:;
- (void)setNextLimit:;
- (void)setParticipantDataController:;
- (void)setParticipantsCount:;
- (void)setPeerUser:;
- (void)setPeerUserID:;
- (void)setPeerUserViewModel:;
- (void)setShouldShowEngageGroupOwnerLocalGIF:;
- (void)setStickOnTop:;
- (void)setUpgradeSetting:;
- (void)setupTargetMessageIDToScrollWithConversation:;
- (BOOL)shouldShowEngageGroupOwnerLocalGIF;
- (BOOL)stickOnTop;
- (void)updateDesc:completion:;
- (void)updateNotice:completion:;
- (void)updateStickOnTop:;
- (id)upgradeSetting;
- (BOOL)mute;
- (void)addDelegate:;
- (void)setStatus:;
- (long long)unreadCount;
- (id)delegates;
- (void)setDelegates:;
- (void)setName:;
- (id)desc;
- (id)alias;
- (void)removeDelegate:;
- (void)setDesc:;
- (void)setType:;
- (void)setMute:;
- (unsigned long long)participantsCount;
- (void)updateMuteStatus:;
- (unsigned long long)type;
- (void).cxx_destruct;
- (unsigned long long)status;
- (id)name;
- (id)conversationID;
- (void)setConversationID:;
- (id)notice;
- (void)setNotice:;
- (id)avatar;
- (void)setAvatar:;
- (id)roomID;
- (void)setRoomID:;
- (id)ownerID;
- (void)setOwnerID:;
+ (void)addParticipantsWithIDs:toConversation:completion:;
+ (void)createConversationWithOtherParticipants:type:inInbox:completion:;
+ (void)createConversationWithOtherParticipants:type:inInbox:options:completion:;
@end
