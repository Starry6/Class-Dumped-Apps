@interface IESLiveInteractConfigLayoutCalculatorInput : NSObject
@property (nonatomic) IESLiveInteractConfigLayoutModel innerModel;
@property (nonatomic) IESLiveInteractionLayout layout;
@property (nonatomic) NSArray preferrdGuestFrames;
@property (nonatomic) {CGRect={CGPoint=dd}{CGSize=dd}} preferredGuestListFrame;
@property (nonatomic) {CGRect={CGPoint=dd}{CGSize=dd}} containerFrame;
@property (nonatomic) {CGRect={CGPoint=dd}{CGSize=dd}} virtualContainerFrame;
@property (nonatomic) {CGSize=dd} mediaSize;
@property (nonatomic) double topMarginAddtion;
@property (nonatomic) double bottomMarginAddtion;
@property (nonatomic) BOOL contentForceFillToHeight;
@property (nonatomic) double previewBottomAddtion;
@property (nonatomic) IESLiveInteractConfigLayoutModel model;
@property (nonatomic) BOOL calculateAnchorFrame;
@property (nonatomic) BOOL useHostStreamLayout;
@property (nonatomic) BOOL useCustomGuestList;
@property (nonatomic) BOOL needAddAnchorSlotWhichEqualToPlayer;
@property (nonatomic) <IESLiveInteractConfigLayoutPreviewInputProtocol> previewInput;
@property (nonatomic) Q hash;
@property (nonatomic) # superclass;
@property (nonatomic) NSString description;
@property (nonatomic) NSString debugDescription;
@property (nonatomic) {CGRect={CGPoint=dd}{CGSize=dd}} preferredContainerFrame;
@property (nonatomic) {CGRect={CGPoint=dd}{CGSize=dd}} preferredGuestListContainerFrame;
@property (nonatomic) double topOffset;
@property (nonatomic) double uiContainerBottomOffset;
@property (nonatomic) <IESLiveInteractionConfigLayoutCanvasAdjustable> canvasAdapter;
- (double)nonOverlapping1v6StandardMargin;
- (double)bottomMarginAddtion;
- (BOOL)calculateAnchorFrame;
- (void)calculateCanvasAdapter;
- (void)calculateCrossRoomStreamInsetsFor6v6;
- (void)calculateFloatDynamicGuestListForAnchor;
- (void)calculateFloatDynamicGuestListFrameForSingleViewAnchor;
- (void)calculateLandScapeDeviceAndSteam;
- (void)calculatePreferredGuestListFrameForDynamicLayout1V6Horizontal;
- (void)calculateUIContainerAdapter;
- (id)canvasAdapter;
- (BOOL)contentForceFillToHeight;
- (id)initWithLayoutModel:layout:diContext:;
- (BOOL)isCurrentDevicePortrait;
- (BOOL)isFloatDynamicAnchor;
- (BOOL)isNonOverlapping1v6Layout;
- (BOOL)needAddAnchorSlotWhichEqualToPlayer;
- (double)nonOverlapping1v6BottomMargin;
- (double)nonOverlapping1v6TopMargin;
- (void)p_calculateFloatDynamicGuestFrames;
- (BOOL)p_needUseVirtualContainerFrame;
- (void)p_processInnerModelForiPad;
- (void)p_updateInnerModelWithPreviewInput:;
- (id)preferrdGuestFrames;
- (id)preferredContainerFrame;
- (id)preferredGuestListContainerFrame;
- (id)preferredGuestListFrame;
- (double)previewBottomAddtion;
- (id)previewInput;
- (void)setBottomMarginAddtion:;
- (void)setCanvasAdapter:;
- (void)setContentForceFillToHeight:;
- (void)setPreferrdGuestFrames:;
- (void)setPreferredContainerFrame:;
- (void)setPreferredGuestListContainerFrame:;
- (void)setPreferredGuestListFrame:;
- (void)setPreviewBottomAddtion:;
- (void)setPreviewInput:;
- (void)setTopMarginAddtion:;
- (void)setUiContainerBottomOffset:;
- (void)setVirtualContainerFrame:;
- (double)topMarginAddtion;
- (double)uiContainerBottomOffset;
- (void)updateScaleModeForAnchorIfNeeded;
- (BOOL)useCustomGuestList;
- (BOOL)useHostStreamLayout;
- (id)virtualContainerFrame;
- (id)model;
- (void)setLayout:;
- (BOOL)isLandscape;
- (BOOL)isPreview;
- (BOOL)isAnchor;
- (double)topOffset;
- (void)setTopOffset:;
- (id)layout;
- (BOOL)isValid;
- (void).cxx_destruct;
- (id)containerFrame;
- (id)innerModel;
- (void)setInnerModel:;
- (void)setContainerFrame:;
- (id)mediaSize;
- (void)setMediaSize:;
- (int)uiLayout;
- (void)calculate;
@end
