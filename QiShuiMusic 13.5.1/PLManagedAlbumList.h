@interface PLManagedAlbumList : _PLManagedAlbumList
@property (nonatomic) NSNumber identifier;
@property (nonatomic) NSNumber needsReorderingNumber;
@property (nonatomic) BOOL isRegisteredForChanges;
@property (nonatomic) s albumListType;
@property (nonatomic) NSString uuid;
@property (nonatomic) NSMutableOrderedSet albums;
@property (nonatomic) BOOL hasAtLeastOneAlbum;
@property (nonatomic) BOOL canEditAlbums;
@property (nonatomic) Q albumsCount;
@property (nonatomic) BOOL isFolder;
@property (nonatomic) @? albumsSortingComparator;
@property (nonatomic) NSInteger filter;
@property (nonatomic) Q unreadAlbumsCount;
@property (nonatomic) NSString _prettyDescription;
@property (nonatomic) NSString _typeDescription;
@property (nonatomic) Q containersCount;
@property (nonatomic) Q hash;
@property (nonatomic) # superclass;
@property (nonatomic) NSString description;
@property (nonatomic) NSString debugDescription;
- (void)awakeFromFetch;
- (id)albums;
- (id)containers;
- (id)payloadID;
- (BOOL)isRegisteredForChanges;
- (int)filter;
- (void)setIsRegisteredForChanges:;
- (id)payloadIDForTombstone:;
- (void)willTurnIntoFault;
- (BOOL)isEmpty;
- (void)didSave;
- (void)dealloc;
- (void)willSave;
- (void)preheatAlbumsAtIndexes:forProperties:relationships:;
- (void)registerForChanges;
- (id)payloadForChangedKeys:;
- (void)awakeFromInsert;
- (void)unregisterForChanges;
- (void)setNeedsReordering;
- (void)setAlbumListType:;
- (void)updateAlbumsOrderIfNeeded;
- (void)registerDerivedAlbumList:;
- (id)_albumsCountFetchRequest;
- (BOOL)isFolder;
- (unsigned long long)unreadAlbumsCount;
- (id)_typeDescription;
- (short)albumListType;
- (unsigned long long)albumsCount;
- (void)unregisterAllDerivedAlbums;
- (id)containersRelationshipName;
- (void)preheatAlbumsForProperties:relationships:;
- (BOOL)canEditAlbums;
- (void)enumerateDerivedIndexMappers:;
- (BOOL)hasAtLeastOneAlbum;
- (void)insertIntoOrderedAlbumsAtIndexByPriorityForAlbum:;
- (void).cxx_destruct;
- (BOOL)hasDerivedIndexMappers;
- (unsigned long long)containersCount;
- (id)albumsSortingComparator;
- (BOOL)needsReordering;
- (id)_prettyDescription;
- (BOOL)canEditContainers;
- (void)enumerateDerivedAlbumLists:;
- (BOOL)albumHasFixedOrder:;
+ (unsigned long long)priorityForAlbumKind:;
+ (void)pushChangesFromAlbumContainer:toAlbumContainer:;
+ (id)_albumListWithType:inManagedObjectContext:;
+ (void)addSingletonObjectsToContext:;
+ (id)scenesAlbumListInPhotoLibrary:;
+ (id)albumListInPhotoLibrary:;
+ (id)allStreamedAlbumsListInPhotoLibrary:;
+ (BOOL)restoreAlbumListFromPersistedDataAtPath:library:;
+ (id)allStreamedAlbumsListInManagedObjectContext:;
+ (id)_typeDescriptionForAlbumListType:;
+ (id)albumListInManagedObjectContext:;
+ (id)eventListInPhotoLibrary:;
+ (id)_singletonListWithType:library:;
+ (id)importListInPhotoLibrary:;
+ (id)placesAlbumListInManagedObjectContext:;
+ (id)eventListInManagedObjectContext:;
+ (BOOL)isValidTypeForPersistence:;
+ (void)persistAlbumListUUIDs:type:pathManager:allowsOverwrite:;
+ (id)_validAlbumsFromSource:destination:;
+ (id)facesAlbumListInPhotoLibrary:;
+ (BOOL)albumKindHasFixedOrder:;
+ (id)keyPathsForValuesAffectingValueForKey:;
+ (BOOL)_albumOrderMatchesFrom:inDestination:;
+ (id)scenesAlbumListInManagedObjectContext:;
+ (BOOL)isValidPathForPersistence:;
+ (id)placesAlbumListInPhotoLibrary:;
+ (id)facesAlbumListInManagedObjectContext:;
+ (id)importListInManagedObjectContext:;
@end
