@interface BDWebViewSchemeTaskHandler : NSObject
@property (nonatomic) BDWebURLSchemeTask schemeTask;
@property (nonatomic) WKWebView webView;
@property (nonatomic) TTHttpTask httpTask;
@property (nonatomic) BDTTNetPrefetchTask prefetchTask;
@property (nonatomic) BDWebViewPreloadTask preloadTask;
@property (nonatomic) NSURLProtocol urlProtocol;
@property (nonatomic) BOOL isStopped;
@property (nonatomic) BOOL hasReceivedData;
@property (nonatomic) NSOperationQueue handleQueue;
@property (nonatomic) NSMutableDictionary hostMap;
@property (nonatomic) BOOL isSkipSSLError;
@property (nonatomic) NSURL webViewURL;
@property (nonatomic) double ttnetTaskStartTime;
@property (nonatomic) Q hash;
@property (nonatomic) # superclass;
@property (nonatomic) NSString description;
@property (nonatomic) NSString debugDescription;
- (BOOL)hasReceivedData;
- (id)hostMap;
- (void)setPreloadTask:;
- (void)setUrlProtocol:;
- (id)configHttpTask:;
- (BOOL)_tryHandleWebView:;
- (id)_ttnetParmWithResponse:;
- (BOOL)_willCallLoadingFailedWithResponse:withError:;
- (void)bdw_startURLSchemeTask;
- (void)bdw_stopURLSchemeTask;
- (id)fixCORSHeaderWithResponse:;
- (void)handleStartSchemeTask;
- (void)handleTTNetworkDataResponse:;
- (void)handleTTNetworkFinishResponse:withObj:withError:;
- (void)handleTTNetworkHeaderResponse:;
- (void)handleTTNetworkRedrectResponse:withNewLocation:;
- (id)headerLowCaseKeyWithNormalKey:;
- (id)httpTask;
- (id)initWithWebView:schemeTask:;
- (BOOL)isReqHostInSafeList:;
- (BOOL)isSkipSSLError;
- (id)prefetchTask;
- (id)preloadTask;
- (void)recordTTNetResponseInfo:withError:;
- (id)responseHeadersMonitorData:;
- (id)schemeTask;
- (void)setHasReceivedData:;
- (void)setHostMap:;
- (void)setHttpTask:;
- (void)setIsSkipSSLError:;
- (void)setPrefetchTask:;
- (void)setSchemeTask:;
- (void)setStringValue:forKey:headers:;
- (void)setTtnetTaskStartTime:;
- (id)stringValueWithKey:headers:;
- (double)ttnetTaskStartTime;
- (id)urlProtocol;
- (id)webViewURL;
- (void)setWebView:;
- (void)dealloc;
- (id)webView;
- (id)handleQueue;
- (void)setHandleQueue:;
- (void).cxx_destruct;
- (BOOL)isStopped;
- (void)setWebViewURL:;
- (void)setIsStopped:;
+ (BOOL)bdw_canHandleRequest:;
@end
