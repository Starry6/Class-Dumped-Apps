@interface PKPaletteView : UIView
@property (nonatomic) Q lastEdgeLocation;
@property (nonatomic) <PKPaletteViewHosting> paletteViewHosting;
@property (nonatomic) <PKPaletteViewInternalDelegate> internalDelegate;
@property (nonatomic) <PKPaletteViewHoverDelegate> hoverDelegate;
@property (nonatomic) Q autoHideCorner;
@property (nonatomic) BOOL toolPreviewMinimized;
@property (nonatomic) BOOL toolPreviewMatchesExpandedTool;
@property (nonatomic) UIView clippingView;
@property (nonatomic) PKPaletteContainerView containerView;
@property (nonatomic) NSLayoutConstraint paletteContainerWidthConstraint;
@property (nonatomic) NSLayoutConstraint paletteContainerHeightConstraint;
@property (nonatomic) NSLayoutConstraint paletteContainerCenterXConstraint;
@property (nonatomic) NSLayoutConstraint paletteContainerCenterYConstraint;
@property (nonatomic) NSLayoutConstraint paletteContainerCompactTopConstraint;
@property (nonatomic) NSLayoutConstraint paletteContainerCompactBottomConstraint;
@property (nonatomic) NSLayoutConstraint paletteContainerCompactLeftConstraint;
@property (nonatomic) NSLayoutConstraint paletteContainerCompactRightConstraint;
@property (nonatomic) PKPaletteToolPreview toolPreview;
@property (nonatomic) NSLayoutConstraint toolPreviewCenterXConstraint;
@property (nonatomic) NSLayoutConstraint toolPreviewCenterYConstraint;
@property (nonatomic) NSLayoutConstraint toolPreviewWidthConstraint;
@property (nonatomic) NSLayoutConstraint toolPreviewHeightConstraint;
@property (nonatomic) BOOL paletteIsCompactSize;
@property (nonatomic) BOOL paletteHasLayoutSubviews;
@property (nonatomic) Q paletteViewType;
@property (nonatomic) Q lastPaletteEdgePositionWhileDragging;
@property (nonatomic) <PKPaletteViewDelegate> delegate;
@property (nonatomic) q palettePosition;
@property (nonatomic) double paletteScaleFactor;
@property (nonatomic) double paletteContentAlpha;
@property (nonatomic) UIViewController presentationController;
@property (nonatomic) MTMaterialView backgroundMaterialView;
@property (nonatomic) {UIEdgeInsets=dddd} palettePopoverLayoutSceneMargins;
@property (nonatomic) BOOL useCompactSize;
@property (nonatomic) double compactPaletteHeight;
@property (nonatomic) {CGRect={CGPoint=dd}{CGSize=dd}} adjustedWindowSceneBounds;
@property (nonatomic) PKPaletteScaleFactorPolicy paletteScaleFactorPolicy;
@property (nonatomic) BOOL autoHideEnabled;
@property (nonatomic) BOOL toolPreviewInstalled;
@property (nonatomic) BOOL shouldStartUpMinimized;
@property (nonatomic) BOOL shouldExpandFromCorner;
@property (nonatomic) double shadowOpacity;
@property (nonatomic) double shadowRadius;
@property (nonatomic) BOOL shouldAdjustShadowRadiusForMinimized;
@property (nonatomic) BOOL ignoresSafeAreaInsetsInCompactSize;
@property (nonatomic) {NSDirectionalEdgeInsets=dddd} edgeInsetsInCompactSize;
@property (nonatomic) UIScrollView contentScrollView;
@property (nonatomic) Q hash;
@property (nonatomic) # superclass;
@property (nonatomic) NSString description;
@property (nonatomic) NSString debugDescription;
@property (nonatomic) UIViewController palettePopoverPresentingController;
- (double)shadowOpacity;
- (id)_stateDictionary;
- (double)shadowRadius;
- (id)backgroundMaterialView;
- (id)clippingView;
- (void)layoutSubviews;
- (id)containerView;
- (void)_setContinuousCornerRadius:;
- (void)setDelegate:;
- (void)_setCornerRadius:;
- (id)internalDelegate;
- (void)setInternalDelegate:;
- (id)presentationController;
- (id)initWithFrame:;
- (void)traitCollectionDidChange:;
- (id)delegate;
- (id)contentScrollView;
- (void).cxx_destruct;
- (double)scalingFactor;
- (void)setPresentationController:;
- (BOOL)useCompactSize;
- (long long)palettePosition;
- (void)setPalettePosition:;
- (void)_saveOptions;
- (void)dismissPalettePopoverWithCompletion:;
- (double)paletteScaleFactor;
- (BOOL)isAutoHideEnabled;
- (void)hostView:willDockPaletteToPosition:prepareForExpansion:;
- (void)hostView:didDockPaletteToPosition:;
- (void)paletteHostingWindowSceneDidChangeBounds:;
- (BOOL)shouldPalettePresentPopover;
- (BOOL)isPalettePresentingPopover;
- (id)palettePopoverPassthroughViews;
- (unsigned long long)palettePopoverPermittedArrowDirections;
- (id)palettePopoverLayoutMargins;
- (BOOL)wantsCustomPalettePopoverPresentationSource;
- (id)palettePopoverSourceRectToPresentViewController:;
- (id)palettePopoverSourceView;
- (void)updatePalettePopover:;
- (id)palettePopoverPresentingController;
- (void)setPalettePopoverPresentingController:;
- (void)setIgnoresSafeAreaInsetsInCompactSize:;
- (void)setEdgeInsetsInCompactSize:;
- (void)_installClippingViewInView:;
- (void)_installBackgroundViewInView:;
- (void)_installContainerViewInView:;
- (void)_installToolPreviewInView:;
- (void)_uninstallToolPreview;
- (BOOL)isToolPreviewInstalled;
- (BOOL)wantsToolPreviewForTraitCollection:;
- (void)setAutoHideEnabled:;
- (void)_didChangeAutoHideEnabled;
- (double)paletteContentAlpha;
- (void)setPaletteContentAlpha:;
- (id)borderColorForTraitCollection:;
- (double)borderWidthForTraitCollection:;
- (void)_updateToolPreviewVisibility;
- (BOOL)_isPaletteContentViewHidden;
- (double)responseForThrowingFromPosition:toPosition:withVelocity:;
- (double)dampingRatioForThrowingFromPosition:toPosition:withVelocity:;
- (void)_updateContainerSizeConstraints;
- (void)_updateContainerSizeConstraintsForEdge:;
- (void)_willDockPaletteToEdge:prepareForExpansion:isPaletteChangingOrientation:;
- (void)_willDockPaletteToCorner:;
- (void)setAdjustedWindowSceneBounds:;
- (void)setPaletteScaleFactor:;
- (void)_setPaletteScaleFactor:notifyDidChange:;
- (void)didChangePaletteScaleFactor;
- (unsigned long long)paletteViewType;
- (void)didChangePalettePosition;
- (void)didChangePalettePositionFromPosition:toPosition:;
- (unsigned long long)_nextAutoHideCorner;
- (void)setPalettePopoverLayoutSceneMargins:;
- (BOOL)_isCompactInSmallestQuickNoteWindowScene;
- (id)_palettePopoverSourceRect;
- (void)updatePopoverUI;
- (id)toolPreviewView;
- (void)setToolPreviewMinimized:;
- (void)setToolPreviewMinimized:animated:;
- (void)_updateToolPreviewScalingAnimated:;
- (BOOL)toolPreviewMatchesExpandedTool;
- (void)configureForDockedAtCorner;
- (void)configureForDockedAtEdge:;
- (void)willStartAppearanceAnimation:;
- (void)didEndAppearanceAnimation;
- (id)minimizedPaletteSize;
- (id)paletteSizeForEdge:;
- (unsigned long long)edgeLocationToDockFromCorner:;
- (BOOL)_loadOptions;
- (void)saveOptionsIfNecessary;
- (id)palettePopoverLayoutSceneMargins;
- (double)compactPaletteHeight;
- (id)adjustedWindowSceneBounds;
- (id)paletteScaleFactorPolicy;
- (BOOL)shouldStartUpMinimized;
- (BOOL)shouldExpandFromCorner;
- (BOOL)shouldAdjustShadowRadiusForMinimized;
- (BOOL)ignoresSafeAreaInsetsInCompactSize;
- (id)edgeInsetsInCompactSize;
- (unsigned long long)lastEdgeLocation;
- (void)setLastEdgeLocation:;
- (id)paletteViewHosting;
- (void)setPaletteViewHosting:;
- (id)hoverDelegate;
- (void)setHoverDelegate:;
- (unsigned long long)autoHideCorner;
- (void)setAutoHideCorner:;
- (BOOL)isToolPreviewMinimized;
- (id)paletteContainerWidthConstraint;
- (void)setPaletteContainerWidthConstraint:;
- (id)paletteContainerHeightConstraint;
- (void)setPaletteContainerHeightConstraint:;
- (id)paletteContainerCenterXConstraint;
- (void)setPaletteContainerCenterXConstraint:;
- (id)paletteContainerCenterYConstraint;
- (void)setPaletteContainerCenterYConstraint:;
- (id)paletteContainerCompactTopConstraint;
- (void)setPaletteContainerCompactTopConstraint:;
- (id)paletteContainerCompactBottomConstraint;
- (void)setPaletteContainerCompactBottomConstraint:;
- (id)paletteContainerCompactLeftConstraint;
- (void)setPaletteContainerCompactLeftConstraint:;
- (id)paletteContainerCompactRightConstraint;
- (void)setPaletteContainerCompactRightConstraint:;
- (id)toolPreview;
- (id)toolPreviewCenterXConstraint;
- (void)setToolPreviewCenterXConstraint:;
- (id)toolPreviewCenterYConstraint;
- (void)setToolPreviewCenterYConstraint:;
- (id)toolPreviewWidthConstraint;
- (void)setToolPreviewWidthConstraint:;
- (id)toolPreviewHeightConstraint;
- (void)setToolPreviewHeightConstraint:;
- (BOOL)paletteIsCompactSize;
- (BOOL)paletteHasLayoutSubviews;
- (unsigned long long)lastPaletteEdgePositionWhileDragging;
+ (id)makeBackgroundView;
@end
