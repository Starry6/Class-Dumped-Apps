@interface GEORouteMatcher : NSObject
@property (nonatomic) GEOComposedRoute route;
@property (nonatomic) NSArray snappedSegments;
@property (nonatomic) Q targetLegIndex;
@property (nonatomic) BOOL useStrictInitialOnRouteCriteria;
@property (nonatomic) double maxMatchDistanceFromPreviousRouteMatch;
@property (nonatomic) BOOL requiresRoadNetworkData;
@property (nonatomic) BOOL shouldSnapRouteMatchToRoute;
@property (nonatomic) BOOL useMatchedCoordinateForMatching;
@property (nonatomic) BOOL shouldWaitForSnappedSegments;
- (id)route;
- (void).cxx_destruct;
- (id)initWithRoute:;
- (void)_finishRouteMatch:previousRouteMatch:forLocation:;
- (id)_candidateForSegment:location:previousRouteMatch:;
- (BOOL)_supportsSnapping;
- (void)setUseMatchedCoordinateForMatching:;
- (BOOL)useMatchedCoordinateForMatching;
- (id)matchToRouteWithLocation:;
- (id)matchToRouteWithLocation:previousRouteMatch:;
- (id)matchToClosestPointOnRouteWithLocation:;
- (id)closestRouteCoordinateForLocationCoordinate:;
- (double)distanceToRouteFrom:;
- (double)distanceToRouteFrom:startDistance:endDistance:;
- (void)setTargetLegIndex:;
- (void)setRequiresRoadNetworkData:;
- (void)setShouldWaitForSnappedSegments:;
- (id)_guaranteedRouteCoordinateForLocationCoordinate:;
- (void)_forEachSegmentNearLocation:previousRouteMatch:handler:;
- (id)_stepForRouteCoordinate:stepHint:;
- (id)snappedSegments;
- (id)snappedSegmentForRouteCoordinate:;
- (double)roadWidthForRouteCoordinate:;
- (double)_roadWidthForSnappedSegment:;
- (void)_startRouteMatch;
- (id)_startStepForPreviousRouteMatch:;
- (void)_considerCandidateMatch:;
- (double)_scoreModifierForStep:previousStep:;
- (BOOL)_shouldConsiderCourseForLocation:;
- (unsigned long long)targetLegIndex;
- (BOOL)useStrictInitialOnRouteCriteria;
- (void)setUseStrictInitialOnRouteCriteria:;
- (double)maxMatchDistanceFromPreviousRouteMatch;
- (void)setMaxMatchDistanceFromPreviousRouteMatch:;
- (BOOL)requiresRoadNetworkData;
- (BOOL)shouldSnapRouteMatchToRoute;
- (void)setShouldSnapRouteMatchToRoute:;
- (BOOL)shouldWaitForSnappedSegments;
@end
