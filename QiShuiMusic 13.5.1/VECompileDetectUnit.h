@interface VECompileDetectUnit : IESMMObject
@property (nonatomic) NSError error;
@property (nonatomic) VETransData transData;
@property (nonatomic) Q detectStatus;
@property (nonatomic) BOOL isAudioDetectFinish;
@property (nonatomic) NSObject<OS_dispatch_queue> audioDetectQueue;
@property (nonatomic) @? progressBlock;
@property (nonatomic) @? completeBlock;
@property (nonatomic) <VEProcessSampleDelegate> downstream;
@property (nonatomic) <VEProcessSampleDelegate> audioDataProvider;
@property (nonatomic) <VEProcessSampleDelegate> videoDataProvider;
@property (nonatomic) @? customAudioProcessBlock;
@property (nonatomic) @? encodeDataCB;
@property (nonatomic) NSString route;
@property (nonatomic) Q hash;
@property (nonatomic) # superclass;
@property (nonatomic) NSString description;
@property (nonatomic) NSString debugDescription;
@property (nonatomic) q curVideoStage;
@property (nonatomic) q curAudioStage;
- (BOOL)startLoopWriter;
- (id)audioDataProvider;
- (id)audioDetectQueue;
- (BOOL)cancelWriterWithError:;
- (id)completeBlock;
- (long long)curAudioStage;
- (long long)curVideoStage;
- (id)customAudioProcessBlock;
- (unsigned long long)detectStatus;
- (id)encodeDataCB;
- (BOOL)getAudioWriterFinish;
- (id)getBreakPointURL;
- (double)getCompileProgress;
- (BOOL)getVideoWriterFinish;
- (id)getWritedDuration;
- (BOOL)isAudioDetectFinish;
- (void)pauseForBackground;
- (BOOL)processAudioSamplebuf:;
- (BOOL)processSampleData:;
- (void)resumeForBackground;
- (void)setAudioDataProvider:;
- (void)setAudioDetectQueue:;
- (void)setCompleteBlock:;
- (void)setCurAudioStage:;
- (void)setCurVideoStage:;
- (void)setCustomAudioProcessBlock:;
- (void)setDetectStatus:;
- (void)setEncodeDataCB:;
- (void)setIsAudioDetectFinish:;
- (void)setTransData:;
- (void)setVideoDataProvider:;
- (BOOL)startAudioDetect;
- (BOOL)startVideoDetect;
- (id)transData;
- (id)videoDataProvider;
- (id)progressBlock;
- (void)setProgressBlock:;
- (void)setRoute:;
- (id)route;
- (id)downstream;
- (BOOL)setConfig:;
- (void)setError:;
- (void)setDownstream:;
- (id)error;
- (void)resume;
- (void).cxx_destruct;
- (void)pause;
- (BOOL)startWriter;
@end
