@interface TVLOwnPlayer : TVLPlayerInternal
@property (nonatomic) TTAVPlayer player;
@property (nonatomic) TTPlayerView showView;
@property (nonatomic) NSString contentURL;
@property (nonatomic) NSString streamName;
@property (nonatomic) NSString sessionID;
@property (nonatomic) q playbackState;
@property (nonatomic) NSDictionary options;
@property (nonatomic) NSMutableDictionary playerOptions;
@property (nonatomic) NSMutableDictionary configuration;
@property (nonatomic) BOOL renderDidStart;
@property (nonatomic) BOOL playerSetupViewInAdvanced;
@property (nonatomic) NSMutableArray effectParamsArray;
- (id)SEI;
- (id)copyPixelBuffer;
- (void)resetViewPlayer;
- (void)setHttpxParams:;
- (id)getGlobalValue:;
- (void)setSEI:;
- (void)_configurePlayerWithConfiguration:;
- (void)_configurePlayerWithOption:;
- (void)addPlayerKVO:;
- (unsigned long long)audioRenderDeviceType;
- (id)cmafParams;
- (void)configurePlayerWithConfiguration:;
- (void)configurePlayerWithConfiguration:async:;
- (void)configurePlayerWithOption:;
- (void)configurePlayerWithOptions;
- (void)configurePlayerWithOptions:;
- (id)cropCopyPixelBuffer:topLeftY:cropW:cropH:;
- (void)drawBorderViewForTest;
- (id)effectParamsArray;
- (int)getDecibelFromAudioStream;
- (float)getFloatValueForKey:;
- (long long)getInt64ValueForKey:;
- (int)getIntValueForKey:;
- (id)getPlayerVersion;
- (id)getStringValueForKey:;
- (void)handleAudioRenderStartNotification:;
- (void)handleRenderStallNotification:;
- (void)handleVideoMetaInfoNotification:;
- (void)handleVideoSizeChangeNotification:;
- (id)httpxParams;
- (BOOL)isContainerOfPlayerCore:;
- (BOOL)isHardwareDecodeEnabled;
- (long long)numberOfBytesPlayed;
- (id)optionForIdentifier:;
- (void)player:loadStateDidChange:;
- (void)player:playbackStateDidChange:;
- (void)player:stallReasonDidChange:;
- (id)playerCoreVersion;
- (void)playerItem:statusDidChange:;
- (BOOL)playerSetupViewInAdvanced;
- (long long)playerViewAlignMode;
- (long long)playerViewScaleMode;
- (id)quicParams;
- (id)rectWithFramePattern:;
- (void)removeAllCachedParams;
- (void)removePlayerKVO:;
- (BOOL)renderDidStart;
- (void)replaceCurrentURLWithPlayURL:options:;
- (void)rotateCamera:;
- (void)setAudioRenderDeviceType:;
- (void)setCmafParams:;
- (void)setEffect:shouldCache:;
- (void)setEffectParamsArray:;
- (void)setFloatValue:forKey:;
- (void)setGlobalValue:forKey:;
- (void)setHardwareDecodeEnabled:;
- (void)setImageLayoutType:;
- (void)setOptionValue:forIdentifier:;
- (void)setOptionValue:forIdentifier:shouldCache:;
- (void)setOptionValue:forIdentifier:shouldCache:cacheOnly:;
- (void)setPlayerLayoutType:;
- (void)setPlayerSetupViewInAdvanced:;
- (void)setPlayerViewAlignMode:;
- (void)setPlayerViewScaleMode:;
- (void)setQuicParams:;
- (void)setRecordPath:;
- (void)setRenderDidStart:;
- (void)setRenderPaused:;
- (void)setRtsPreloadState:;
- (void)setSetupPlayerViewInAdvanceEnabled:;
- (void)setShowView:;
- (void)setShowViewType:option:;
- (void)setVideoCropAreaFrame:;
- (void)setVideoWindowInPresetView;
- (void)setViewPreviewSize:;
- (void)setupEffectWithCachedParams;
- (void)startRenderWithUserInfo:;
- (id)videoAreaFrame;
- (id)videoCropAreaFrame;
- (id)showView;
- (void)setSessionID:;
- (void)setOptions:;
- (id)streamName;
- (id)sessionID;
- (id)versionInfo;
- (id)init;
- (void)setValue:forKey:;
- (float)volume;
- (BOOL)isPlaying;
- (void)dealloc;
- (long long)playbackState;
- (void)setPlaybackState:;
- (void)play;
- (void)setVolume:;
- (void)setMuted:;
- (void)stop;
- (BOOL)isMuted;
- (void)observeValueForKeyPath:ofObject:change:context:;
- (void)prepare;
- (int)getCurrentTime;
- (id)contentURL;
- (void)close;
- (void)setConfiguration:;
- (void)setEffect:;
- (void)close:;
- (void)setStreamName:;
- (id)options;
- (id)player;
- (id)configuration;
- (void)setController:;
- (void).cxx_destruct;
- (void)setPlayer:;
- (id)playerView;
- (void)reset;
- (id)controller;
- (void)pause;
- (void)setContentURL:;
- (void)prepareToPlay;
- (void)setScalingMode:;
- (long long)numberOfBytesTransferred;
- (id)requestInfo;
- (void)setPlayerOptions:;
- (id)playerOptions;
- (long long)playerItemStatus;
- (id)initWithPlayerType:;
- (void)takeScreenShot:;
- (id)getIPAddress;
@end
