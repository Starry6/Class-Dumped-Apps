@interface CKSyncEngineMetadata : NSObject
@property (nonatomic) NSMutableDictionary serverChangeTokensByZoneID;
@property (nonatomic) NSMutableOrderedSet fakeRecordIDsToSaveForSerializationTests;
@property (nonatomic) NSMutableOrderedSet fakeRecordIDsToDeleteForSerializationTests;
@property (nonatomic) NSMutableDictionary fakeZonesToSaveForSerializationTests;
@property (nonatomic) CKRecordID mockNextKnownUserRecordID;
@property (nonatomic) BOOL useMockNextKnownUserRecordID;
@property (nonatomic) Q changeCount;
@property (nonatomic) BOOL needsToFetchDatabaseChanges;
@property (nonatomic) CKServerChangeToken serverChangeTokenForDatabase;
@property (nonatomic) BOOL needsToSaveDatabaseSubscription;
@property (nonatomic) NSArray zoneIDsNeedingToFetchChanges;
@property (nonatomic) NSArray zoneIDsToSave;
@property (nonatomic) NSArray zoneIDsToDelete;
@property (nonatomic) NSArray pendingRecordModifications;
@property (nonatomic) NSArray inFlightRecordModifications;
@property (nonatomic) CKRecordID lastKnownUserRecordID;
@property (nonatomic) BOOL didPerformInitialUserRecordIDFetch;
@property (nonatomic) BOOL hasPendingAdopterTrackedModifications;
@property (nonatomic) BOOL hasInFlightAdopterTrackedModifications;
- (id)initWithData:error:;
- (unsigned long long)changeCount;
- (id)init;
- (id)recordIDsToDelete;
- (id)fakeRecordIDsToDeleteForSerializationTests;
- (id)CKDescriptionPropertiesWithPublic:private:shouldExpand:;
- (void)markRecordModifications:inFlight:;
- (id)zoneIDsToSave;
- (id)zoneIDsToDelete;
- (void)setMockNextKnownUserRecordID:;
- (id)mockNextKnownUserRecordID;
- (BOOL)hasPendingAdopterTrackedModifications;
- (void)setFakeRecordIDsToSaveForSerializationTests:;
- (void)removePendingRecordModifications:;
- (BOOL)needsToFetchChangesForZoneID:;
- (id)fakeRecordIDsToSaveForSerializationTests;
- (BOOL)needsToSaveZoneID:;
- (id)initWithCoder:;
- (id)inFlightRecordModifications;
- (void)setNeedsToDelete:zoneIDs:;
- (void)setFakeRecordIDsToDeleteForSerializationTests:;
- (BOOL)hasInFlightAdopterTrackedModifications;
- (void)encodeWithCoder:;
- (void)setNeedsToFetchDatabaseChanges:;
- (id)fakeZonesToSaveForSerializationTests;
- (BOOL)needsToDeleteZoneID:;
- (BOOL)needsToSaveDatabaseSubscription;
- (void)setNeedsToFetchChanges:forRecordZoneID:;
- (void)setFakeZonesToSaveForSerializationTests:;
- (void)setServerChangeToken:forRecordZoneID:;
- (void).cxx_destruct;
- (void)removeInFlightRecordModifications:;
- (void)setLastKnownUserRecordID:;
- (void)setServerChangeTokensByZoneID:;
- (id)serverChangeTokenForDatabase;
- (id)zoneIDsNeedingToFetchChanges;
- (id)description;
- (void)setHasPendingAdopterTrackedModifications:;
- (id)serverChangeTokenForRecordZoneID:;
- (id)pendingRecordModifications;
- (id)pendingRecordIDsWithModificationType:;
- (void)setHasInFlightAdopterTrackedModifications:;
- (id)lastKnownUserRecordID;
- (void)setUseMockNextKnownUserRecordID:;
- (BOOL)useMockNextKnownUserRecordID;
- (void)addPendingRecordModifications:;
- (void)setServerChangeTokenForDatabase:;
- (void)setDidPerformInitialUserRecordIDFetch:;
- (id)serverChangeTokensByZoneID;
- (void)setNeedsToSave:zoneIDs:;
- (void)getDataRepresentation:;
- (BOOL)didPerformInitialUserRecordIDFetch;
- (id)recordIDsToSave;
- (BOOL)needsToFetchDatabaseChanges;
- (void)setNeedsToSaveDatabaseSubscription:;
+ (BOOL)supportsSecureCoding;
@end
