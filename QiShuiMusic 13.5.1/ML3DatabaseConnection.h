@interface ML3DatabaseConnection : NSObject
@property (nonatomic) <ML3DatabaseConnectionDelegate> connectionDelegate;
@property (nonatomic) NSString databasePath;
@property (nonatomic) BOOL isOpen;
@property (nonatomic) ML3DatabasePrivacyContext privacyContext;
@property (nonatomic) BOOL isReadOnly;
@property (nonatomic) Q journalingMode;
@property (nonatomic) Q protectionLevel;
@property (nonatomic) BOOL isInTransaction;
@property (nonatomic) BOOL transactionMarkedForRollBack;
@property (nonatomic) NSUUID currentTransactionID;
@property (nonatomic) NSUUID uniqueIdentifier;
@property (nonatomic) BOOL automaticCheckpointingEnabled;
@property (nonatomic) Q checkpointStatementThreshold;
@property (nonatomic) BOOL logQueryPlans;
- (BOOL)isReadOnly;
- (id)databasePath;
- (id)initWithDatabasePath:;
- (id)currentTransactionID;
- (BOOL)_closeAndFlushTransactionState:;
- (id)_shortDescription;
- (id)connectionDelegate;
- (void)_logCurrentErrorWhilePerformingStatementOperation:statement:;
- (id)init;
- (void)_handleDatabaseCorruption;
- (void)_resetUnfinalizedStatements;
- (id)executeQuery:;
- (void)setReadOnly:;
- (void)dealloc;
- (void)setConnectionDelegate:;
- (BOOL)removeModuleNamed:;
- (id)uniqueIdentifier;
- (BOOL)open;
- (void)setAutomaticCheckpointingEnabled:;
- (BOOL)isOpen;
- (void)_createDatabaseFileIfNonexistent;
- (unsigned long long)journalingMode;
- (BOOL)registerFunctionName:argumentCount:functionPointer:userData:;
- (BOOL)_internalExecuteUpdate:withParameters:error:;
- (void)setCurrentTransactionID:;
- (void)_logCurrentErrorWhilePerformingStatementOperation:statementSQL:;
- (void)setPrivacyContext:;
- (void)setProtectionLevel:;
- (id)executeQuery:withParameters:limitProperty:limitValue:;
- (BOOL)executeUpdate:;
- (BOOL)_databaseFileExists;
- (BOOL)_handleDiskIOError;
- (id)_registeredModuleNamed:;
- (BOOL)schemaDeleteColumns:inTable:;
- (BOOL)schemaAddColumnDefinition:toTable:;
- (BOOL)registerFunctionName:argumentCount:functionPointer:;
- (void)_createDatabaseDirectoryIfNonexistent;
- (BOOL)close;
- (void)setTransactionLevel:;
- (BOOL)schemaInsertColumnDefinition:intoTable:atIndex:;
- (void)_executeTransactionCommitBlocks:;
- (id)debugDescription;
- (void)_internalLogQuery:withParameters:limitProperty:limitValue:;
- (BOOL)transactionMarkedForRollBack;
- (void)flush;
- (void)_setAlreadyAttemptedCorruptionRecovery:;
- (unsigned long long)checkpointStatementThreshold;
- (BOOL)deleteDatabase;
- (id)_prepareStatement:error:;
- (BOOL)registerModuleName:moduleMethods:;
- (BOOL)_executeStatement:withError:;
- (id)openBlobInTable:column:row:readOnly:;
- (BOOL)_internalEndTransactionAndCommit:;
- (void)_setOwningPool:;
- (BOOL)performTransactionWithBlock:usingBehaviorType:;
- (BOOL)executeUpdate:withParameters:error:;
- (unsigned long long)transactionLevel;
- (long long)lastInsertionRowID;
- (void)setJournalingMode:;
- (id)sqliteError;
- (BOOL)tableExists:;
- (void)_logDatabaseFileDebugInformation;
- (BOOL)_openWithFlags:;
- (void)enqueueBlockForTransactionCommit:;
- (void)_enumerateTableColumnNamesAndDefinitionsFromTable:usingBlock:;
- (void)_finalizeAllStatements;
- (void)setLogQueryPlans:;
- (BOOL)popToRootTransactionAndCommit:;
- (void).cxx_destruct;
- (id)_internalExecuteQuery:withParameters:limitProperty:limitValue:;
- (BOOL)isInTransaction;
- (BOOL)databasePathExists;
- (BOOL)_isDeviceMediaLibraryDatabase;
- (BOOL)_databaseFilesAreWritable;
- (int)_distrustQueriesDuringBlock:;
- (BOOL)_alterTableNamed:withNewColumnDefinitions:newColumnNames:oldColumnNames:;
- (id)description;
- (BOOL)_handleConnectionErrorWhileOpening:;
- (BOOL)registerFunctionName:argumentCount:block:;
- (unsigned long long)protectionLevel;
- (id)executeQuery:withParameters:;
- (BOOL)registerModule:;
- (id)_databaseFilePaths;
- (BOOL)_alreadyAttemptedCorruptionRecovery;
- (BOOL)schemaInsertColumnDefinitions:intoTable:atIndex:;
- (id)_sqliteHandle;
- (int)checkpointDatabase;
- (BOOL)pushTransactionUsingBehaviorType:;
- (void)setCheckpointStatementThreshold:;
- (BOOL)popTransactionAndCommit:;
- (id)privacyContext;
- (BOOL)_handleBusyLockWithNumberOfRetries:;
- (BOOL)schemaDeleteColumn:inTable:;
- (void)_ensureConnectionIsOpen;
- (BOOL)_internalBeginTransactionWithBehaviorType:;
- (BOOL)isEqual:;
- (BOOL)automaticCheckpointingEnabled;
- (BOOL)schemaRenameColumn:inTable:toNewColumnName:;
- (BOOL)_validatePreparedStatement:error:;
- (id)_owningPool;
- (BOOL)_handleZombieSQLiteConnection:;
- (BOOL)pushTransaction;
- (BOOL)logQueryPlans;
- (void)_logCurrentError;
- (BOOL)performTransactionWithBlock:;
@end
