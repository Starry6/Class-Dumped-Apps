@interface GEOSQLiteDB : NSObject
@property (nonatomic) ^{sqlite3=} sqliteDB;
@property (nonatomic) NSInteger sqliteFlags;
@property (nonatomic) NSObject<OS_dispatch_queue> isolationQueue;
@property (nonatomic) NSString dbFilePath;
@property (nonatomic) NSURL databaseFileURL;
@property (nonatomic) NSError lastError;
@property (nonatomic) BOOL isDBReady;
@property (nonatomic) NSObject<OS_os_log> log;
@property (nonatomic) NSDictionary pragmas;
@property (nonatomic) q user_version;
- (BOOL)vacuum;
- (void)executeSync:;
- (void)_channelCleanupFailedWithError:;
- (long long)lastInsertRowID;
- (id)init;
- (BOOL)bindBlobNoCopyParameter:toValue:inStatement:error:;
- (BOOL)_waitForAllTransactionExternalResources;
- (void)dealloc;
- (BOOL)statementForKey:statementBlock:;
- (void)setUser_version:;
- (id)log;
- (BOOL)bindInt64Parameter:toValue:inStatement:error:;
- (id)dbFilePath;
- (void)clearStatement:;
- (id)initWithQueueName:log:databaseFileURL:sqliteFlags:pragmas:setupBlock:;
- (id)stringForColumn:inStatment:;
- (void)_execute:errorHandler:;
- (BOOL)createTable:withDrop:;
- (id)isolationQueue;
- (void)_deleteAndReopenDatabaseIfCorrupt:;
- (BOOL)writeExternalResourceWithData:toURL:error:;
- (id)getAllTables;
- (BOOL)bindZeroBlobParameter:length:inStatement:error:;
- (long long)int64ForColumn:inStatment:;
- (BOOL)deleteExternalResourceAtURL:error:;
- (BOOL)bindIntParameter:toValue:inStatement:error:;
- (BOOL)registerVirtualTable:;
- (id)sqliteDB;
- (void)_doneWritingToChannel:;
- (BOOL)writeBlobData:toTable:column:rowID:error:;
- (BOOL)isDBReady;
- (id)noCopyBlobForColumn:inStatment:;
- (int)sqliteFlags;
- (void)executeAsync:;
- (BOOL)bindNullParameter:inStatement:error:;
- (void)tearDown;
- (void)executeAsync:errorHandler:;
- (void)_debug_lockDB:;
- (id)pragmas;
- (BOOL)executeInTransaction:;
- (id)UUIDForColumn:inStatment:;
- (BOOL)prepareStatement:forKey:;
- (id)initWithQueueName:logFacility:dbFilePath:sqliteFlags:pragmas:setupBlock:tearDownBlock:;
- (id)blobForColumn:inStatment:;
- (BOOL)bindUUIDParameter:toValue:inStatement:error:;
- (BOOL)deleteAllDBFiles;
- (BOOL)reportSQLiteErrorCode:method:error:;
- (BOOL)setup;
- (id)databaseFileURL;
- (BOOL)_bindParameter:inStatement:error:withBinder:;
- (int)_openDatabaseFile;
- (void).cxx_destruct;
- (int)intForColumn:inStatment:;
- (BOOL)_deleteAllDatabaseFilesIfCorrupt:;
- (id)initWithQueueName:log:databaseFileURL:sqliteFlags:pragmas:setupBlock:tearDownBlock:;
- (id)description;
- (BOOL)executeStatement:error:;
- (BOOL)dropAllTables;
- (void)_closeDB;
- (BOOL)moveExternalResourceAtURL:toURL:error:;
- (BOOL)bindBlobParameter:toValue:inStatement:error:;
- (int)_setPragmas;
- (BOOL)dropTablesLike:;
- (void)_shutdown:;
- (BOOL)_deleteAllDBFiles;
- (void)_channelEncounteredError:;
- (int)_openAndConfigure;
- (void)executeSync:errorHandler:;
- (BOOL)bindTextParameter:toValue:inStatement:error:;
- (void)_writeTransactionExternalResourceWithData:toURL:;
- (BOOL)executeStatement:statementBlock:;
- (BOOL)bindRealParameter:toValue:inStatement:error:;
- (id)statementForKey:;
- (double)doubleForColumn:inStatment:;
- (BOOL)createIndex:;
- (BOOL)unregisterVirtualTable:;
- (BOOL)_openAndConfigureWithRetryIfCorrupt;
- (id)_blobForColumn:inStatment:noCopy:;
- (long long)user_version;
- (void)_debug_unlockDB:;
- (id)lastError;
- (id)initWithQueueName:logFacility:dbFilePath:sqliteFlags:pragmas:setupBlock:;
- (void)_createParentDirectory;
- (id)getTablesLike:;
+ (BOOL)renameAllDBFilesFrom:to:;
+ (BOOL)deleteAllDBFilesForURL:;
+ (id)defaultPragmas;
+ (id)_findAllDBFilesForURL:error:;
+ (id)defaultReadOnlyPragmas;
+ (BOOL)migrateAllDBFilesFrom:to:;
+ (BOOL)deleteAllDBFilesFor:;
@end
