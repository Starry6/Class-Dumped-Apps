@interface CHTokenizedTextResult : NSObject
@property (nonatomic) q tokenColumnCount;
@property (nonatomic) q changeableTokenColumnCount;
@property (nonatomic) NSString trailingSeparator;
@property (nonatomic) NSIndexSet strokeIndexes;
@property (nonatomic) NSArray transcriptionPaths;
@property (nonatomic) NSArray transcriptionPathScores;
@property (nonatomic) NSString topTranscription;
@property (nonatomic) NSString rawTranscription;
@property (nonatomic) NSString recognizerDebugDescription;
- (id)init;
- (id)initWithCoder:;
- (unsigned long long)hash;
- (void)encodeWithCoder:;
- (BOOL)isValid;
- (void).cxx_destruct;
- (id)writeToFile;
- (id)description;
- (id)mutableCopyWithZone:;
- (BOOL)isEqual:;
- (id)copyWithZone:;
- (id)rawTranscription;
- (id)precedingSeparatorForToken:;
- (long long)tokenColumnCount;
- (id)tokenRowsAtColumnIndex:;
- (id)tokensInTranscriptionPath:atColumnIndex:;
- (id)recognizerDebugDescription;
- (id)topTranscription;
- (id)strokeIndexesForColumnsInRange:;
- (id)trailingSeparator;
- (long long)changeableTokenColumnCount;
- (id)transcriptionPaths;
- (void)enumerateTokensInTranscriptionPath:columnRange:tokenProcessingBlock:;
- (id)strokeIndexes;
- (id)writeToFileInFolder:basename:;
- (id)initWithTokenColumns:transcriptionPaths:scores:trailingSeparator:recognizerGenerationIdentifier:changeableColumnCount:;
- (id)initWithTokenColumns:transcriptionPaths:scores:trailingSeparator:recognizerGenerationIdentifier:;
- (id)initWithTokenColumns:transcriptionPaths:scores:recognizerGenerationIdentifier:;
- (id)initWithBestPathTokens:pathProbabilities:trailingSeparator:recognizerGenerationIdentifier:;
- (id)initWithBestPathTokens:pathProbabilities:trailingSeparator:recognizerGenerationIdentifier:changeableColumnCount:;
- (id)tokenColumns;
- (id)tokenAtLocation:;
- (long long)recognizerGenerationIdentifier;
- (long long)precedingLineBreaks;
- (double)heuristicTextScoreForColumnRange:;
- (double)averageTokenRecognitionScoreForColumnRange:;
- (BOOL)hasTextReplacementsInColumnRange:;
- (id)_rawPath;
- (id)transcriptionWithPath:columnRange:filterLowConfidence:;
- (id)transcriptionWithPath:columnRange:filterLowConfidence:excludeGibberish:rejectionRate:tokenProcessingBlock:;
- (BOOL)shouldFilterOutStringForToken:isGibberish:;
- (BOOL)isPathOriginal:;
- (id)precedingSeparatorForTopTranscriptionPath;
- (id)precedingSeparatorForRawTranscriptionPath;
- (id)strokeIndexSetsInPath:columnRange:;
- (id)tokensFromTopTranscriptionWithCharacterRange:;
- (id)tokenizedResultWithFilteredPaths:;
- (id)languageFitnessForLocale:recognitionMode:;
- (double)_averageTokenRecognitionScoreInTranscriptionPath:;
- (double)_rawLanguageFitnessForTranscriptionPath:locale:recognitionMode:;
- (double)_normalizedLanguageFitness:;
- (BOOL)_isGibberishToken:;
- (id)lastTokenStrokeIndexes;
- (id)textRecognitionResultArrayGivenHistory:;
- (id)textRecognitionResultArray;
- (id)_legacyTextRecognitionResultForTranscriptionIndex:;
- (void)enumerateTokensInTopTranscriptionPathWithBlock:;
- (BOOL)isEqualToTokenizedTextResult:;
- (id)phraseCaseCorrectedResultWithHistory:phraseLexicon:maxPhraseLength:;
- (id)changeableColumnCountUpdatedResultWithHistory:phraseLexicon:maxPhraseLength:;
- (id)subResultWithColumnRange:;
- (id)commonTopStrokeSetsWithResult:;
- (id)_columnStrokeSetsFromTokenRows:;
- (id)transcriptionPathScores;
+ (BOOL)supportsSecureCoding;
+ (id)loadFromFile:;
+ (id)_strokeIndexSetsFromTokenRow:;
+ (id)resultRestoringRawPathInResult:;
+ (id)_scoreMeanAndStdForToken:forLocale:;
+ (long long)_characterCountInToken:filteringCharacterSet:filteredCharacterCount:;
+ (id)tokenizedTextResultWithString:strokeIndexes:bounds:trailingSeparator:recognizerGenerationIdentifier:;
+ (BOOL)areTokenRowsEquivalent:otherRow:;
+ (id)_originalRowFromRow:;
+ (long long)mergeTokenRow:intoUniqueRows:;
+ (id)extendedToken:withStrokeIndexSet:alignmentScore:bounds:;
+ (id)tokenizedTextResultFromResults:shouldPerformStrictFiltering:doesTopLocaleRequireSpecialHandling:hasSwap:;
+ (id)swappableColumnIndexesInResults:locales:topLocaleIndex:swappableIndex:;
+ (id)compressResult:atColumnIndexes:;
+ (id)resultsBySwapping:swappableColumns:topLocaleIndex:topLocale:;
@end
