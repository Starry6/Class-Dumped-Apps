@interface MKLocationManager : NSObject
@property (nonatomic) <MKLocationProvider> locationProvider;
@property (nonatomic) @? locationCorrector;
@property (nonatomic) BOOL logStartStopLocationUpdates;
@property (nonatomic) BOOL enabled;
@property (nonatomic) BOOL locationServicesAuthorizationNeeded;
@property (nonatomic) BOOL isLocationServicesAvailable;
@property (nonatomic) BOOL isLocationServicesPossiblyAvailable;
@property (nonatomic) BOOL isLocationServicesEnabled;
@property (nonatomic) BOOL isLocationServicesApproved;
@property (nonatomic) BOOL isLocationServicesDenied;
@property (nonatomic) BOOL isLocationServicesRestricted;
@property (nonatomic) BOOL isHeadingServicesAvailable;
@property (nonatomic) BOOL isAuthorizedForPreciseLocation;
@property (nonatomic) BOOL isTemporaryPreciseLocationAuthorizationPromptShown;
@property (nonatomic) BOOL locationServicesPreferencesDialogEnabled;
@property (nonatomic) double headingUpdateTimeInterval;
@property (nonatomic) GEOLocation currentLocation;
@property (nonatomic) GEOLocation gridSnappedCurrentLocation;
@property (nonatomic) GEOLocation courseCorrectedLocation;
@property (nonatomic) q headingOrientation;
@property (nonatomic) @? authorizationRequestBlock;
@property (nonatomic) BOOL hasLocation;
@property (nonatomic) CLLocation lastLocation;
@property (nonatomic) CLLocation lastGoodLocation;
@property (nonatomic) BOOL isLastLocationStale;
@property (nonatomic) NSError locationError;
@property (nonatomic) double desiredAccuracy;
@property (nonatomic) double distanceFilter;
@property (nonatomic) BOOL matchInfoEnabled;
@property (nonatomic) BOOL fusionInfoEnabled;
@property (nonatomic) CLLocation lastProviderLocation;
@property (nonatomic) q activityType;
@property (nonatomic) double expectedGpsUpdateInterval;
@property (nonatomic) double timeScale;
@property (nonatomic) NSBundle effectiveBundle;
@property (nonatomic) NSString effectiveBundleIdentifier;
@property (nonatomic) BOOL useCourseForHeading;
@property (nonatomic) CLHeading heading;
@property (nonatomic) CLHeading throttledHeading;
@property (nonatomic) double currentVehicleHeading;
@property (nonatomic) double currentVehicleSpeed;
@property (nonatomic) double vehicleHeadingOrCourse;
@property (nonatomic) @? networkActivity;
@property (nonatomic) <MNLocationRecorder> locationRecorder;
@property (nonatomic) double navigationCourse;
@property (nonatomic) double minimumLocationUpdateInterval;
@property (nonatomic) BOOL continuesWhileInactive;
@property (nonatomic) BOOL lastLocationPushed;
@property (nonatomic) Q hash;
@property (nonatomic) # superclass;
@property (nonatomic) NSString description;
@property (nonatomic) NSString debugDescription;
- (id)locationRecorder;
- (BOOL)locationProviderShouldPauseLocationUpdates:;
- (void)setLocationCorrector:;
- (void)setLastLocation:;
- (void)applicationWillResignActive:;
- (void)startHeadingUpdateWithObserver:;
- (void)_setTrackingLocation:;
- (void)setLocationProvider:;
- (void)pushLocation:;
- (id)initWithCLLocationManager:;
- (void)_setTrackingHeading:;
- (void)resourceManifestManager:didChangeActiveTileGroup:fromOldTileGroup:;
- (long long)activityType;
- (void)_reportLocationStatus:;
- (void)stopLocationUpdateWithObserver:;
- (void)setActivityType:;
- (void)_reportLocationReset;
- (void)locationProviderDidPauseLocationUpdates:;
- (BOOL)isLocationServicesEnabled;
- (BOOL)isLocationServicesPreferencesDialogEnabled;
- (id)locationCorrector;
- (void)_reportLocationFailureWithError:;
- (void)stopHeadingUpdateWithObserver:;
- (void)setAuthorizationRequestBlock:;
- (id)locationProvider;
- (id)lastLocation;
- (BOOL)matchInfoEnabled;
- (BOOL)isHeadingServicesAvailable;
- (id)authorizationRequestBlock;
- (void)startLocationUpdateWithObserver:;
- (void)_reportLocationSuccess;
- (void)setLocationServicesPreferencesDialogEnabled:;
- (void)locationProvider:didUpdateHeading:;
- (void)dismissHeadingCalibrationDisplay;
- (void)requestWhenInUseAuthorizationWithPrompt;
- (void)setFusionInfoEnabled:;
- (void)setThrottledHeading:;
- (void)locationProvider:didUpdateVehicleHeading:timestamp:;
- (id)init;
- (void)requestWhenInUseAuthorization;
- (void)requestTemporaryPreciseLocationAuthorizationWithPurposeKey:completion:;
- (double)distanceFilter;
- (void)locationProvider:didUpdateVehicleSpeed:timestamp:;
- (void)locationProvider:didUpdateLocation:;
- (void)locationProvider:didReceiveError:;
- (double)headingUpdateTimeInterval;
- (BOOL)fusionInfoEnabled;
- (void)locationProviderDidResumeLocationUpdates:;
- (void)locationProviderDidChangeAuthorizationStatus:;
- (double)desiredAccuracy;
- (void)dealloc;
- (id)heading;
- (BOOL)hasLocation;
- (void)setLogStartStopLocationUpdates:;
- (void)setHeading:;
- (BOOL)isLocationServicesApproved;
- (BOOL)isLocationServicesDenied;
- (void)setHeadingOrientation:;
- (id)gridSnappedCurrentLocation;
- (id)currentLocation;
- (double)currentVehicleSpeed;
- (id)courseCorrectedLocation;
- (BOOL)isTemporaryPreciseLocationAuthorizationPromptShown;
- (BOOL)isAuthorizedForPreciseLocation;
- (void)setEffectiveBundleIdentifier:;
- (BOOL)_isTimeToResetOnResume;
- (double)currentVehicleHeading;
- (void)setContinuesWhileInactive:;
- (id)singleLocationUpdateWithHandler:;
- (id)lastProviderLocation;
- (void)_locationProvider:didUpdateLocation:lastKnownNavCourse:;
- (void)applicationDidBecomeActive:;
- (id)networkActivity;
- (void)_suspend;
- (void)stopVehicleHeadingUpdate;
- (void)setUseCourseForHeading:;
- (double)timeScale;
- (void)stopVehicleSpeedUpdate;
- (BOOL)continuesWhileInactive;
- (void)setMatchInfoEnabled:;
- (void)startVehicleSpeedUpdate;
- (id)singleLocationUpdateWithDesiredAccuracy:handler:;
- (id)singleLocationUpdateWithDesiredAccuracy:handler:timeout:maxLocationAge:;
- (void)setDistanceFilter:;
- (id)locationError;
- (id)effectiveBundleIdentifier;
- (void)_setIsReceivingAccurateLocations:;
- (BOOL)isLocationServicesPossiblyAvailable;
- (void)setNetworkActivity:;
- (void)_syncLocationProviderWithTracking;
- (void)listenForLocationUpdates:;
- (void)setEnabled:;
- (double)navigationCourse;
- (double)minimumLocationUpdateInterval;
- (void).cxx_destruct;
- (void)dampenGPSLocationAccuracy:;
- (void)resetAfterResumeIfNecessary;
- (double)expectedGpsUpdateInterval;
- (id)observersDescription;
- (BOOL)logStartStopLocationUpdates;
- (void)reset;
- (BOOL)isLocationServicesRestricted;
- (void)startVehicleHeadingUpdate;
- (void)_waitForAccurateLocationsTimerFired:;
- (BOOL)isLastLocationStale;
- (long long)headingOrientation;
- (void)waitForAccurateLocationWithTimeout:handler:;
- (BOOL)isLocationServicesAvailable;
- (void)setDesiredAccuracy:;
- (BOOL)wasLastLocationPushed;
- (id)singleLocationUpdateWithDesiredAccuracy:handler:timeout:;
- (void)setEffectiveBundle:;
- (void)setLocationRecorder:;
- (void)setMinimumLocationUpdateInterval:;
- (id)effectiveBundle;
- (void)stopListeningForLocationUpdates:;
- (BOOL)isLocationServicesAuthorizationNeeded;
- (id)lastGoodLocation;
- (void)locationProvider:didUpdateLocation:lastKnownNavCourse:;
- (BOOL)_shouldAllowLocationUpdateInterval:;
- (void)_initializeAuthStatusIfNecessary;
- (BOOL)useCourseForHeading;
- (void)_useDefaultCoreLocationProvider;
- (BOOL)isLocationServicesPossiblyAvailable:;
- (void)_reportHeadingFailureWithError:;
- (double)vehicleHeadingOrCourse;
- (id)throttledHeading;
- (void)_reportHeadingSuccess;
- (void)_startLocationUpdateWithObserver:desiredAccuracy:;
- (BOOL)isEnabled;
+ (id)sharedLocationManager;
+ (id)timeoutError;
+ (void)setCanMonitorWiFiStatus:;
@end
