@interface EDSenderPersistence : NSObject
@property (nonatomic) EDPersistenceDatabase database;
@property (nonatomic) EMBlockedSenderManager blockedSenderManager;
@property (nonatomic) EDPersistenceHookRegistry hookRegistry;
@property (nonatomic) CNContactStore contactStore;
@property (nonatomic) EFLazyCache emailAddressToBucketCache;
@property (nonatomic) EFLazyCache databaseIDToEmailAddressCache;
@property (nonatomic) Q hash;
@property (nonatomic) # superclass;
@property (nonatomic) NSString description;
@property (nonatomic) NSString debugDescription;
- (void)setContactStore:;
- (unsigned long long)handleReconciliationMergeErrorForTable:columnName:statement:journalRowID:protectedRowID:connection:rowsUpdated:error:;
- (void)scheduleRecurringActivity;
- (id)initWithDatabase:blockedSenderManager:hookRegistry:contactStore:;
- (BOOL)_blockOrUnblockSendersForAddresses:block:blockedAddressDatabaseIDs:connection:addressesToUpdate:;
- (void)_updateBlockedSendersWithBlockedSenderAddresses:newlyBlockedAddresses:newlyUnblockedAddresses:;
- (BOOL)_moveSenderWithDatabaseID:toBucket:connection:;
- (void)_invalidateCaches;
- (BOOL)_addAddressesWithDatabaseIDs:toSenderWithDatabaseID:connection:error:;
- (id)_addressesGroupedByContactForAddresses:unmatchedAddresses:otherAddressesByContact:;
- (long long)_bucketForSenderAddress:;
- (id)_addressIDsForAddresses:connection:;
- (id)_moveSenderWithSimpleEmailAddresses:toBucket:sync:userInitiated:transactionGeneration:;
- (id)_addressesGroupedBySimpleAddressForAddresses:;
- (void)_invalidateCachesForAddresses:;
- (id)_addressesToDatabaseIDsForSimpleAddresses:connection:;
- (id)relevantSendersForSearch;
- (id)_contactIdentifierForSenderWithDatabaseID:connection:;
- (void)_setIsBlocked:forAddresses:;
- (void)persistenceDidAddMessages:generationWindow:;
- (void)_reloadBlockedSendersWithAddresses:;
- (id)_simpleAddressesForAddresses:;
- (id)blockedSenderManager;
- (id)_newlyBlockedAddressesForBlockedAddressDatabaseIDs:connection:;
- (BOOL)_addNewSender:toBucket:connection:;
- (id)_addressesToDatabaseIDsForSelect:addressColumns:connection:error:;
- (long long)_bucketForSenderWithDatabaseID:connection:;
- (id)databaseIDToEmailAddressCache;
- (void).cxx_destruct;
- (id)_newlyUnblockedAddressesForBlockedAddressDatabaseIDs:connection:;
- (id)contactStore;
- (void)_moveSenderWithEmailAddresses:toBucket:sync:userInitiated:;
- (void)removeAddresses:fromSender:;
- (id)_combineDictionary:withDictionary:;
- (long long)bucketForSenderAddress:;
- (id)hookRegistry;
- (void)_moveAddressesFromSentMessagesToPrimaryForMessages:;
- (BOOL)_addNewSenderWithAddressIDs:contactIdentifier:toBucket:connection:senderDatabaseID:;
- (void)addAddresses:toSender:;
- (id)emailAddressToBucketCache;
- (id)database;
- (id)_addressIDsGroupedByContactsForAddressesByContact:withConnection:addressesByID:;
- (void)moveSenderWithEmailAddresses:toBucket:;
- (BOOL)_addNewSendersForEmailAddresses:toBucket:connection:newSenders:;
- (void)test_tearDown;
- (void)_blockedSendersDidChange:;
- (id)_emailAddressForDatabaseID:connection:;
+ (id)tablesAndForeignKeysToResolve:associationsToResolve:;
+ (id)sendersTableSchema;
+ (id)senderAddressesTableSchema;
+ (id)addJoinsForSenderBucketToSelectStatement:withSourceAddressColumn:;
@end
