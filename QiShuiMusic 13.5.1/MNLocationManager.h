@interface MNLocationManager : NSObject
@property (nonatomic) @? locationCorrector;
@property (nonatomic) NSString effectiveBundleIdentifier;
@property (nonatomic) NSBundle effectiveBundle;
@property (nonatomic) BOOL isHeadingServicesAvailable;
@property (nonatomic) CLHeading heading;
@property (nonatomic) MNLocation lastLocation;
@property (nonatomic) BOOL coarseModeEnabled;
@property (nonatomic) double expectedGpsUpdateInterval;
@property (nonatomic) double timeScale;
@property (nonatomic) NSInteger headingOrientation;
@property (nonatomic) <MNLocationRecorder> locationRecorder;
@property (nonatomic) Q locationProviderType;
@property (nonatomic) <MNLocationProvider> locationProvider;
@property (nonatomic) Q hash;
@property (nonatomic) # superclass;
@property (nonatomic) NSString description;
@property (nonatomic) NSString debugDescription;
- (id)locationRecorder;
- (BOOL)locationProviderShouldPauseLocationUpdates:;
- (void)setLocationCorrector:;
- (void)setLastLocation:;
- (void)startHeadingUpdateWithObserver:;
- (void)_setTrackingLocation:;
- (void)setLocationProvider:;
- (void)pushLocation:;
- (void)_setTrackingHeading:;
- (void)resourceManifestManager:didChangeActiveTileGroup:fromOldTileGroup:;
- (void)_reportLocationStatus:;
- (void)stopLocationUpdateWithObserver:;
- (void)_reportLocationReset;
- (void)locationProviderDidPauseLocationUpdates:;
- (void)_reset;
- (id)locationCorrector;
- (void)_reportLocationFailureWithError:;
- (void)stopHeadingUpdateWithObserver:;
- (id)locationProvider;
- (id)lastLocation;
- (BOOL)isHeadingServicesAvailable;
- (void)startLocationUpdateWithObserver:;
- (void)_reportLocationSuccess;
- (void)locationProvider:didUpdateHeading:;
- (void)locationProvider:didUpdateVehicleHeading:timestamp:;
- (id)init;
- (void)locationProvider:didUpdateVehicleSpeed:timestamp:;
- (void)locationProvider:didUpdateLocation:;
- (void)locationProvider:didReceiveError:;
- (void)locationProviderDidResumeLocationUpdates:;
- (void)locationProviderDidChangeAuthorizationStatus:;
- (void)dealloc;
- (id)heading;
- (void)setLocationProviderType:;
- (void)useSimulationLocationProvider:;
- (void)addLocationListener:;
- (void)setHeadingOrientation:;
- (void)locationProvider:didEnterRegion:;
- (void)stop;
- (void)useGPSLocationProviderWithCLParameters:;
- (void)setEffectiveBundleIdentifier:;
- (unsigned long long)locationProviderType;
- (void)_shiftLocationIfNecessary:handler:;
- (double)timeScale;
- (BOOL)_hasLocationAssertion;
- (void)_updateForNewShiftedLocation:rawLocation:;
- (void)removeLocationAccessForAll;
- (void)stopMonitoringForRegion:;
- (void)locationProvider:monitoringDidFailForRegion:withError:;
- (id)effectiveBundleIdentifier;
- (void)startMonitoringForRegion:;
- (void).cxx_destruct;
- (void)useTraceLocationProvider:;
- (double)expectedGpsUpdateInterval;
- (void)locationProvider:didExitRegion:;
- (int)headingOrientation;
- (void)_createLocationAssertion;
- (void)setEffectiveBundle:;
- (void)setLocationRecorder:;
- (id)effectiveBundle;
- (void)_clearLocationAssertion;
- (void)locationProvider:didChangeCoarseMode:;
- (void)requestLocationAccessFor:;
- (BOOL)coarseModeEnabled;
- (void)removeLocationAccessFor:;
- (void)removeLocationListener:;
- (void)useHybridLocationProvider;
+ (id)sharedLocationManager;
@end
