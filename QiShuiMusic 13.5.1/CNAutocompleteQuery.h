@interface CNAutocompleteQuery : NSObject
@property (nonatomic) CNAutocompleteFetchRequest request;
@property (nonatomic) <CNAutocompleteSearchProvider> searchProvider;
@property (nonatomic) CNAutocompleteDelegateWrapper delegate;
@property (nonatomic) <CNScheduler> scheduler;
@property (nonatomic) <CNAutocompleteProbeProvider> probeProvider;
@property (nonatomic) CNAutocompleteUserSession userSession;
@property (nonatomic) CNCancelationToken cancelationToken;
@property (nonatomic) <CNCancelable> delegateToken;
@property (nonatomic) <CNAutocompleteSourceInclusionPolicy> sourceInclusionPolicy;
@property (nonatomic) Q hash;
@property (nonatomic) # superclass;
@property (nonatomic) NSString description;
@property (nonatomic) NSString debugDescription;
- (id)execute;
- (void)cancel;
- (id)delegateToken;
- (id)userSession;
- (id)searchProvider;
- (void)setScheduler:;
- (void)setSearchProvider:;
- (void)setDelegate:;
- (id)scheduler;
- (id)executeWithContext:;
- (id)request;
- (void)setUserSession:;
- (void)setDelegateToken:;
- (id)delegate;
- (id)cancelationToken;
- (void).cxx_destruct;
- (void)setRequest:;
- (void)setCancelationToken:;
- (id)probeProvider;
- (id)initWithRequest:searchProvider:delegate:probeProvider:scheduler:userSession:delegateToken:;
- (id)makeDelegateWrapperWithDelegate:forRequest:sourceInclusionPolicy:userSession:;
- (void)searchOperationReportedResults:;
- (void)searchOperationEncounteredError:;
- (void)searchOperationsHaveBegunNetworkActivity;
- (void)searchOperationsHaveEndedNetworkActivity;
- (void)searchOperationsHaveFinished;
- (void)setProbeProvider:;
- (id)sourceInclusionPolicy;
- (void)setSourceInclusionPolicy:;
+ (id)queryWithRequest:searchProvider:delegate:probeProvider:scheduler:userSession:delegateToken:;
+ (BOOL)shouldSuppressAddressesAlreadyChosenForRequest:;
+ (BOOL)searchTypeSupportsSuppressionOfAlreadyChosenAddresses:;
+ (BOOL)shouldSortResultsForPolicy:;
+ (id)observableForQuery:context:;
+ (BOOL)shouldPerformQueryForRequest:;
+ (void)configureNetworkForBuilder:query:;
+ (void)configureNetworkPolicyForBuilder:query:;
+ (void)configureNetworkActivityHandlersForBuilder:query:;
+ (id)observableWithSupplementalResultsForQuery:;
@end
