@interface MLCTensor : NSObject
@property (nonatomic) Q tensorID;
@property (nonatomic) MLCTensorDescriptor descriptor;
@property (nonatomic) NSMutableArray parentLayers;
@property (nonatomic) NSMutableArray childLayers;
@property (nonatomic) NSData data;
@property (nonatomic) MLCDevice device;
@property (nonatomic) NSMutableArray deviceMemory;
@property (nonatomic) Q deviceIndex;
@property (nonatomic) NSMutableArray broadcastabledeviceMemory;
@property (nonatomic) MLCTensor sharedMemoryTensor;
@property (nonatomic) NSInteger multiDeviceReductionType;
@property (nonatomic) Q concatOffset;
@property (nonatomic) Q concatDimension;
@property (nonatomic) Q splitOffset;
@property (nonatomic) Q splitDimension;
@property (nonatomic) Q rootSourceGradientTensorIndexStart;
@property (nonatomic) Q rootSourceGradientTensorCount;
@property (nonatomic) Q rootSourceGradientTensorIndex;
@property (nonatomic) MLCLayer intermediateSumLayer;
@property (nonatomic) Q interleave;
@property (nonatomic) NSArray optimizerData;
@property (nonatomic) NSArray optimizerDeviceData;
@property (nonatomic) BOOL isLayerParameter;
@property (nonatomic) @ deviceDataSources;
@property (nonatomic) BOOL skipWritingToDevice;
@property (nonatomic) NSInteger computeFlags;
@property (nonatomic) Q readCount;
@property (nonatomic) NSString label;
@property (nonatomic) BOOL hasValidNumerics;
- (id)descriptor;
- (void)setDescriptor:;
- (void)setDevice:;
- (id)data;
- (void)setLabel:;
- (id)label;
- (void).cxx_destruct;
- (unsigned long long)readCount;
- (id)description;
- (void)setReadCount:;
- (void)setData:;
- (id)device;
- (id)copyWithZone:;
- (BOOL)synchronizeData;
- (unsigned long long)splitDimension;
- (void)setSplitDimension:;
- (id)intermediateSumLayer;
- (void)setIntermediateSumLayer:;
- (id)optimizerDeviceData;
- (id)copyAndReplaceData:;
- (id)initWithTensorDescriptor:tensorData:parentLayers:childLayers:device:deviceMemory:;
- (BOOL)dataContainsScalarWhere:;
- (BOOL)hasValidNumerics;
- (BOOL)copyDataFromDeviceMemoryToBytes:length:synchronizeWithDevice:;
- (BOOL)bindAndWriteData:toDevice:;
- (BOOL)synchronizeOptimizerData;
- (BOOL)bindOptimizerData:deviceData:;
- (BOOL)doesShapeMatchWithTensor:;
- (unsigned long long)calculateBatchSizeToUse;
- (unsigned long long)calculateBatchSizeToUse:;
- (void)allocateDeviceMemory:;
- (void)deallocateDeviceMemory:;
- (void)writeTensorDataToAllDevices:;
- (void)writeTensorDataToAllDevices:batchSize:;
- (void)dispatchWriteTensorDataToAllDevices:;
- (void)dispatchWriteTensorDataToAllDevices:batchSize:;
- (BOOL)isTensorDataTypeInListOfDataTypes:;
- (unsigned long long)tensorBatchSize;
- (id)tensorByQuantizingToType:scale:bias:;
- (id)tensorByQuantizingToType:scale:bias:axis:;
- (id)tensorByDequantizingToType:scale:bias:;
- (id)tensorByDequantizingToType:scale:bias:axis:;
- (unsigned long long)tensorID;
- (void)setTensorID:;
- (id)optimizerData;
- (void)setOptimizerData:;
- (void)setOptimizerDeviceData:;
- (id)parentLayers;
- (void)setParentLayers:;
- (id)childLayers;
- (void)setChildLayers:;
- (id)deviceMemory;
- (void)setDeviceMemory:;
- (unsigned long long)deviceIndex;
- (void)setDeviceIndex:;
- (id)broadcastabledeviceMemory;
- (void)setBroadcastabledeviceMemory:;
- (id)sharedMemoryTensor;
- (void)setSharedMemoryTensor:;
- (int)multiDeviceReductionType;
- (void)setMultiDeviceReductionType:;
- (unsigned long long)concatOffset;
- (void)setConcatOffset:;
- (unsigned long long)concatDimension;
- (void)setConcatDimension:;
- (unsigned long long)splitOffset;
- (void)setSplitOffset:;
- (unsigned long long)rootSourceGradientTensorIndexStart;
- (void)setRootSourceGradientTensorIndexStart:;
- (unsigned long long)rootSourceGradientTensorCount;
- (void)setRootSourceGradientTensorCount:;
- (unsigned long long)rootSourceGradientTensorIndex;
- (void)setRootSourceGradientTensorIndex:;
- (unsigned long long)interleave;
- (void)setInterleave:;
- (BOOL)isLayerParameter;
- (void)setIsLayerParameter:;
- (id)deviceDataSources;
- (void)setDeviceDataSources:;
- (BOOL)skipWritingToDevice;
- (void)setSkipWritingToDevice:;
- (int)computeFlags;
- (void)setComputeFlags:;
+ (id)tensorWithWidth:height:featureChannelCount:batchSize:data:;
+ (id)tensorWithWidth:height:featureChannelCount:batchSize:randomInitializerType:;
+ (id)tensorWithDescriptor:data:;
+ (id)tensorWithDescriptor:randomInitializerType:;
+ (id)tensorWithDescriptor:;
+ (id)tensorWithDescriptor:fillWithData:;
+ (id)tensorWithShape:;
+ (id)tensorWithShape:randomInitializerType:;
+ (id)tensorWithShape:randomInitializerType:dataType:;
+ (id)tensorWithShape:dataType:;
+ (id)tensorWithShape:fillWithData:dataType:;
+ (id)tensorWithShape:data:dataType:;
+ (id)tensorWithWidth:height:featureChannelCount:batchSize:;
+ (id)tensorWithWidth:height:featureChannelCount:batchSize:fillWithData:dataType:;
+ (id)tensorWithWidth:height:featureChannelCount:batchSize:data:dataType:;
+ (id)tensorWithSequenceLength:featureChannelCount:batchSize:;
+ (id)tensorWithSequenceLength:featureChannelCount:batchSize:randomInitializerType:;
+ (id)tensorWithSequenceLength:featureChannelCount:batchSize:data:;
+ (id)tensorWithSequenceLengths:sortedSequences:featureChannelCount:batchSize:randomInitializerType:;
+ (id)tensorWithSequenceLengths:sortedSequences:featureChannelCount:batchSize:data:;
+ (BOOL)canConvertValue:toDataType:;
+ (id)newDataForTensorDescriptor:fillWithData:;
+ (id)newRandomDataForWeightTensorDescriptor:randomInitializerType:;
@end
