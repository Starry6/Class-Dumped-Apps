@interface PQLConnection : NSObject
@property (nonatomic) NSString label;
@property (nonatomic) BOOL traced;
@property (nonatomic) BOOL crashIfUsedAfterClose;
@property (nonatomic) NSURL url;
@property (nonatomic) ^{sqlite3=} dbHandle;
@property (nonatomic) BOOL isInBatch;
@property (nonatomic) BOOL isInTransaction;
@property (nonatomic) NSError lastError;
@property (nonatomic) q lastInsertedRowID;
@property (nonatomic) q changes;
@property (nonatomic) Q statementCacheMaxCount;
@property (nonatomic) NSObject<OS_dispatch_queue> serialQueue;
@property (nonatomic) double currentOperationDuration;
@property (nonatomic) NSString debugDescription;
@property (nonatomic) Q synchronousMode;
@property (nonatomic) NSInteger batchTransactionType;
@property (nonatomic) BOOL shouldUseWALJournalMode;
@property (nonatomic) @? lockedHandler;
@property (nonatomic) @? busyHandler;
@property (nonatomic) @? autoRollbackHandler;
@property (nonatomic) @? sqliteErrorHandler;
@property (nonatomic) @? preFlushHook;
@property (nonatomic) @? postFlushHook;
@property (nonatomic) @? profilingHook;
@property (nonatomic) @? willBeginBatchingHook;
@property (nonatomic) @? didFinishBatchingHook;
@property (nonatomic) BOOL isBatchSuspended;
- (id)userVersion;
- (id)url;
- (id)init;
- (long long)lastInsertedRowID;
- (void)dealloc;
- (id)dbHandle;
- (void)_resetState;
- (id)fetch:;
- (BOOL)isTraced;
- (id)serialQueue;
- (void)setLabel:;
- (id)label;
- (BOOL)execute:;
- (id)debugDescription;
- (void)flush;
- (long long)changes;
- (BOOL)close:;
- (BOOL)setUserVersion:;
- (unsigned long long)synchronousMode;
- (void).cxx_destruct;
- (BOOL)isInTransaction;
- (void)setLastError:;
- (id)description;
- (void)setSynchronousMode:;
- (id)lastError;
- (void)assertOnQueue;
- (void)setTraced:;
- (BOOL)setupPragmas;
- (void)setShouldUseWALJournalMode:;
- (BOOL)openAtURL:sharedCache:error:;
- (void)useSerialQueue;
- (void)setSqliteErrorHandler:;
- (BOOL)performWithFlags:action:;
- (id)fetchObjectOfClass:sql:;
- (id)_description:;
- (long long)autovacuumableSpaceInBytes;
- (void)setAutoRollbackHandler:;
- (BOOL)backupToURL:progress:;
- (double)currentOperationDuration;
- (void)setLockedHandler:;
- (BOOL)performWithFlags:action:whenFlushed:;
- (void)groupInBatch:;
- (BOOL)groupInTransaction:;
- (BOOL)registerFunction:nArgs:handler:;
- (void)setStatementCacheMaxCount:;
- (void)setCrashIfUsedAfterClose:;
- (void)forceBatchStart;
- (BOOL)isBatchSuspended;
- (void)setPostFlushHook:;
- (void)setPreFlushHook:;
- (void)useBatchingOnTargetQueue:withPolicyHandler:;
- (void)useBatchingWithDelay:changeCount:;
- (void)makeNextFlushFullSync;
- (void)useSerialQueueWithTarget:;
- (BOOL)incrementalVacuum:;
- (id)autoRollbackHandler;
- (BOOL)openAtURL:withFlags:error:;
- (void)setProfilingHook:;
- (id)profilingHook;
- (id)sqliteErrorHandler;
- (BOOL)execute:args:;
- (BOOL)executeRaw:;
- (id)fetch:args:;
- (id)fetchObjectOfClass:initializer:sql:args:;
- (id)fetchObjectOfClass:sql:args:;
- (id)fetchObject:sql:args:;
- (id)fetchObjectOfClass:initializer:sql:;
- (id)fetchObject:sql:;
- (id)lockedHandler;
- (BOOL)destroyDatabaseWithError:;
- (void)_createCacheIfNeeded;
- (unsigned long long)statementCacheMaxCount;
- (void)useBatchingOnTargetQueue:delay:changeCount:;
- (void)useBatchingWithPolicyHandler:;
- (void)_batchStartIfNeeded:;
- (void)_batchStopIfNeeded;
- (void)_fireFlushNotifications;
- (int)_vacuumMode;
- (BOOL)_incrementalVacuum:;
- (void)_vacuumIfNeeded;
- (BOOL)_fullSync;
- (void)makeNextFlushBarrierFSync;
- (BOOL)_performWithFlags:action:whenFlushed:;
- (void)_clearCleanupCacheQueueIfNeeded;
- (void)_clearStatementCache;
- (BOOL)_openAt:withFlags:error:;
- (BOOL)unsafeOpenWithoutLockingAtURL:withFlags:error:;
- (BOOL)isInBatch;
- (void)setBatchTransactionType:;
- (id)_newStatementForFormat:arguments:;
- (BOOL)_executeStmt:mustSucceed:;
- (BOOL)_execute:mustSucceed:bindings:;
- (id)busyHandler;
- (void)setBusyHandler:;
- (id)preFlushHook;
- (id)postFlushHook;
- (id)willBeginBatchingHook;
- (void)setWillBeginBatchingHook:;
- (id)didFinishBatchingHook;
- (void)setDidFinishBatchingHook:;
- (BOOL)crashIfUsedAfterClose;
- (int)batchTransactionType;
- (BOOL)shouldUseWALJournalMode;
- (id)_newStatementForBuilder:;
- (BOOL)executeSwift:error:;
- (id)fetchSwift:error:;
- (id)fetchObjectOfClassSwift:query:error:;
- (id)fetchObjectSwift:query:error:;
@end
