@interface FLOWSchemaFLOWMediaPlayerContext : SISchemaInstrumentationMessage
@property (nonatomic) NSInteger taskType;
@property (nonatomic) BOOL hasTaskType;
@property (nonatomic) NSInteger mediaType;
@property (nonatomic) BOOL hasMediaType;
@property (nonatomic) BOOL isWholeHouseAudio;
@property (nonatomic) BOOL hasIsWholeHouseAudio;
@property (nonatomic) FLOWSchemaFLOWholeHouseAudioDestinationContext wholeHouseAudioDestinationContext;
@property (nonatomic) BOOL hasWholeHouseAudioDestinationContext;
@property (nonatomic) BOOL isMusicSubscriber;
@property (nonatomic) BOOL hasIsMusicSubscriber;
@property (nonatomic) NSArray activeSubscriptions;
@property (nonatomic) NSInteger appleMusicVoiceUserSubscriptionState;
@property (nonatomic) BOOL hasAppleMusicVoiceUserSubscriptionState;
@property (nonatomic) NSInteger appleMusicVoicePreviewOfferNotShown;
@property (nonatomic) BOOL hasAppleMusicVoicePreviewOfferNotShown;
@property (nonatomic) BOOL isAppleMusicVoiceEligible;
@property (nonatomic) BOOL hasIsAppleMusicVoiceEligible;
@property (nonatomic) FLOWSchemaFLOWMediaPlayerPlaybackContext mediaPlayerPlaybackContext;
@property (nonatomic) BOOL hasMediaPlayerPlaybackContext;
@property (nonatomic) NSData jsonData;
@property (nonatomic) Q whichMediaplayertaskcontext;
- (BOOL)hasMediaType;
- (int)mediaType;
- (void)setMediaType:;
- (id)initWithJSON:;
- (id)suppressMessageUnderConditions;
- (void)setHasMediaType:;
- (int)taskType;
- (id)initWithDictionary:;
- (void)writeTo:;
- (id)jsonData;
- (unsigned long long)hash;
- (unsigned long long)activeSubscriptionsCount;
- (void).cxx_destruct;
- (id)applySensitiveConditionsPolicy:;
- (BOOL)readFrom:;
- (id)dictionaryRepresentation;
- (BOOL)isEqual:;
- (void)setTaskType:;
- (BOOL)hasTaskType;
- (void)setHasTaskType:;
- (id)activeSubscriptions;
- (void)setActiveSubscriptions:;
- (void)setAppleMusicVoicePreviewOfferNotShown:;
- (int)appleMusicVoicePreviewOfferNotShown;
- (void)deleteAppleMusicVoicePreviewOfferNotShown;
- (BOOL)hasAppleMusicVoicePreviewOfferNotShown;
- (void)setHasAppleMusicVoicePreviewOfferNotShown:;
- (void)deleteTaskType;
- (void)deleteMediaType;
- (void)setIsWholeHouseAudio:;
- (BOOL)hasIsWholeHouseAudio;
- (void)setHasIsWholeHouseAudio:;
- (void)deleteIsWholeHouseAudio;
- (BOOL)hasWholeHouseAudioDestinationContext;
- (void)deleteWholeHouseAudioDestinationContext;
- (void)setIsMusicSubscriber:;
- (BOOL)hasIsMusicSubscriber;
- (void)setHasIsMusicSubscriber:;
- (void)deleteIsMusicSubscriber;
- (void)clearActiveSubscriptions;
- (void)deleteActiveSubscriptions;
- (void)addActiveSubscriptions:;
- (int)activeSubscriptionsAtIndex:;
- (void)setAppleMusicVoiceUserSubscriptionState:;
- (BOOL)hasAppleMusicVoiceUserSubscriptionState;
- (void)setHasAppleMusicVoiceUserSubscriptionState:;
- (void)deleteAppleMusicVoiceUserSubscriptionState;
- (void)setIsAppleMusicVoiceEligible:;
- (BOOL)hasIsAppleMusicVoiceEligible;
- (void)setHasIsAppleMusicVoiceEligible:;
- (void)deleteIsAppleMusicVoiceEligible;
- (void)setMediaPlayerPlaybackContext:;
- (id)mediaPlayerPlaybackContext;
- (void)deleteMediaPlayerPlaybackContext;
- (unsigned long long)whichMediaplayertaskcontext;
- (BOOL)isWholeHouseAudio;
- (id)wholeHouseAudioDestinationContext;
- (void)setWholeHouseAudioDestinationContext:;
- (BOOL)isMusicSubscriber;
- (int)appleMusicVoiceUserSubscriptionState;
- (BOOL)isAppleMusicVoiceEligible;
- (void)setHasWholeHouseAudioDestinationContext:;
- (BOOL)hasMediaPlayerPlaybackContext;
- (void)setHasMediaPlayerPlaybackContext:;
@end
