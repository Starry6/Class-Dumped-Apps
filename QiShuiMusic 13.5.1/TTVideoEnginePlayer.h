@interface TTVideoEnginePlayer : NSObject
@property (nonatomic) BOOL asyncClose;
@property (nonatomic) <TTVideoPlayerStateProtocol> delegate;
@property (nonatomic) <TTVideoPlayerEngineInfoProtocol> engine;
@property (nonatomic) <TTAVPlayerSubInfoInterface> subInfo;
@property (nonatomic) UIView view;
@property (nonatomic) NSURL contentURL;
@property (nonatomic) NSInteger cacheFileMode;
@property (nonatomic) NSInteger testSpeedMode;
@property (nonatomic) double currentPlaybackTime;
@property (nonatomic) double duration;
@property (nonatomic) double playableDuration;
@property (nonatomic) q mediaSize;
@property (nonatomic) q bufferingProgress;
@property (nonatomic) q playbackState;
@property (nonatomic) Q loadState;
@property (nonatomic) q scalingMode;
@property (nonatomic) q alignMode;
@property (nonatomic) double alignRatio;
@property (nonatomic) {CGRect={CGPoint=dd}{CGSize=dd}} normalizeCropArea;
@property (nonatomic) BOOL muted;
@property (nonatomic) double playbackSpeed;
@property (nonatomic) TTVideoEngineAVPlayerItemAccessLog accessLog;
@property (nonatomic) Q imageScaleType;
@property (nonatomic) Q enhancementType;
@property (nonatomic) Q imageLayoutType;
@property (nonatomic) Q renderType;
@property (nonatomic) Q renderEngine;
@property (nonatomic) Q finalRenderEngine;
@property (nonatomic) q rotateType;
@property (nonatomic) q mirrorType;
@property (nonatomic) BOOL optimizeMemoryUsage;
@property (nonatomic) BOOL looping;
@property (nonatomic) q loopWay;
@property (nonatomic) BOOL asyncInit;
@property (nonatomic) BOOL asyncPrepare;
@property (nonatomic) BOOL hardwareDecode;
@property (nonatomic) BOOL ksyByteVC1Decode;
@property (nonatomic) BOOL barrageMaskEnable;
@property (nonatomic) BOOL aiBarrageEnable;
@property (nonatomic) q openTimeOut;
@property (nonatomic) q smoothDelayedSeconds;
@property (nonatomic) double startTime;
@property (nonatomic) NSDictionary metadata;
@property (nonatomic) <AVAssetResourceLoaderDelegate> resourceLoaderDelegate;
@property (nonatomic) BOOL isPauseWhenNotReady;
@property (nonatomic) double volume;
@property (nonatomic) UIImage attachedPic;
@property (nonatomic) q enableReportAllBufferUpdate;
@property (nonatomic) BOOL subEnable;
@property (nonatomic) NSString subTitleUrlInfo;
@property (nonatomic) q subLanguageId;
@property (nonatomic) BOOL enableRemoveTaskQueue;
@property (nonatomic) Q hash;
@property (nonatomic) # superclass;
@property (nonatomic) NSString description;
@property (nonatomic) NSString debugDescription;
- (id)copyPixelBuffer;
- (void)setEnableReportAllBufferUpdate:;
- (void)setLoadControl:;
- (unsigned long long)enhancementType;
- (unsigned long long)imageLayoutType;
- (void)setOpenTimeOut:;
- (void)setPrepareFlag:;
- (BOOL)asyncClose;
- (id)attachedPic;
- (long long)audioBufferLength;
- (long long)bufferingProgress;
- (void)closeAsync;
- (id)currentCDNHost;
- (void)dynamicGaussianBlurResetViewSize:;
- (unsigned long long)finalRenderEngine;
- (id)getExtraViewForViewType:;
- (double)getFloatValueForKey:;
- (float)getFloatValueForKeyType:forType:;
- (BOOL)getHLSProxyProtocolRegistered;
- (long long)getInt64Value:forKey:;
- (long long)getInt64ValueForKey:;
- (int)getIntValue:forKey:;
- (int)getIntValueForKey:;
- (int)getIntValueForKeyType:forType:;
- (id)getIpAddress;
- (BOOL)getMedialoaderProtocolRegistered;
- (id)getStreamInfo;
- (id)getStringValueForKey:;
- (id)getStringValueForKeyType:forType:;
- (id)getSubtitleContent:Params:;
- (BOOL)hardwareDecode;
- (unsigned long long)imageScaleType;
- (id)initWithOwnPlayer:;
- (id)initWithType:async:;
- (BOOL)isCustomPlayer;
- (BOOL)isPauseWhenNotReady;
- (BOOL)isPrerolling;
- (BOOL)ksyByteVC1Decode;
- (long long)numberOfBytesPlayed;
- (long long)openTimeOut;
- (BOOL)optimizeMemoryUsage;
- (unsigned long long)renderEngine;
- (unsigned long long)renderType;
- (void)resetPlayerVideoProcessor;
- (void)resetWhenGivebackToPool;
- (id)resourceLoaderDelegate;
- (void)setAIBarrageInfo:;
- (void)setAiBarrageEnable:;
- (void)setAlignMode:;
- (void)setAlignRatio:;
- (void)setAsyncClose:;
- (void)setAsyncInit:;
- (void)setAsyncPrepare:;
- (void)setBarrageMaskEnable:;
- (void)setCacheFile:forMode:;
- (void)setContentURLString:;
- (void)setCurrentPlaybackTime:complete:;
- (void)setCurrentPlaybackTime:complete:renderComplete:;
- (void)setDrmCreater:;
- (void)setEnableRemoveTaskQueue:;
- (void)setEnhancementType:;
- (void)setFloatValue:forKey:;
- (void)setHardwareDecode:;
- (void)setIgnoreAudioInterruption:;
- (void)setImageLayoutType:;
- (void)setImageScaleType:;
- (void)setIntValue:forKey:;
- (void)setIsPauseWhenNotReady:;
- (void)setKsyByteVC1Decode:;
- (void)setLoopWay:;
- (void)setNormalizeCropArea:;
- (void)setOptimizeMemoryUsage:;
- (void)setRenderEngine:;
- (void)setResourceLoaderDelegate:;
- (void)setRotateType:;
- (void)setSmoothDelayedSeconds:;
- (void)setSubEnable:;
- (void)setSubInfo:;
- (void)setSubLanguageId:;
- (void)setSubTitleUrlInfo:;
- (void)setTraitObjectValue:forKey:;
- (void)setUpPlayerViewWrapper:;
- (void)setValueString:forKey:;
- (void)setValueVoidPTR:forKey:;
- (long long)smoothDelayedSeconds;
- (void)switchStreamBitrate:ofType:completion:;
- (long long)videoBufferLength;
- (BOOL)muted;
- (id)engine;
- (void)setEngine:;
- (id)init;
- (double)volume;
- (BOOL)isPlaying;
- (void)dealloc;
- (void)setCurrentPlaybackTime:;
- (long long)playbackState;
- (unsigned long long)loadState;
- (void)play;
- (double)currentPlaybackTime;
- (void)setVolume:;
- (void)setLooping:;
- (void)setStartTime:;
- (void)setDelegate:;
- (id)metadata;
- (void)setMuted:;
- (void)stop;
- (void)pause:;
- (id)contentURL;
- (void)close;
- (double)startTime;
- (id)getVersion;
- (void)setEffect:;
- (id)view;
- (void)setRenderType:;
- (id)delegate;
- (void).cxx_destruct;
- (void)pause;
- (double)duration;
- (float)currentRate;
- (BOOL)looping;
- (double)playbackSpeed;
- (void)setPlaybackSpeed:;
- (void)setContentURL:;
- (void)setCustomHeader:;
- (void)prepareToPlay;
- (void)setAVPlayerItem:;
- (long long)scalingMode;
- (void)setScalingMode:;
- (id)accessLog;
- (long long)numberOfBytesTransferred;
- (double)playableDuration;
- (long long)downloadSpeed;
- (long long)mediaSize;
- (void)setMaskInfo:;
+ (void)setEffect:;
@end
