@interface RPCompanionLinkClient : NSObject
@property (nonatomic) I clientID;
@property (nonatomic) I internalAuthFlags;
@property (nonatomic) RPCompanionLinkDevice localDevice;
@property (nonatomic) BOOL usingOnDemandConnection;
@property (nonatomic) NSString appID;
@property (nonatomic) double awdlGuestDiscoveryTimeout;
@property (nonatomic) q bleClientUseCase;
@property (nonatomic) NSString cloudServiceID;
@property (nonatomic) Q controlFlags;
@property (nonatomic) @? disconnectHandler;
@property (nonatomic) RPCompanionLinkDevice destinationDevice;
@property (nonatomic) NSObject<OS_dispatch_queue> dispatchQueue;
@property (nonatomic) Q errorFlags;
@property (nonatomic) @? errorFlagsChangedHandler;
@property (nonatomic) I flags;
@property (nonatomic) @? interruptionHandler;
@property (nonatomic) @? invalidationHandler;
@property (nonatomic) q rssiThreshold;
@property (nonatomic) BOOL targetUserSession;
@property (nonatomic) I useCase;
@property (nonatomic) NSArray activeDevices;
@property (nonatomic) RPCompanionLinkDevice activePersonalCompanion;
@property (nonatomic) @? deviceFoundHandler;
@property (nonatomic) @? deviceLostHandler;
@property (nonatomic) @? deviceChangedHandler;
@property (nonatomic) @? localDeviceUpdatedHandler;
@property (nonatomic) NSDictionary siriInfo;
@property (nonatomic) @? stateUpdatedHandler;
@property (nonatomic) NSArray allowedMACAddresses;
@property (nonatomic) NSArray pairSetupACL;
@property (nonatomic) I pairSetupFlags;
@property (nonatomic) I pairVerifyFlags;
@property (nonatomic) NSString password;
@property (nonatomic) NSInteger passwordType;
@property (nonatomic) NSInteger passwordTypeActual;
@property (nonatomic) @? authCompletionHandler;
@property (nonatomic) @? showPasswordHandler;
@property (nonatomic) @? hidePasswordHandler;
@property (nonatomic) @? promptForPasswordHandler;
@property (nonatomic) NSString serviceType;
- (id)pairSetupACL;
- (unsigned int)pairVerifyFlags;
- (unsigned int)internalAuthFlags;
- (id)deviceFoundHandler;
- (unsigned long long)controlFlags;
- (int)passwordTypeActual;
- (id)deviceChangedHandler;
- (void)setDeviceFoundHandler:;
- (void)setDeviceLostHandler:;
- (void)setPassword:;
- (unsigned int)useCase;
- (id)init;
- (void)setControlFlags:;
- (void)setPairVerifyFlags:;
- (id)password;
- (id)interruptionHandler;
- (void)setPromptForPasswordHandler:;
- (id)allowedMACAddresses;
- (void)setTargetUserSession:;
- (void)_invalidated;
- (void)setPairSetupACL:;
- (BOOL)targetUserSession;
- (void)setInterruptionHandler:;
- (void)setAllowedMACAddresses:;
- (int)passwordType;
- (id)dispatchQueue;
- (id)serviceType;
- (void)setUseCase:;
- (id)localDevice;
- (void)_lostAllDevices;
- (void)setDispatchQueue:;
- (void)setClientID:;
- (void)setServiceType:;
- (id)initWithCoder:;
- (id)showPasswordHandler;
- (long long)rssiThreshold;
- (void)setStateUpdatedHandler:;
- (void)_interrupted;
- (id)authCompletionHandler;
- (id)_ensureXPCStarted;
- (void)activateWithCompletion:;
- (void)encodeWithCoder:;
- (void)setAppID:;
- (id)promptForPasswordHandler;
- (void)setPairSetupFlags:;
- (id)appID;
- (id)_XPCConnectionWithMachServiceName:options:;
- (void).cxx_destruct;
- (void)setAuthCompletionHandler:;
- (void)setPasswordType:;
- (void)setDeviceChangedHandler:;
- (void)setRssiThreshold:;
- (id)invalidationHandler;
- (void)setInvalidationHandler:;
- (id)description;
- (void)setLocalDevice:;
- (void)setFlags:;
- (id)stateUpdatedHandler;
- (unsigned int)flags;
- (id)activeDevices;
- (id)hidePasswordHandler;
- (id)deviceLostHandler;
- (unsigned int)pairSetupFlags;
- (unsigned int)clientID;
- (id)initWithUserProvider:;
- (void)invalidate;
- (void)tryPassword:;
- (void)setHidePasswordHandler:;
- (void)setShowPasswordHandler:;
- (void)_invokeBlockActivateSafe:;
- (void)setLocalDeviceUpdatedHandler:;
- (void)registerEventID:options:handler:;
- (void)deregisterEventID:;
- (void)sendEventID:event:options:completion:;
- (void)registerRequestID:options:handler:;
- (void)deregisterRequestID:;
- (void)sendRequestID:request:options:responseHandler:;
- (id)destinationDevice;
- (void)setDestinationDevice:;
- (void)registerProfileID:completion:;
- (void)sendRequestID:request:destinationID:options:responseHandler:;
- (void)sendEventID:event:destinationID:options:completion:;
- (id)disconnectHandler;
- (void)setDisconnectHandler:;
- (void)companionLinkPromptForPasswordType:flags:throttleSeconds:;
- (void)companionLinkAuthCompleted:;
- (void)companionLinkFoundDevice:;
- (void)companionLinkLostDevice:;
- (void)companionLinkChangedDevice:changes:;
- (void)companionLinkLocalDeviceUpdated:;
- (void)companionLinkReceivedEventID:event:options:;
- (void)companionLinkReceivedRequestID:request:options:responseHandler:;
- (void)companionLinkHandleDisconnect;
- (void)companionLinkUpdateErrorFlags:;
- (void)companionLinkUpdateClientState:;
- (void)setSiriInfo:;
- (void)_activateWithCompletion:reactivate:;
- (id)_clientError:;
- (id)_connectionWithClient:queue:userProvider:interruptionHandler:invalidationHandler:;
- (id)activateAssertionID:destinationID:options:completion:;
- (void)_invalidateAssertion:;
- (void)_reregisterAssertions;
- (id)activePersonalCompanion;
- (BOOL)shouldReportDevice:toXPCConnectionWithLaunchInstanceID:outReason:;
- (void)_registerEventID:options:reregister:;
- (void)_reregisterEvents;
- (void)_registerRequestIDOnQueue:options:handler:;
- (void)_registerRequestID:options:reregister:;
- (void)_reregisterRequests;
- (void)launchAppWithBundleID:destinationID:completion:;
- (void)launchAppWithURL:destinationID:completion:;
- (void)triggerEnhancedDiscoveryForReason:completion:;
- (void)triggerEnhancedDiscoveryForReason:useCase:completion:;
- (void)createDeviceToEndpointMappingForDevice:completion:;
- (void)_registerProfileID:reregister:completion:;
- (void)_reregisterProfileIDs;
- (void)deregisterProfileID:completion:;
- (double)awdlGuestDiscoveryTimeout;
- (void)setAwdlGuestDiscoveryTimeout:;
- (long long)bleClientUseCase;
- (void)setBleClientUseCase:;
- (id)cloudServiceID;
- (void)setCloudServiceID:;
- (unsigned long long)errorFlags;
- (void)setErrorFlags:;
- (id)errorFlagsChangedHandler;
- (void)setErrorFlagsChangedHandler:;
- (id)localDeviceUpdatedHandler;
- (BOOL)usingOnDemandConnection;
- (void)setUsingOnDemandConnection:;
- (id)siriInfo;
+ (BOOL)supportsSecureCoding;
@end
