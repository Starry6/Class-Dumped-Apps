@interface CNContactStore : NSObject
@property (nonatomic) Q hash;
@property (nonatomic) # superclass;
@property (nonatomic) NSString description;
@property (nonatomic) NSString debugDescription;
@property (nonatomic) Q hash;
@property (nonatomic) # superclass;
@property (nonatomic) NSString description;
@property (nonatomic) NSString debugDescription;
@property (nonatomic) Q hash;
@property (nonatomic) # superclass;
@property (nonatomic) NSString description;
@property (nonatomic) NSString debugDescription;
@property (nonatomic) Q hash;
@property (nonatomic) # superclass;
@property (nonatomic) NSString description;
@property (nonatomic) NSString debugDescription;
@property (nonatomic) _EMContactsCache em_cache;
@property (nonatomic) Q hash;
@property (nonatomic) # superclass;
@property (nonatomic) NSString description;
@property (nonatomic) NSString debugDescription;
@property (nonatomic) CNiOSAddressBookDataMapper iOSMapper;
@property (nonatomic) CNiOSAddressBook addressBook;
@property (nonatomic) CNResult currentHistoryAnchor;
@property (nonatomic) NSData currentHistoryToken;
- (id)allContactIDsMatchingEmailAddress:;
- (id)allContactIDsMatchingEmailAddress:orPhoneNumber:;
- (id)_allContactIDsMatchingPredicate:keysToFetch:;
- (id)contactsMatchingEmailAddress:keysToFetch:;
- (id)contactsMatchingPhoneNumber:keysToFetch:;
- (id)contactForIdentifier:;
- (id)contactForIdentifier:keysToFetch:;
- (id)contactForDestinationId:;
- (id)contactForDestinationId:keysToFetch:;
- (id)tu_contactsForContactHandles:keyDescriptors:error:;
- (id)tu_contactsForHandles:keyDescriptors:error:;
- (id)tu_contactsByContactHandleForContactHandles:keyDescriptors:error:;
- (id)tu_enumeratorForChangeHistoryFetchRequest:error:;
- (id)tu_contactsByHandleForHandles:keyDescriptors:error:;
- (id)tu_contactsByConversationMemberForConversationMembers:keyDescriptors:error:;
- (id)tu_contactsByRemoteConversationMemberForConversations:keyDescriptors:error:;
- (id)em_fetchContactForEmailAddress:keysToFetch:createIfNeeded:;
- (id)em_fetchContactForEmailAddress:keysToFetch:allowMatchOnDisplayName:createIfNeeded:;
- (id)_fetchContactForEmailAddress:keysToFetch:allowMatchOnDisplayName:createIfNeeded:error:;
- (id)em_onScheduler:contactFutureForEmailAddress:keysToFetch:;
- (id)em_contactsFutureOnScheduler:forEmailAddresses:keysToFetch:;
- (id)_bestContactForEmailAddress:keysToFetch:allowMatchOnDisplayName:error:;
- (id)_allContactsForEmailAddress:keysToFetch:error:;
- (id)_allContactsForName:keysToFetch:error:;
- (id)allContactEmailAddressesWithError:;
- (id)em_cache;
- (BOOL)hasGroups;
- (id)unifiedContactsMatchingPredicate:keysToFetch:error:;
- (id)unifiedContactCountWithError:;
- (id)identifierWithError:;
- (id)currentHistoryToken;
- (id)userActivityUserInfoForContact:;
- (BOOL)setMeContact:error:;
- (id)serverSearchContainersMatchingPredicate:error:;
- (id)contactCountForFetchRequest:error:;
- (BOOL)registerChangeHistoryClientIdentifier:forContainerIdentifier:error:;
- (BOOL)executeChangeHistoryClearRequest:error:;
- (id)executeFetchRequest:progressiveResults:completion:;
- (id)currentHistoryAnchor;
- (id)meContactIdentifiers:;
- (id)matchingDictionaryForContact:;
- (BOOL)unregisterChangeHistoryClientIdentifier:forContainerIdentifier:error:;
- (BOOL)setMeContact:forContainer:error:;
- (id)contactWithUserActivityUserInfo:keysToFetch:;
- (id)changeHistoryWithFetchRequest:error:;
- (BOOL)executeSaveRequest:error:;
- (BOOL)enumerateContactsAndMatchInfoWithFetchRequest:error:usingBlock:;
- (id)requestAccessForEntityType:;
- (id)executeFetchRequest:error:;
- (BOOL)executeSaveRequest:response:authorizationContext:error:;
- (id)accountsMatchingPredicate:error:;
- (void)requestAccessForEntityType:completionHandler:;
- (id)groupsMatchingPredicate:error:;
- (id)init;
- (id)defaultContainerIdentifier;
- (id)enumeratorForChangeHistoryFetchRequest:error:;
- (id)containersMatchingPredicate:error:;
- (id)policyWithDescription:error:;
- (id)subgroupsOfGroupWithIdentifier:error:;
- (id)iOSMapper;
- (id)initWithEnvironment:;
- (BOOL)enumerateNonUnifiedContactsWithFetchRequest:error:usingBlock:;
- (BOOL)unregisterChangeHistoryClientIdentifier:error:;
- (id)enumeratorForContactFetchRequest:error:;
- (id)membersOfGroupWithIdentifier:keysToFetch:error:;
- (id)_crossPlatformUnifiedMeContactWithKeysToFetch:error:;
- (BOOL)resetSortDataIfNeededWithError:;
- (BOOL)supportsSaveRequest:;
- (id)policyForContainerWithIdentifier:error:;
- (int)saveSequenceCount;
- (id)contactIdentifierWithMatchingDictionary:;
- (id)authorizedKeysForContactKeys:;
- (BOOL)hasMultipleGroupsOrAccounts;
- (id)addressBook;
- (void).cxx_destruct;
- (id)sectionListOffsetsForSortOrder:error:;
- (id)usedLabelsForPropertyWithKey:error:;
- (id)originForSuggestion:error:;
- (BOOL)setBestMeIfNeededForGivenName:familyName:email:error:;
- (id)personFromContact:;
- (id)descriptorForRequiredKeysForMatchingDictionary;
- (BOOL)moveContacts:fromContainer:toContainer:error:;
- (BOOL)registerChangeHistoryClientIdentifier:error:;
- (BOOL)setDefaultAccountIdentifier:error:;
- (BOOL)clearChangeHistoryForClientIdentifier:toChangeAnchor:error:;
- (id)countForFetchRequest:error:;
- (id)mainContactStore;
- (id)initWithConfiguration:;
- (id)groupWithIdentifier:error:;
- (id)initWithEnvironment:options:managedConfiguration:;
- (id)unifiedContactWithIdentifier:keysToFetch:error:;
- (BOOL)enumerateContactsWithFetchRequest:error:usingBlock:;
- (id)_ios_meContactWithKeysToFetch:error:;
- (id)contactWithMatchingDictionary:keysToFetch:;
- (void)reindexSearchableItemsWithIdentifiers:;
- (id)descriptorForRequiredKeysForUserActivityUserInfo;
- (id)contactFromPerson:keysToFetch:;
- (id)contactFromPerson:keysToFetch:mutable:;
- (id)contactFromPublicABPerson:keysToFetch:;
- (id)initWithEnvironment:options:;
- (id)_ios_meContactIdentifierWithError:;
- (id)unifiedMeContactWithKeysToFetch:error:;
- (id)unifiedMeContactMatchingEmailAddresses:keysToFetch:error:;
- (id)unifiedMeContactMatchingEmailAddress:keysToFetch:error:;
- (id)executeFetchRequest:completion:;
- (id)latestConsumedChangeHistoryAnchorForClientIdentifier:error:;
- (BOOL)verifyChangeHistoryForClientIdentifier:error:;
- (id)individualContactCountWithError:;
- (void)requestAuthorization:entityType:completionHandler:;
- (BOOL)hasAccountFirstSyncCompleted;
- (id)verifyIndexWithError:;
- (id)synchronousRemoteObjectProxyForContactsXPCService;
- (BOOL)setDefaultContainer:forAccount:error:;
- (id)contactFromPerson:;
- (id)contactFromPerson:mutable:;
- (id)contactFromPersonID:;
- (id)_contactFromPersonID:keysToFetch:;
- (id)contactFromPersonID:keysToFetch:;
- (id)contactIdentifierFromPersonID:;
- (int)multiValueIdentifierFromLabeledValue:;
- (id)labeledValueFromMultiValueIdentifier:contact:key:;
- (id)publicABPersonFromContact:publicAddressBook:;
- (int)publicMultiValueIdentifierFromLabeledValue:;
- (id)labeledValueFromPublicMultiValueIdentifier:contact:key:;
- (id)contactFromPublicPersonID:keysToFetch:;
- (id)contactIdentifierFromPublicPersonID:;
- (id)_fetchRequestInfosForEmailOrPhoneForContact:;
- (id)_executeFetchRequestsWithInfos:unifyResults:keysToFetch:error:;
- (id)contactsMatchingPropertiesOfContact:unifyResults:keysToFetch:error:;
- (id)_contactFromPublicABPerson:keysToFetch:;
- (id)_publicABPersonFromContact:publicAddressBook:;
- (int)_publicMultiValueIdentifierFromLabeledValue:;
- (id)_labeledValueFromPublicMultiValueIdentifier:contact:key:;
+ (long long)tu_authorizationStatus;
+ (BOOL)tu_isAuthorized;
+ (id)tu_contactStore;
+ (id)log;
+ (id)storeIdentifier;
+ (long long)authorizationStatusForEntityType:;
+ (id)storeInfoClasses;
+ (BOOL)isAccessRestrictedForEntityType:;
+ (id)standardLabelsForPropertyWithKey:options:;
+ (id)storeForFamilyMember:;
+ (id)storeWithOptions:;
+ (id)storeWithDelegateInfo:;
+ (BOOL)eraseAllDataAtLocationWithName:error:;
+ (BOOL)eraseAllDataAtURL:error:;
+ (id)storeWithEnvironment:options:;
+ (Class)storeClassWithIdentifier:;
+ (id)contactIdentifierFromInternalIdentifier:;
+ (id)storeIdentifierFromContactIdentifier:;
+ (id)internalIdentifierFromContactIdentifier:;
+ (id)standardLabelsForPropertyWithKey:;
+ (long long)authorizationStatusForEntityType:assumedIdentity:;
+ (BOOL)isXPCDataMapperStore:;
+ (id)contactStoreForPublicAddressBook:;
+ (id)_contactStoreForPublicAddressBook:;
@end
