@interface BDUGLuckyActivityTaskManager : NSObject
@property (nonatomic) Q hash;
@property (nonatomic) # superclass;
@property (nonatomic) NSString description;
@property (nonatomic) NSString debugDescription;
@property (nonatomic) NSMutableDictionary taskExecuteClass;
@property (nonatomic) {_opaque_pthread_mutex_t=q[56c]} executeClassLock;
@property (nonatomic) NSMutableDictionary executeQueue;
@property (nonatomic) {_opaque_pthread_mutex_t=q[56c]} executeQueueLock;
@property (nonatomic) NSMutableDictionary pendingTasks;
@property (nonatomic) {_opaque_pthread_mutex_t=q[56c]} pendingTasksLock;
@property (nonatomic) q saveInterval;
@property (nonatomic) BOOL managerEnabled;
@property (nonatomic) BOOL coldLaunchRecoverEnabled;
@property (nonatomic) BOOL enterBackSaveEnabled;
@property (nonatomic) BDUGLuckyActivityFullRoadConfig trackerConfig;
@property (nonatomic) q cacheExpireInterval;
@property (nonatomic) NSObject<OS_dispatch_queue> dispatchQueue;
@property (nonatomic) Q hash;
@property (nonatomic) # superclass;
@property (nonatomic) NSString description;
@property (nonatomic) NSString debugDescription;
- (id)__defaultDomain;
- (BOOL)registerTaskClass:withTaskType:;
- (BOOL)saveStashedTask:withIdentifier:;
- (id)__activityTaskSettings;
- (void)__addNotification;
- (void)__clearExpiredStashedTasksWithIdentifier:defaultIsExpire:;
- (id)__decodeTask:;
- (void)__decodeTasksAsync:completion:;
- (id)__defaultPath;
- (id)__encodeTask:;
- (void)__encodeTasksAsync:completion:;
- (id)__findConflictTasksForUnique:;
- (id)__fullPathTraceParamsForGlobalTaskId:event:;
- (Class)__getExecuteClsForTaskType:;
- (BOOL)__hasMatchedRulesWithMatchRules:parameter:;
- (void)__loadConfigFromTaskManagerSettings;
- (void)__recoverAtColdLaunch;
- (void)__registerAllTasks;
- (void)__registerClassFromSettings;
- (void)__sendExpiredNotification:;
- (void)__settingsDidUpdate;
- (void)__setupTrackerHooker;
- (void)__stashTasks:identifier:;
- (void)__trackerTaskIfNeededWithConfig:event:parameter:;
- (void)addSessionInfoWithGlobalTaskId:forParams:event:;
- (void)applicationWillResignActiveNotification;
- (long long)cacheExpireInterval;
- (void)cancelTaskPersistenceWithGlobalTaskId:;
- (void)cancelTaskPersistenceWithGlobalTaskId:withIdentifier:;
- (void)clearAllStashedTaskWithIdentifier:;
- (void)clearAllTask;
- (void)clearExpiredStashedTasks;
- (BOOL)coldLaunchRecoverEnabled;
- (void)doActionWithToken:uniqueID:extra:extraParams:autoReleaseTask:completion:;
- (void)doActionWithToken:uniqueID:extra:extraParams:completion:;
- (void)doActionWithToken:uniqueID:globalTaskID:extra:extraParams:autoReleaseTask:completion:;
- (BOOL)enterBackSaveEnabled;
- (id)executeClassLock;
- (id)executeQueue;
- (id)executeQueueLock;
- (void)executeTaskWithModel:;
- (void)executeTaskWithModel:source:;
- (id)fullTrackerConfig;
- (id)getAllCachedStashedGlobalTaskIds;
- (id)getAllCachedTask;
- (id)getCachedStashedTasksWithIdentifier:;
- (id)getCachedTasks;
- (void)getCachedTasksAsync:;
- (id)getPendingTaskTokensInMemory;
- (id)getRegisteredExecuteClass;
- (id)getRunningTaskTokens;
- (id)getTaskWithGlobalTaskId:;
- (void)lucky_setupTrackerHooker;
- (BOOL)managerEnabled;
- (void)onEventV3:parameter:;
- (id)pendingTasksLock;
- (void)persistentPendingTask:withIdentifier:;
- (BOOL)registerTaskClass:;
- (void)removeCachedStashedWithGlobalTaskId:withIdentifier:;
- (void)removeCachedTaskWithGlobalTaskId:;
- (void)removeCachedTasksWithGlobalTaskId:;
- (BOOL)saveTask:;
- (void)setCacheExpireInterval:;
- (void)setColdLaunchRecoverEnabled:;
- (void)setEnterBackSaveEnabled:;
- (void)setExecuteClassLock:;
- (void)setExecuteQueue:;
- (void)setExecuteQueueLock:;
- (void)setManagerEnabled:;
- (void)setPendingTasksLock:;
- (void)setTaskExecuteClass:;
- (void)setTrackerConfig:;
- (void)stashPopTasksWithIdentifier:;
- (void)stashTasksWithTaskTypes:identifier:;
- (void)stashTasksWithUniqueTypes:identifier:;
- (void)stopTaskWithGlobalTaskId:;
- (void)taskDidComplete:needRelease:;
- (void)taskDidCompletedWithTaskToken:needRelease:;
- (void)taskDidFail:failReason:;
- (void)taskDidOpenFailedWithTaskId:actId:globalId:taskType:failReason:source:;
- (void)taskDidUpdate:;
- (id)taskExecuteClass;
- (void)taskWillRelease:;
- (id)trackerConfig;
- (void)unregisterExecutorForTaskType:;
- (id)init;
- (void)dealloc;
- (id)dispatchQueue;
- (void)setDispatchQueue:;
- (void).cxx_destruct;
- (long long)saveInterval;
- (void)setSaveInterval:;
- (id)pendingTasks;
- (void)setPendingTasks:;
+ (void)__settingsDidUpdate;
+ (void)initializeActivityTaskManager;
+ (void)onCleanCache;
+ (void)preStartupTaskManagerModule;
+ (id)sharedInstance;
+ (id)moduleName;
+ (id)serviceProtocol;
@end
