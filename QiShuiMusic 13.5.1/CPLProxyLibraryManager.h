@interface CPLProxyLibraryManager : CPLPlatformObject
@property (nonatomic) NSObject<OS_dispatch_queue> queue;
@property (nonatomic) Q hash;
@property (nonatomic) # superclass;
@property (nonatomic) NSString description;
@property (nonatomic) NSString debugDescription;
- (id)proxyWithErrorHandler:;
- (void)barrier;
- (void)getSystemBudgetsWithCompletionHandler:;
- (void)fetchExistingSharedLibraryScopeWithCompletionHandler:;
- (void)sharedLibraryRampCheckWithCompletionHandler:;
- (void)acknowledgeChangedStatuses:;
- (void)beginInMemoryDownloadOfResource:completionHandler:;
- (void)getStatusArrayForComponents:completionHandler:;
- (void)resetCacheWithOption:reason:completionHandler:;
- (void)checkHasBackgroundDownloadOperationsWithCompletionHandler:;
- (void)cancelTask:;
- (void)deactivateWithCompletionHandler:;
- (void)noteClientIsBeginningSignificantWork;
- (void)forceSynchronizingScopeWithIdentifiers:completionHandler:;
- (void)unblockEngineElement:;
- (void)acceptSharedScope:completionHandler:;
- (void)setShouldOverride:forSystemBudgets:;
- (void)getListOfComponentsWithCompletionHandler:;
- (void)resetStatus;
- (id)_connection;
- (void)getChangedStatusesWithCompletionHandler:;
- (void)testKey:value:completionHandler:;
- (void)deactivateScopeWithIdentifier:completionHandler:;
- (void)boostPriorityForScopeWithIdentifier:completionHandler:;
- (void)noteClientIsEndingSignificantWork;
- (void)provideScopeChangeForScopeWithIdentifier:completionHandler:;
- (void)_setupConnection;
- (void)getResourcesForItemWithScopedIdentifier:completionHandler:;
- (void)enableSynchronizationWithReason:;
- (void)updateShareForScope:completionHandler:;
- (void)fetchSharedScopeFromShareURL:completionHandler:;
- (void)noteClientIsInForegroundQuietly:;
- (void)activateScopeWithIdentifier:completionHandler:;
- (void)noteClientIsInBackground;
- (void)getScopeStatusCountsForScopeWithIdentifier:completionHandler:;
- (void)disableSynchronizationWithReason:;
- (void)noteClientReceivedNotificationOfServerChanges;
- (void)resolveLocalScopedIdentifiersForCloudScopedIdentifiers:completionHandler:;
- (id)initWithAbstractObject:;
- (void)getCloudCacheForRecordWithScopedIdentifier:completionHandler:;
- (void)compactFileCacheWithCompletionHandler:;
- (void)openWithCompletionHandler:;
- (void)blockEngineElement:;
- (void)startSyncSession;
- (void)disableMingling;
- (void)unblockEngineElementOnce:;
- (void)deleteResources:checkServerIfNecessary:completionHandler:;
- (void)addInfoToLog:;
- (void)_invokeSyncOutstandingInvocationsWithTaskIdentifier:;
- (void)enableMingling;
- (void)getTargetsForRecordsWithScopedIdentifiers:completionHandler:;
- (void)requestClientToPushAllChangesWithCompletionHandler:;
- (void)provideRecordWithCloudScopeIdentifier:completionHandler:;
- (void)deleteScopeWithIdentifier:forced:completionHandler:;
- (void)addDropDerivativesRecipe:writeToUserDefaults:withCompletionHandler:;
- (void)getStatusForComponents:completionHandler:;
- (void)getStreamingURLForResource:intent:hints:timeRange:clientBundleID:completionHandler:;
- (void)closeWithCompletionHandler:;
- (void)reportSetting:hasBeenSetToValue:;
- (void)_storeVoucher:forTaskWithIdentifier:;
- (void)reportMiscInformation:;
- (void)dealloc;
- (void)backgroundDownloadDidFailForResource:;
- (void)libraryManagerDidUpdateStatusWithProperties:;
- (void)createScope:completionHandler:;
- (void)uploadOfResource:didProgress:forResourceTransferTask:;
- (void)provideLocalResource:recordClassString:completionHandler:;
- (void)checkResourcesAreSafeToPrune:checkServerIfNecessary:completionHandler:;
- (void)_callBlockOnDaemonDying;
- (void)pushAllChangesWithCompletionHandler:;
- (void)dispatchBlockWhenLibraryIsOpen:;
- (void)_dispatchFailedInMemoryDownloadTaskForResource:withError:withCompletionHandler:;
- (void)libraryManagerHasStatusChanges;
- (BOOL)_setStatusFromDictionary:;
- (void)downloadDidProgress:forResourceTransferTask:;
- (void)startExitFromSharedScopeWithIdentifier:retentionPolicy:exitSource:completionHandler:;
- (void)_withVoucherForTaskWithIdentifier:do:;
- (void)_dispatchFailedDownloadTaskForResource:options:proposedTaskIdentifier:withError:withCompletionHandler:;
- (void)libraryManagerDidUpdateSizeOfResourcesToUploadToSize:sizeOfOriginalResourcesToUpload:numberOfImages:numberOfVideos:numberOfOtherItems:;
- (void)getStatusForRecordsWithScopedIdentifiers:completionHandler:;
- (void)uploadDidStartForResource:withResourceTransferTask:;
- (void)uploadOfResource:didFinishForResourceTransferTask:withError:;
- (void)cancelSyncTask:;
- (id)_uploadTaskDidStartForResource:withTaskIdentifier:;
- (void)downloadDidStartForResourceTransferTask:;
- (void)getStatusesForScopesWithIdentifiers:includeStorages:completionHandler:;
- (void)_reallyOpenWithCompletionHandler:;
- (void)inMemoryDownloadDidFinishForResourceTransferTask:data:withError:;
- (void)libraryManagerHasBeenReplaced;
- (void)connection:handleInvocation:isReply:;
- (void)_dispatchBlockWhenOpen:;
- (void)_dispatchFailedForceSyncTaskForScopeIdentifiers:withError:withCompletionHandler:;
- (void)backgroundDownloadDidFinishForResource:;
- (void)_dropConnectionCompletlyLocked;
- (void)forceBackupWithCompletionHandler:;
- (void)_invokeOutstandingInvocationsWithTaskIdentifier:;
- (void).cxx_destruct;
- (void)_markConnectionAsInvalid;
- (void)_dropVoucherForTaskWithIdentifier:;
- (void)addStatusChangesForRecordsWithScopedIdentifiers:persist:;
- (void)cloudCacheGetDescriptionForRecordWithScopedIdentifier:related:completionHandler:;
- (void)getMappedScopedIdentifiersForScopedIdentifiers:inAreLocalIdentifiers:completionHandler:;
- (void)_dropConnectionCompletly;
- (void)beginDownloadForResource:clientBundleID:options:proposedTaskIdentifier:completionHandler:;
- (void)getStatusForPendingRecordsSharedToScopeWithIdentifier:maximumCount:completionHandler:;
- (void)forceSyncDidFinishForTask:withErrors:;
- (void)_setCallBlockOnDaemonDying:;
- (void)rampingRequestForResourceType:numRequested:completionHandler:;
- (id)queue;
- (void)libraryManagerHasChangesToPull;
- (void)provideCloudResource:completionHandler:;
- (void)downloadDidFinishForResourceTransferTask:finalResource:withError:;
- (void)queryUserDetailsForShareParticipants:completionHandler:;
- (void)removeParticipants:fromSharedScopeWithIdentifier:retentionPolicy:exitSource:completionHandler:;
+ (id)daemonProtocolInterface;
+ (id)clientProtocolInterface;
@end
