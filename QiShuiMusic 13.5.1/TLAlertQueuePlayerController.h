@interface TLAlertQueuePlayerController : NSObject
@property (nonatomic) Q hash;
@property (nonatomic) # superclass;
@property (nonatomic) NSString description;
@property (nonatomic) NSString debugDescription;
- (id)init;
- (void)dealloc;
- (void)observeValueForKeyPath:ofObject:change:context:;
- (void)playAlert:withCompletionHandler:;
- (void)handleActivationAssertionStatusChangeForAlert:updatedStatus:;
- (void).cxx_destruct;
- (id)description;
- (void)updateAudioVolumeDynamicallyForAlert:toValue:;
- (BOOL)stopPlayingAlerts:withOptions:playbackCompletionType:;
- (void)_handleAudioSessionInterruptionNotification:;
- (void)_playAlertForStateDescriptor:previousStateDescriptor:;
- (void)_stopPlayingAlertForStateDescriptor:withOptions:playbackCompletionType:;
- (void)_handleActivationAssertionStatusChangeForAlert:updatedStatus:previousStateDescriptor:updatedStateDescriptor:;
- (BOOL)_canPlayToneAsset:;
- (void)_reloadPlaybackForStateDescriptor:withToneIdentifier:;
- (void)_startPlaybackForStateDescriptor:usingAssetWithLoadedProperties:shouldConfirmAlertStillPlaying:;
- (void)_startPlaybackForStateDescriptor:usingConfirmedPlayableAsset:;
- (void)_startPlaybackForStateDescriptor:usingConfirmedPlayableAsset:hasAlreadyDetectedUserAttention:;
- (void)_initiateAudioPlaybackForStateDescriptor:audioVolumeRampingDuration:;
- (void)_performDelayedAudioPlaybackInitiationForStateDescriptor:audioVolumeRampingDuration:;
- (void)_stopPlaybackForStateDescriptor:;
- (void)_stopPlaybackForStateDescriptor:withOptions:playerWasAlreadyPausedExternally:;
- (void)_willBeginPlayingAlertForStateDescriptor:;
- (void)_didEndPlayingAlertForStateDescriptor:;
- (void)_prepareAudioEnvironmentForStateDescriptor:;
- (void)_restoreAudioEnvironmentForStateDescriptor:;
- (void)_resetClientPriorityForStateDescriptor:;
- (void)_resetFlagsForSwitchingAuxiliaryAudioSession;
- (void)_applyAudioVolume:forAlert:;
- (void)_didReceiveAttentionPollingEventOfType:stateDescriptor:;
- (void)_createQueuePlayerIfNecessaryForStateDescriptor:;
- (void)_destroyQueuePlayerForStateDescriptor:;
- (void)_startObservingQueuePlayer;
- (void)_stopObservingQueuePlayer;
- (void)_queuePlayer:currentItemWasUpdatedFromValue:;
- (void)_queuePlayer:currentItemStatusWasUpdatedToValue:;
- (float)_audioVolumeForAlert:audioCategory:;
- (void)_activateAudioSessionIfNeededForStateDescriptor:;
- (void)_deactivateAudioSessionIfNeededForStateDescriptor:;
- (void)_startObservingAudioSessionInterruptionNotificationsForStateDescriptor:;
- (void)_stopObservingAudioSessionInterruptionNotificationsForStateDescriptor:;
- (void)_handleAudioSessionInterruptionOfType:withOptions:;
- (BOOL)_isPreventingAudioSessionDeactivation;
- (void)_beginPreventingAudioSessionDeactivation;
- (void)_endPreventingAudioSessionDeactivationForStateDescriptor:;
- (id)_fallbackToneIdentifierForStateDescriptor:;
+ (id)_propertyKeysOfInterestForToneAssets;
+ (id)_clientNameForAlert:;
+ (long long)_clientPriorityForAlert:;
+ (BOOL)_shouldEnsureActiveAudioSessionWhenStartingPlaybackForAlert:;
+ (id)_audioCategoryForAlert:externalEnvironmentValues:;
+ (unsigned long long)_audioCategoryOptionsForAlert:externalEnvironmentValues:;
+ (id)_audioModeForAlert:audioCategory:;
+ (id)_mediaExperienceAudioCategoryForAudioSessionCategory:;
+ (BOOL)_shouldBypassRingerSwitchPolicyForAlert:;
+ (BOOL)_prefersToPlayDuringWombatForAlert:;
+ (BOOL)_shouldUseAuxiliaryAudioSessionForAlert:;
+ (BOOL)_shouldHandleAudioSessionActivationForAlert:;
+ (BOOL)_shouldVibrateForAlert:;
+ (BOOL)_shouldRepeatVibrationForAlert:externalEnvironmentValues:;
+ (BOOL)_shouldApplyAttentionAwarenessEffectsForAlert:;
+ (long long)_audioVolumeApplicationPolicyForAlert:externalEnvironmentValues:;
+ (double)_audioPlaybackInitiationDelayForAlert:externalEnvironmentValues:;
+ (double)_audioVolumeRampingDurationForAlert:externalEnvironmentValues:toneAssetDuration:;
+ (BOOL)_shouldApplyStandardDelayAndAudioVolumeRampForAlert:externalEnvironmentValues:;
+ (id)_externalEnvironmentValuesForAlert:;
@end
