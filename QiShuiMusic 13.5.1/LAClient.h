@interface LAClient : NSObject
@property (nonatomic) NSXPCConnection serverConnection;
@property (nonatomic) NSObject<LAContextXPC> remoteContext;
@property (nonatomic) NSObject<LAContextXPC> synchronousRemoteContext;
@property (nonatomic) NSMutableArray invalidations;
@property (nonatomic) LACachedExternalizedContext cachedExternalizedContext;
@property (nonatomic) NSError permanentError;
@property (nonatomic) BOOL shouldRecoverConnection;
@property (nonatomic) NSNumber userSession;
@property (nonatomic) NSData existingContext;
@property (nonatomic) NSUUID uuid;
@property (nonatomic) LAContext context;
@property (nonatomic) NSData externalizedContext;
@property (nonatomic) <LAUIDelegate> uiDelegate;
@property (nonatomic) Q hash;
@property (nonatomic) # superclass;
@property (nonatomic) NSString description;
@property (nonatomic) NSString debugDescription;
- (void)notifyEvent:options:reply:;
- (id)invalidations;
- (void)evaluateACL:operation:options:reply:;
- (id)existingContext;
- (void)_performSynchronous:callId:finally:;
- (id)serverConnection;
- (void)evaluatePolicy:options:uiDelegate:reply:;
- (void)dealloc;
- (id)_updateOptions:;
- (void)invalidatedWithError:;
- (id)uiDelegate;
- (id)userSession;
- (void)evaluatePolicy:options:uiDelegate:synchronous:reply:;
- (void)_scheduleRecovery;
- (id)context;
- (void)prearmTouchIdWithReply:;
- (id)uuid;
- (void)setUiDelegate:;
- (void)_synchronousRemoteObjectProxy:performCall:;
- (id)initWithUUID:token:senderAuditTokenData:context:;
- (void)_serializedInvalidateWithMessage:;
- (void)serverPropertyForOption:reply:;
- (void)verifyFileVaultUser:volumeUuid:options:reply:;
- (id)externalizedContext;
- (void)evaluateACL:operation:options:uiDelegate:synchronous:reply:;
- (void)setUuid:;
- (id)remoteContext;
- (void)setOptions:forInternalOperation:reply:;
- (void)setCredential:type:reply:;
- (void)_recoverConnection;
- (BOOL)_setPermanentError:;
- (id)synchronousExternalizedContextWithError:;
- (void)failProcessedEvent:failureError:reply:;
- (void)invalidateWithReply:;
- (id)serverPropertyForOption:error:;
- (void)_performCallId:finally:;
- (id)initWithExternalizedContext:userSession:context:;
- (void)setCachedExternalizedContext:;
- (void)externalizedContextWithReply:;
- (BOOL)shouldRecoverConnection;
- (void)tokenForTransferToUnknownProcess:;
- (void)setRemoteContext:;
- (void)_connectToServerWithRecovery:userSession:legacyService:;
- (void)retryProcessedEvent:reply:;
- (void)setCredential:forProcessedEvent:credentialType:reply:;
- (void)optionsForInternalOperation:reply:;
- (void)setShouldRecoverConnection:;
- (void)setShowingCoachingHint:event:reply:;
- (void)resetProcessedEvent:reply:;
- (void).cxx_destruct;
- (void)bootstrapServiceType:completionHandler:;
- (void)evaluateACL:operation:options:uiDelegate:reply:;
- (void)credentialOfType:reply:;
- (void)isCredentialSet:reply:;
- (void)_checkIdResultForTCC:synchronous:error:retryBlock:finally:;
- (void)evaluatePolicy:options:reply:;
- (void)allowTransferToProcess:receiverAuditTokenData:reply:;
- (void)invalidateWithMessage:;
- (void)_handleConnectionResult:uuid:error:;
- (void)_performSynchronous:callBool:finally:;
- (void)setExistingContext:;
- (BOOL)setServerPropertyForOption:value:error:;
- (id)permanentError;
- (void)resetWithReply:;
- (void)setServerPropertyForOption:value:reply:;
- (void)pauseProcessedEvent:pause:reply:;
- (void)_performCallBool:finally:;
- (id)cachedExternalizedContext;
- (void)setPermanentError:;
- (void)authMethodWithReply:;
- (id)synchronousRemoteContext;
+ (void)_performInvalidationBlocks:;
+ (id)createConnection:legacyService:;
+ (id)_queue;
@end
