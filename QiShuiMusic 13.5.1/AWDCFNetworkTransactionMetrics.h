@interface AWDCFNetworkTransactionMetrics : PBCodable
@property (nonatomic) BOOL hasTimestamp;
@property (nonatomic) Q timestamp;
@property (nonatomic) BOOL hasNetworkProtocolName;
@property (nonatomic) NSInteger networkProtocolName;
@property (nonatomic) BOOL hasNetworkLoadType;
@property (nonatomic) NSInteger networkLoadType;
@property (nonatomic) BOOL hasReusedConnection;
@property (nonatomic) BOOL reusedConnection;
@property (nonatomic) BOOL hasIsRedirected;
@property (nonatomic) BOOL isRedirected;
@property (nonatomic) BOOL hasRequestStart;
@property (nonatomic) Q requestStart;
@property (nonatomic) BOOL hasRequestEnd;
@property (nonatomic) Q requestEnd;
@property (nonatomic) BOOL hasResponseStart;
@property (nonatomic) Q responseStart;
@property (nonatomic) BOOL hasResponseEnd;
@property (nonatomic) Q responseEnd;
@property (nonatomic) BOOL hasTotalBytesWritten;
@property (nonatomic) Q totalBytesWritten;
@property (nonatomic) BOOL hasTotalBytesRead;
@property (nonatomic) Q totalBytesRead;
@property (nonatomic) BOOL hasConnectionUUID;
@property (nonatomic) NSString connectionUUID;
@property (nonatomic) BOOL hasApsRelayAttempted;
@property (nonatomic) BOOL apsRelayAttempted;
@property (nonatomic) BOOL hasApsRelaySucceeded;
@property (nonatomic) BOOL apsRelaySucceeded;
@property (nonatomic) BOOL hasTotalBytesExpectedToWrite;
@property (nonatomic) Q totalBytesExpectedToWrite;
@property (nonatomic) BOOL hasTotalBytesExpectedToRead;
@property (nonatomic) Q totalBytesExpectedToRead;
@property (nonatomic) BOOL hasHttp3Status;
@property (nonatomic) NSInteger http3Status;
- (void)setHasRequestStart:;
- (void)setResponseStart:;
- (BOOL)hasRequestEnd;
- (unsigned long long)requestEnd;
- (unsigned long long)responseEnd;
- (id)connectionUUID;
- (void)setRequestStart:;
- (void)setResponseEnd:;
- (void)setRequestEnd:;
- (void)setNetworkProtocolName:;
- (void)setHasRequestEnd:;
- (unsigned long long)responseStart;
- (void)setConnectionUUID:;
- (int)networkProtocolName;
- (BOOL)hasRequestStart;
- (unsigned long long)requestStart;
- (void)setReusedConnection:;
- (void)dealloc;
- (void)setHasReusedConnection:;
- (BOOL)hasResponseStart;
- (void)setHasResponseEnd:;
- (BOOL)apsRelaySucceeded;
- (BOOL)hasNetworkProtocolName;
- (void)writeTo:;
- (void)setApsRelaySucceeded:;
- (void)setApsRelayAttempted:;
- (unsigned long long)hash;
- (BOOL)apsRelayAttempted;
- (void)copyTo:;
- (void)setHasTimestamp:;
- (void)mergeFrom:;
- (BOOL)hasTimestamp;
- (void)setTimestamp:;
- (void)setHasResponseStart:;
- (BOOL)hasReusedConnection;
- (BOOL)readFrom:;
- (unsigned long long)timestamp;
- (id)description;
- (id)dictionaryRepresentation;
- (BOOL)reusedConnection;
- (BOOL)hasResponseEnd;
- (BOOL)isEqual:;
- (id)copyWithZone:;
- (BOOL)hasConnectionUUID;
- (void)setNetworkLoadType:;
- (void)setTotalBytesRead:;
- (void)setTotalBytesWritten:;
- (void)setHttp3Status:;
- (void)setIsRedirected:;
- (void)setHasTotalBytesWritten:;
- (BOOL)hasTotalBytesWritten;
- (unsigned long long)totalBytesWritten;
- (void)setHasNetworkProtocolName:;
- (id)networkProtocolNameAsString:;
- (int)StringAsNetworkProtocolName:;
- (int)networkLoadType;
- (void)setHasNetworkLoadType:;
- (BOOL)hasNetworkLoadType;
- (id)networkLoadTypeAsString:;
- (int)StringAsNetworkLoadType:;
- (void)setHasIsRedirected:;
- (BOOL)hasIsRedirected;
- (void)setHasTotalBytesRead:;
- (BOOL)hasTotalBytesRead;
- (void)setHasApsRelayAttempted:;
- (BOOL)hasApsRelayAttempted;
- (void)setHasApsRelaySucceeded:;
- (BOOL)hasApsRelaySucceeded;
- (void)setTotalBytesExpectedToWrite:;
- (void)setHasTotalBytesExpectedToWrite:;
- (BOOL)hasTotalBytesExpectedToWrite;
- (void)setTotalBytesExpectedToRead:;
- (void)setHasTotalBytesExpectedToRead:;
- (BOOL)hasTotalBytesExpectedToRead;
- (int)http3Status;
- (void)setHasHttp3Status:;
- (BOOL)hasHttp3Status;
- (id)http3StatusAsString:;
- (int)StringAsHttp3Status:;
- (BOOL)isRedirected;
- (unsigned long long)totalBytesRead;
- (unsigned long long)totalBytesExpectedToWrite;
- (unsigned long long)totalBytesExpectedToRead;
@end
