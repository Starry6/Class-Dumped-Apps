@interface IESLiveSaaSAudienceStore : NSObject
@property (nonatomic) IESLiveSaaSLiveRoomModel roomModel;
@property (nonatomic) NSString lastPrompts;
@property (nonatomic) NSString enterRoomFailPrompts;
@property (nonatomic) q loadState;
@property (nonatomic) Q closeReason;
@property (nonatomic) NSNumber diggColor;
@property (nonatomic) q orientationUpdating;
@property (nonatomic) q orientationUpdated;
@property (nonatomic) q orientationBegin;
@property (nonatomic) BOOL needHideAllComponent;
@property (nonatomic) BOOL anchorLeftRoom;
@property (nonatomic) BOOL screenIESLiveSaaSLock;
@property (nonatomic) BOOL hasRequestEnter;
@property (nonatomic) IESLiveSaaSRoomAPI api;
@property (nonatomic) IESLiveSaaSMessageHandler messageHandler;
@property (nonatomic) IESLiveSaaSAudienceWatchTime watchTime;
@property (nonatomic) BOOL needFinishLiveWhenAppBecomeActive;
@property (nonatomic) BOOL needForbidRoomWhenAppBecomeActive;
@property (nonatomic) <IESLiveMonitor> monitor;
@property (nonatomic) IESLiveSaaSAudiencePingApi audiencePing;
@property (nonatomic) <HTSLiveSaaSRoomRemoteActions> remoteDispatcher;
@property (nonatomic) IESLiveSaaSRoomService roomService;
@property (nonatomic) NSString enterSource;
@property (nonatomic) NSError closeError;
@property (nonatomic) BOOL kickoutFromMessage;
@property (nonatomic) BOOL canKickout;
@property (nonatomic) BOOL liveDidAppear;
@property (nonatomic) BOOL didLoadComponents;
@property (nonatomic) BOOL hadTrackNotRenderEvent;
@property (nonatomic) BOOL hadSendAutoLiveEvent;
@property (nonatomic) <IESLiveSaaSCustomObserver> customObserver;
@property (nonatomic) IESLiveUIAspectUtil uiAspectUtil;
@property (nonatomic) BOOL livePaused;
@property (nonatomic) BOOL stallMonitorEnable;
@property (nonatomic) q stall_monitor_window_size;
@property (nonatomic) q stall_monitor_downgrade_count_thresh;
@property (nonatomic) q stall_monitor_downgrade_duration_thresh;
@property (nonatomic) q stall_monitor_max_notice_count;
@property (nonatomic) BOOL hasTriggerStallMonitor;
@property (nonatomic) NSDate startStallDate;
@property (nonatomic) q currentStallTimes;
@property (nonatomic) double currentStallDuration;
@property (nonatomic) q currentRoomNoticeTimes;
@property (nonatomic) NSDate stallTrackerEnterRoomDate;
@property (nonatomic) <IESLiveStrategyService> strategyService;
@property (nonatomic) IESLiveRoomServiceAdapterImpl roomServiceAdapterImpl;
@property (nonatomic) HTSEventContext pageContext;
@property (nonatomic) <IESLiveSaaSAudienceReaction> reaction;
@property (nonatomic) BOOL isInMseq;
@property (nonatomic) BOOL canGoBack;
@property (nonatomic) BOOL closeRoot;
@property (nonatomic) BOOL didPlayed;
@property (nonatomic) BOOL goWork;
@property (nonatomic) NSString sourcePage;
@property (nonatomic) Q returnType;
@property (nonatomic) IESLiveSaaSEnterRoomSequenceQueue sequenceQueue;
@property (nonatomic) NSString originCameraIDstr;
@property (nonatomic) BOOL isAutoEnterFromAD;
@property (nonatomic) BOOL enterByHybridAD;
@property (nonatomic) NSDictionary hybridAdParams;
@property (nonatomic) BOOL isPreviewLiveRoom;
@property (nonatomic) q slideIndex;
@property (nonatomic) Q hash;
@property (nonatomic) # superclass;
@property (nonatomic) NSString description;
@property (nonatomic) NSString debugDescription;
- (BOOL)hasRequestEnter;
- (BOOL)isInOffcialMseq;
- (void)liveDidContinue;
- (void)liveWillSuspend;
- (void)setRoomService:;
- (id)strategyService;
- (BOOL)_streamStallNoticeCountReachMax;
- (BOOL)enterByHybridAD;
- (void)kickoutIfNeeded;
- (void)livePlayTracked;
- (void)pauseWatchTimer;
- (void)setEnterSource:;
- (void)setLastPrompts:;
- (void)_beginStallMonitor;
- (void)_checkStall;
- (void)_liveFinished;
- (void)_livePlayAutoLive:;
- (void)_roomFinished;
- (void)_streamPlayerEndStall;
- (void)_trackStallDegradeResolutionToastShow;
- (void)anchorLeft;
- (BOOL)anchorLeftRoom;
- (void)anchorResume;
- (id)audiencePing;
- (BOOL)canEnterFinishedVC;
- (BOOL)canKickout;
- (void)checkDispatchSequenceIfNeed;
- (void)clickCloseButton:;
- (void)closeAbnormalAnchorRoom;
- (void)closeRoom;
- (void)closeRoomToRoot:;
- (BOOL)closeRoot;
- (void)collectStrategyInfo:;
- (long long)currentRoomNoticeTimes;
- (double)currentStallDuration;
- (long long)currentStallTimes;
- (id)customObserver;
- (void)didClickPauseButton:forState:;
- (void)didEnterLiveRoom:;
- (void)didEnterLiveRoomFail:logID:;
- (void)didForceUpdateToOrientation:;
- (BOOL)didLoadComponents;
- (BOOL)didPlayed;
- (void)didSetAttachingDIContext;
- (void)didUpdateReplayStatus:;
- (void)didUpdateRoom:;
- (void)didUpdateRoomFail:;
- (id)diggColor;
- (BOOL)enableStallMonitor;
- (void)enterRoom;
- (id)enterRoomFailPrompts;
- (void)enterRoomSuccessed:;
- (void)enterRoomWithoutDispatch;
- (id)enterSource;
- (void)finishRoomOrForbidRoomIfNeeded;
- (void)forceCloseRoomByMSeq;
- (id)getPullData;
- (BOOL)goWork;
- (BOOL)hadSendAutoLiveEvent;
- (BOOL)hadTrackNotRenderEvent;
- (void)handleRemoteError:;
- (BOOL)hasTriggerStallMonitor;
- (void)hideAllComponent;
- (id)hybridAdParams;
- (id)initWithRoomModel:isFromAD:;
- (BOOL)isAutoEnterFromAD;
- (BOOL)isInMseq;
- (BOOL)isLivePaused;
- (BOOL)isPreviewLiveRoom;
- (BOOL)isVSRoom;
- (BOOL)kickoutFromMessage;
- (id)lastPrompts;
- (void)liveCameraContentWatchDidCloseWithDuration:;
- (void)liveComponentDidLoaded;
- (void)liveComponentsLoadComplete;
- (BOOL)liveDidAppear;
- (void)liveDidBecomeActive;
- (void)liveDidEnterBackground;
- (void)liveDidPause;
- (BOOL)livePlayerReusable;
- (void)liveRoomBackWatchMinitTick:;
- (void)liveRoomBackgroundWatchEndWithDuration:withEndReason:;
- (void)liveRoomEnterBackgroundWatch;
- (void)liveRoomVideoOverDuration:trigger:;
- (void)liveRoomWatchDidCloseWithDuration:playedDuration:;
- (void)liveRoomWatchDidStopWithDuration:;
- (void)liveRoomWatchMinitTick:;
- (id)liveTypeString;
- (void)liveWillAppear;
- (void)liveWillDisappear;
- (void)liveWillEndWithReason:;
- (void)liveWillEnterForground;
- (void)liveWillStart;
- (void)liveWillTerminated;
- (id)loadGameStatusMessageHandle;
- (id)loadMemberMessageHandler;
- (id)loadUserSyncMessageHandler;
- (void)messageReceivedChangeCurrentMatchInfo;
- (BOOL)needFinishLiveWhenAppBecomeActive;
- (BOOL)needForbidRoomWhenAppBecomeActive;
- (BOOL)needHideAllComponent;
- (BOOL)noNeedRetryEnterRoom:;
- (void)observeMessageIfNeeded;
- (void)observeUserStatusChange;
- (void)onOrientationTransitionBegin:;
- (void)onOrientationTransitionEnd;
- (void)onRoomEnteredWithResponse:error:responseModel:room:;
- (long long)orientationBegin;
- (long long)orientationUpdated;
- (long long)orientationUpdating;
- (id)originCameraIDstr;
- (void)ping:statusModel:;
- (void)previewRoomCloseWatching;
- (void)previewRoomStartWatching;
- (void)reEnterRoomOnSpecialEvents;
- (void)refreshRoomInfoApiWithCompletion:;
- (void)registerMessageHandlers;
- (void)resumeWatchTimer;
- (void)roomForbidden;
- (id)roomModel;
- (id)roomService;
- (id)roomServiceAdapterImpl;
- (BOOL)screenIESLiveSaaSLock;
- (id)sequenceQueue;
- (void)setAnchorLeftRoom:;
- (void)setAudiencePing:;
- (void)setCanGoBack:;
- (void)setCanKickout:;
- (void)setCloseRoot:;
- (void)setCurrentRoomNoticeTimes:;
- (void)setCurrentStallDuration:;
- (void)setCurrentStallTimes:;
- (void)setCustomObserver:;
- (void)setDidLoadComponents:;
- (void)setDidPlayed:;
- (void)setDiggColor:;
- (void)setEnterByHybridAD:;
- (void)setEnterRoomFailPrompts:;
- (void)setGoWork:;
- (void)setHadSendAutoLiveEvent:;
- (void)setHadTrackNotRenderEvent:;
- (void)setHasRequestEnter:;
- (void)setHasTriggerStallMonitor:;
- (void)setHybridAdParams:;
- (void)setIsAutoEnterFromAD:;
- (void)setIsPreviewLiveRoom:;
- (void)setKickoutFromMessage:;
- (void)setLiveDidAppear:;
- (void)setLivePaused:;
- (void)setNeedFinishLiveWhenAppBecomeActive:;
- (void)setNeedForbidRoomWhenAppBecomeActive:;
- (void)setNeedHideAllComponent:;
- (void)setOrientationBegin:;
- (void)setOrientationUpdated:;
- (void)setOrientationUpdating:;
- (void)setOriginCameraIDstr:;
- (void)setRemoteDispatcher:;
- (void)setRoomModel:;
- (void)setRoomServiceAdapterImpl:;
- (void)setScreenIESLiveSaaSLock:;
- (void)setSequenceQueue:;
- (void)setSlideIndex:;
- (void)setSourcePage:;
- (void)setStallMonitorEnable:;
- (void)setStallTrackerEnterRoomDate:;
- (void)setStall_monitor_downgrade_count_thresh:;
- (void)setStall_monitor_downgrade_duration_thresh:;
- (void)setStall_monitor_max_notice_count:;
- (void)setStall_monitor_window_size:;
- (void)setStartStallDate:;
- (void)setStrategyService:;
- (void)setUiAspectUtil:;
- (void)setWatchTime:;
- (void)showAllComponent;
- (long long)slideIndex;
- (id)sourcePage;
- (BOOL)stallMonitorEnable;
- (id)stallTrackerEnterRoomDate;
- (long long)stall_monitor_downgrade_count_thresh;
- (long long)stall_monitor_downgrade_duration_thresh;
- (long long)stall_monitor_max_notice_count;
- (long long)stall_monitor_window_size;
- (id)startStallDate;
- (unsigned long long)streamOrientation:;
- (void)streamPlayerEndStall;
- (void)streamPlayerLoadFirstFrame;
- (void)streamPlayerStartStall;
- (void)subscribeRemoteMessagesIfNeed;
- (void)trackDidSwitchCamera;
- (void)trackStreamNotRenderEvent:;
- (void)tryEnterRoom:retryIndex:;
- (void)tryUpdateRoomWithUserStatusChange:;
- (id)uiAspectUtil;
- (void)unlockScreen;
- (void)updateRoom;
- (void)updateWatchInitialTime:;
- (void)vsLiveCameraWatchDidCloseWithDuration:;
- (void)vsLiveOrientationWatchDidChangedWithPlayTime:totalDuration:closeLive:;
- (void)vsLiveRoomWatchDidCloseWithDuration:playedDuration:lastPlayedDuration:;
- (void)vsLiveRoomWatchDidPauseWithDurationForInitRoom:durationForFirstFrame:;
- (id)watchTime;
- (void)writeInteractiveFanTickets:;
- (BOOL)canGoBack;
- (void)setReturnType:;
- (void)dealloc;
- (long long)loadState;
- (unsigned long long)returnType;
- (unsigned long long)closeReason;
- (void)setMonitor:;
- (id)messageHandler;
- (void)setup;
- (void).cxx_destruct;
- (id)monitor;
- (void)lockScreen;
- (void)setMessageHandler:;
- (void)messageReceived:;
- (id)reaction;
- (id)closeError;
- (id)pageContext;
- (void)setPageContext:;
- (id)api;
- (void)setReaction:;
- (void)setCloseReason:;
- (id)remoteDispatcher;
- (void)setCloseError:;
- (void)setLoadState:;
- (void)setApi:;
+ (id)getPullDataWithRoomModel:;
@end
