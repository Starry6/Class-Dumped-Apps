@interface WBSHistoryItem : NSObject
@property (nonatomic) Q dailyVisitCountScoresCountOnSynchronizationQueue;
@property (nonatomic) r^i dailyVisitCountScoresPtrOnSynchronizationQueue;
@property (nonatomic) Q weeklyVisitCountScoresCountOnSynchronizationQueue;
@property (nonatomic) r^i weeklyVisitCountScoresPtrOnSynchronizationQueue;
@property (nonatomic) q databaseID;
@property (nonatomic) NSString title;
@property (nonatomic) NSString urlString;
@property (nonatomic) NSString userVisibleURLString;
@property (nonatomic) NSURL url;
@property (nonatomic) NSString stringForUserTypedDomainExpansion;
@property (nonatomic) WBSHistoryVisit lastVisit;
@property (nonatomic) double lastVisitedTimeInterval;
@property (nonatomic) NSDate lastVisitedDate;
@property (nonatomic) NSArray visits;
@property (nonatomic) NSInteger visitCount;
@property (nonatomic) NSInteger visitCountScore;
@property (nonatomic) q statusCode;
@property (nonatomic) BOOL shouldRecomputeDerivedVisitCountScores;
@property (nonatomic) BOOL lastVisitWasHTTPNonGet;
@property (nonatomic) BOOL lastVisitWasFailure;
@property (nonatomic) WBSHistoryItem lastVisitRedirectDestinationItem;
@property (nonatomic) WBSHistoryItem endOfLastVisitRedirectChain;
@property (nonatomic) WBSHistoryVisit lastVisitOnSynchronizationQueue;
@property (nonatomic) double lastVisitedTimeIntervalOnSynchronizationQueue;
@property (nonatomic) NSSet visitsPendingWriteToDataStoreOnSynchronizationQueue;
@property (nonatomic) NSData dailyVisitCountScoresDataOnSynchronizationQueue;
@property (nonatomic) NSData weeklyVisitCountScoresDataOnSynchronizationQueue;
@property (nonatomic) NSString userVisibleHostOrFallbackURLString;
- (id)urlString;
- (id)lastVisit;
- (void)setStatusCode:;
- (long long)databaseID;
- (id)url;
- (id)initWithSQLiteRow:;
- (int)visitCount;
- (long long)statusCode;
- (void)dealloc;
- (id)lastVisitRedirectDestinationItem;
- (void)_wasVisitedOnSynchronizationQueue:;
- (BOOL)_visitsPendingWriteSetContains:;
- (id)initWithHistoryStreamedItem:;
- (id)dailyVisitCountScoresDataOnSynchronizationQueue;
- (void)removeVisitsOnSynchronizationQueue:candidateLastVisit:;
- (void)removeVisits:candidateLastVisit:;
- (BOOL)lastVisitWasHTTPNonGet;
- (void)wasVisited:;
- (void)_addVisitToPendingWriteSet:;
- (id)visits;
- (void)clearVisitsPendingWriteToDataStoreFromSynchronizationQueue;
- (id)endOfLastVisitRedirectChain;
- (void)setTitle:;
- (id)visitsPendingWriteToDataStoreOnSynchronizationQueue;
- (void)wasRedirectedFrom:to:;
- (void)addExistingVisit:;
- (unsigned long long)weeklyVisitCountScoresCountOnSynchronizationQueue;
- (id)stringForUserTypedDomainExpansion;
- (void)updateLastVisitIfNil:;
- (void)setLastVisitWasFailure:;
- (void)setDatabaseID:;
- (double)lastVisitedTimeIntervalOnSynchronizationQueue;
- (void)scoreOfVisit:wasUpdatedFrom:to:;
- (BOOL)lastVisitWasFailure;
- (void)_addExistingVisit:;
- (id)title;
- (void)updateWithServiceItem:;
- (double)lastVisitedTimeInterval;
- (id)weeklyVisitCountScoresDataOnSynchronizationQueue;
- (id)dailyVisitCountScoresPtrOnSynchronizationQueue;
- (void).cxx_destruct;
- (void)_accessVisitCountScoresStorage:;
- (BOOL)shouldRecomputeDerivedVisitCountScores;
- (id)userVisibleURLString;
- (int)visitCountScore;
- (void)mergeDataFromItem:;
- (id)userVisibleHostOrFallbackURLString;
- (void)visitWasModified:;
- (id)weeklyVisitCountScoresPtrOnSynchronizationQueue;
- (id)lastVisitOnSynchronizationQueue;
- (void)_addVisit:;
- (void)recomputeDerivedVisitCountScoresWithVisits:;
- (id)lastVisitedDate;
- (id).cxx_construct;
- (unsigned long long)dailyVisitCountScoresCountOnSynchronizationQueue;
- (void)updateWithStreamedItem:;
- (id)_visitsPendingWriteSetCreatingIfNeeded:;
- (id)initWithURLString:;
+ (double)timeIntervalForDailyAndWeeklyVisitCountScores;
+ (id)synchronizationQueue;
@end
