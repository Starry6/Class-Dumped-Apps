@interface CSJAppStoreManager : NSObject
@property (nonatomic) CSJAppStorePreloadList preloadList;
@property (nonatomic) NSMutableArray presentingItemList;
@property (nonatomic) BOOL preloadOnlyWIFI;
@property (nonatomic) Q maxPreloadCount;
@property (nonatomic) BOOL isReusePreload;
@property (nonatomic) q supportPreloadType;
@property (nonatomic) BOOL isPresentAnimated;
@property (nonatomic) double appStore_top;
- (BOOL)preloadOnlyWIFI;
- (void)setPreloadList:;
- (unsigned long long)maxPreloadCount;
- (double)appStore_top;
- (void)clearPreloadCache;
- (void)clearPreloadCacheByAppID:;
- (void)clearPreloadCacheBySKController:;
- (id)controllerPreloadedByAppID:;
- (id)currentPresentingItemList;
- (id)duplicatedControllerPreloadedByAppID:dismiassAnimated:;
- (BOOL)hasControllerPreloadedByAppID:;
- (BOOL)isPresentAnimated;
- (BOOL)isPresentingWithAppID:;
- (BOOL)isReusePreload;
- (long long)openAppStoreControllerWithAppID:param:adModel:byController:presentCompletion:dismissCompletion:;
- (long long)openAppStoreControllerWithAppID:param:downloadUrl:adModel:byController:presentCompletion:dismissCompletion:;
- (long long)openAppStoreOpenTypeWithAppID:downloadUrl:;
- (void)preloadAppStoreControllerWithAppID:param:adModel:completion:;
- (void)preloadAppStoreControllerWithAppID:param:adModel:isDuplicate:completion:;
- (id)preloadList;
- (id)presentingItemList;
- (void)setAppStore_top:;
- (void)setIsPresentAnimated:;
- (void)setIsReusePreload:;
- (void)setMaxPreloadCount:;
- (void)setPreloadOnlyWIFI:;
- (void)setPresentingItemList:;
- (long long)supportPreloadType;
- (id)init;
- (BOOL)isPresenting;
- (void).cxx_destruct;
+ (id)appIDInURL:;
+ (void)clearPreloadCacheByAppID:;
+ (void)clearPreloadCacheBySKController:;
+ (id)controllerPreloadedByAppID:;
+ (id)duplicatedControllerWithAppID:dismiassAnimated:;
+ (BOOL)hasControllerPreloadedByAppID:;
+ (BOOL)isAppStoreURL:;
+ (long long)openAppStoreControllerWithAppID:param:adModel:byController:presentCompletion:dismissCompletion:;
+ (long long)openAppStoreControllerWithAppID:param:byController:;
+ (long long)openAppStoreControllerWithAppID:param:byController:presentCompletion:dismissCompletion:;
+ (long long)openAppStoreControllerWithAppID:param:downloadUrl:adModel:byController:presentCompletion:dismissCompletion:;
+ (void)preloadAppStoreControllerWithAppID:param:;
+ (void)preloadAppStoreControllerWithAppID:param:adModel:completion:;
+ (void)preloadAppStoreControllerWithAppID:param:adModel:isDuplicate:completion:;
+ (void)preloadAppStoreControllerWithAppID:param:completion:;
+ (id)sharedManager;
@end
