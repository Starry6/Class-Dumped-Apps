@interface IDSDirectMessageConnection : NSObject
@property (nonatomic) Q identifier;
@property (nonatomic) * shortServiceNameCString;
@property (nonatomic) NSObject<OS_dispatch_queue> connectionQueue;
@property (nonatomic) NSObject<OS_nw_connection> connection;
@property (nonatomic) NSInteger connectionState;
@property (nonatomic) BOOL connectionSetupInProgress;
@property (nonatomic) NSMutableArray connectionMessageSendQueue;
@property (nonatomic) <IDSDirectMessageConnectionDelegate> delegate;
@property (nonatomic) BOOL upgradedTrafficClass;
@property (nonatomic) NSString peerID;
@property (nonatomic) BOOL connectionIsIncoming;
@property (nonatomic) BOOL pendingAckTimerSuspended;
@property (nonatomic) BOOL directMessagingAllowed;
@property (nonatomic) NSObject<OS_dispatch_source> pendingAckTimer;
@property (nonatomic) NSObject<OS_dispatch_source> reporterTimer;
@property (nonatomic) NSMutableDictionary queueOneToMessageIDDictionary;
@property (nonatomic) NSMutableDictionary messageIDToMessageDictionary;
@property (nonatomic) NSInteger notifyToken;
@property (nonatomic) BOOL directMessagingSupported;
@property (nonatomic) I trafficClassToUse;
@property (nonatomic) q idsPriorityToUse;
@property (nonatomic) BOOL trafficClassInitialized;
@property (nonatomic) q trafficClassApplied;
@property (nonatomic) BOOL trafficClassTLVProcessed;
@property (nonatomic) BOOL peerIsConnected;
@property (nonatomic) BOOL peerIsNearby;
@property (nonatomic) IDSDevice device;
@property (nonatomic) IDSDeviceConnection deviceConnection;
@property (nonatomic) NSString currentStreamName;
@property (nonatomic) BOOL peerSupportsDeviceConnection;
@property (nonatomic) BOOL conciseACKSupported;
@property (nonatomic) Q directMessagingState;
@property (nonatomic) NSInteger directMessagingTimeOutMSEC;
@property (nonatomic) NSInteger directMessagingRetryMSEC;
@property (nonatomic) NSInteger directMessagingReportStatsMSEC;
@property (nonatomic) I dataProtectionClass;
@property (nonatomic) IDSServiceProperties serviceProperties;
@property (nonatomic) IMPowerAssertion assertion;
@property (nonatomic) NSDictionary powerAssertionOptions;
@property (nonatomic) Q outgoingMessageBytes;
@property (nonatomic) Q outgoingMessageCount;
@property (nonatomic) Q incomingMessageBytes;
@property (nonatomic) Q incomingMessageCount;
@property (nonatomic) NSString serviceName;
- (id)deviceConnection;
- (id)assertion;
- (void)setDeviceConnection:;
- (int)connectionState;
- (id)serviceProperties;
- (void)setAssertion:;
- (void)setConnectionQueue:;
- (void)updateMetadata:;
- (void)setServiceProperties:;
- (void)cancel;
- (void)setNotifyToken:;
- (void)dealloc;
- (id)connectionQueue;
- (int)notifyToken;
- (void)setDevice:;
- (id)peerID;
- (void)setDelegate:;
- (void)setDataProtectionClass:;
- (void)setServiceName:;
- (unsigned long long)identifier;
- (id)serviceName;
- (void)resetConnection;
- (void)setConnectionState:;
- (id)delegate;
- (id)connection;
- (void).cxx_destruct;
- (void)setConnection:;
- (id)description;
- (void)setPeerID:;
- (id)initWithServiceName:queue:delegate:;
- (unsigned int)dataProtectionClass;
- (void)invalidate;
- (void)setIdentifier:;
- (id)device;
- (unsigned long long)incomingMessageCount;
- (void)updateConnection:;
- (void)setDestinationDevice:;
- (void)parseDirectMessagingState;
- (BOOL)canUseDirectMessaging;
- (BOOL)isMessageEligible:options:destinationDevice:;
- (void)updateConnectedDevices:;
- (void)updateTrafficClass:;
- (void)setupIDSDeviceConnection;
- (void)receivedDirectMessagingSocketWithContext:;
- (void)setupConnectionIfApplicable;
- (void)receiveMessages;
- (void)processIncomingMessage:messageType:messageIdentifier:;
- (void)sendAckForMessageID:guidToAck:;
- (void)sendAppAckWithGUID:;
- (unsigned char)getMessageTypeForFirstMessage;
- (id)createDispatchDataForMessageSend:isAck:ackMessageId:;
- (void)cancelPendingAckTimer;
- (void)resumePendingAckTimer;
- (void)suspendPendingAckTimer;
- (void)failedToSendMessage:responseCode:;
- (void)sendMessageWithParameters:options:;
- (void)dequeueMessages;
- (void)getPowerAssertion;
- (void)clearPowerAssertion;
- (void)startPowerLogReportTimer;
- (void)logConnectionStatisticsInPowerDictionary;
- (char *)shortServiceNameCString;
- (void)setShortServiceNameCString:;
- (BOOL)connectionSetupInProgress;
- (void)setConnectionSetupInProgress:;
- (id)connectionMessageSendQueue;
- (void)setConnectionMessageSendQueue:;
- (BOOL)upgradedTrafficClass;
- (void)setUpgradedTrafficClass:;
- (BOOL)connectionIsIncoming;
- (void)setConnectionIsIncoming:;
- (BOOL)pendingAckTimerSuspended;
- (void)setPendingAckTimerSuspended:;
- (BOOL)directMessagingAllowed;
- (void)setDirectMessagingAllowed:;
- (id)pendingAckTimer;
- (void)setPendingAckTimer:;
- (id)reporterTimer;
- (void)setReporterTimer:;
- (id)queueOneToMessageIDDictionary;
- (void)setQueueOneToMessageIDDictionary:;
- (id)messageIDToMessageDictionary;
- (void)setMessageIDToMessageDictionary:;
- (BOOL)directMessagingSupported;
- (void)setDirectMessagingSupported:;
- (unsigned int)trafficClassToUse;
- (void)setTrafficClassToUse:;
- (long long)idsPriorityToUse;
- (void)setIdsPriorityToUse:;
- (BOOL)trafficClassInitialized;
- (void)setTrafficClassInitialized:;
- (long long)trafficClassApplied;
- (void)setTrafficClassApplied:;
- (BOOL)trafficClassTLVProcessed;
- (void)setTrafficClassTLVProcessed:;
- (BOOL)peerIsConnected;
- (void)setPeerIsConnected:;
- (BOOL)peerIsNearby;
- (void)setPeerIsNearby:;
- (id)currentStreamName;
- (void)setCurrentStreamName:;
- (BOOL)peerSupportsDeviceConnection;
- (void)setPeerSupportsDeviceConnection:;
- (BOOL)conciseACKSupported;
- (void)setConciseACKSupported:;
- (unsigned long long)directMessagingState;
- (void)setDirectMessagingState:;
- (int)directMessagingTimeOutMSEC;
- (void)setDirectMessagingTimeOutMSEC:;
- (int)directMessagingRetryMSEC;
- (void)setDirectMessagingRetryMSEC:;
- (int)directMessagingReportStatsMSEC;
- (void)setDirectMessagingReportStatsMSEC:;
- (id)powerAssertionOptions;
- (void)setPowerAssertionOptions:;
- (unsigned long long)outgoingMessageBytes;
- (void)setOutgoingMessageBytes:;
- (unsigned long long)outgoingMessageCount;
- (void)setOutgoingMessageCount:;
- (unsigned long long)incomingMessageBytes;
- (void)setIncomingMessageBytes:;
- (void)setIncomingMessageCount:;
+ (BOOL)isDirectMessagingRequested:;
@end
