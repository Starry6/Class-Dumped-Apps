@interface IESLiveMultiAudioAudienceLinkmicInnerServiceImpl : NSObject
@property (nonatomic) <IESLiveInteractionLinkerService> linker;
@property (nonatomic) <IESLiveRoomServiceAdapter> room;
@property (nonatomic) HTSEventContext trackContext;
@property (nonatomic) IESLiveComponentContext componentContext;
@property (nonatomic) IESLiveAudienceInteractPermissionChecker permissionChecker;
@property (nonatomic) IESLiveInterativeTimeOutManager timeOutManager;
@property (nonatomic) <IESLiveNoticeActionsAdapter> noticeActionCreator;
@property (nonatomic) NSString waitingPrompts;
@property (nonatomic) BOOL isPreparingWaitingOffset;
@property (nonatomic) BOOL closeBySelf;
@property (nonatomic) BOOL isFirstFetch;
@property (nonatomic) q linkMicStatus;
@property (nonatomic) IESLiveLinkMicAudienceGetUserWaitingOffsetResponse_ResponseData waitingOffsetResponse;
@property (nonatomic) Q hash;
@property (nonatomic) # superclass;
@property (nonatomic) NSString description;
@property (nonatomic) NSString debugDescription;
@property (nonatomic) RACTwoTuple attributeWaitingPromptsTuple;
@property (nonatomic) q previousLinkMicStatus;
@property (nonatomic) HTSLiveInteractiveAPI interactiveAPI;
@property (nonatomic) BOOL isPaid;
@property (nonatomic) NSDictionary replyExtraParams;
- (void)dealWithDisconnectWithCcontext:;
- (BOOL)isInvitingUser:;
- (void)setCloseBySelf:;
- (void)adminMuteGuest:;
- (void)handleAutoJoin:;
- (void)adminInviteWithUserID:secUserID:sourcePage:extraParams:;
- (void)adminKickOutUserID:secUserID:linkType:requestSource:eventParams:completion:;
- (void)adminPermit:secUid:;
- (void)adminPermitUserID:secUserID:eventParams:;
- (void)adminUnMuteGuest:;
- (void)applyConnectionWithParams:finished:;
- (id)attributeWaitingPromptsTuple;
- (void)cancelApplicationFromServer;
- (void)cancelApplicationWithRequestSource:;
- (void)checkApplyPermissionWithCompletion:;
- (void)checkAudioDevicePermission:;
- (void)checkOnlyAcceptFollowerApply:;
- (BOOL)closeBySelf;
- (id)componentContext;
- (long long)determineFinalLinkTypeWithOrigin:;
- (void)didCancelApplication:manual:;
- (void)didSetAttachingDIContext;
- (BOOL)enableOptimize;
- (BOOL)enterRoomByFastMatch;
- (id)getMuteGusetNicknameByUserID:;
- (BOOL)hasAppliedBefore;
- (id)initWithRoom:trackContext:componentContext:;
- (void)interactionLinkerService:didCancelWaitingWithContext:;
- (void)interactionLinkerService:didCloseWithContext:;
- (void)interactionLinkerService:didCreateStartContext:startType:;
- (void)interactionLinkerService:didDisconnectWithContext:;
- (void)interactionLinkerService:didJoinChannelWithContext:;
- (void)interactionLinkerService:joinChannelError:;
- (void)interactionLinkerService:onReceiveApplyResume:;
- (void)interactionLinkerService:onReceiveRemoveWaitingUser:;
- (void)interactionLinkerService:onReceivedAudienceConFirmUnsilenceMessage:;
- (void)interactionLinkerService:onReceivedKickout:;
- (void)interactionLinkerService:onReceivedPermit:isAgreed:;
- (void)interactionLinkerService:onReceivedReply:isAgreed:;
- (void)interactionLinkerService:onReceivedSwitchScene:;
- (void)interactionLinkerService:onSelfLinkTypeChanged:;
- (void)interactionLinkerService:startWaitingWithContext:;
- (id)interactiveAPI;
- (void)inviteWithUserID:secUserID:sourcePage:params:;
- (BOOL)isFromDistribution;
- (BOOL)isPreparingWaitingOffset;
- (void)leaveWithSource:eventParams:completion:;
- (long long)linkMicStatus;
- (id)linker;
- (void)liveWillEndWithReason:;
- (void)loadInteractiveListInStatus:withType:requestSource:;
- (void)muteOtherRoom:;
- (BOOL)noAdminRight;
- (id)noticeActionCreator;
- (void)onInteractiveModeStart;
- (void)onInteractiveModeStopped;
- (id)permissionChecker;
- (void)prepareForAttributedWaitingPrompts;
- (void)prepareForWaitingOffset;
- (long long)previousLinkMicStatus;
- (id)replyExtraParams;
- (void)replyWithType:linkType:inviteSource:replyToUserSecID:;
- (void)replyWithType:linkType:inviteSource:replyToUserSecID:trackParams:;
- (id)roleForLog;
- (id)sceneForLog;
- (void)setAttributeWaitingPromptsTuple:;
- (void)setComponentContext:;
- (void)setInteractiveAPI:;
- (void)setIsFirstFetch:;
- (void)setIsPreparingWaitingOffset:;
- (void)setLinkMicStatus:;
- (void)setLinker:;
- (void)setNoticeActionCreator:;
- (void)setPermissionChecker:;
- (void)setPreviousLinkMicStatus:;
- (void)setReplyExtraParams:;
- (void)setTimeOutManager:;
- (void)setTrackContext:;
- (void)setWaitingOffsetResponse:;
- (void)setWaitingPrompts:;
- (BOOL)shouldFetchWaitingUserAfterApply;
- (void)showCancelApplicationSheetWithTitle:;
- (void)showLoginPanel;
- (void)stopConnectionWithRequestSource:eventParams:completion:;
- (unsigned long long)subscene;
- (id)timeOutManager;
- (id)trackContext;
- (void)trackGuestConnectionApplyWithParams:eventParams:;
- (void)trackInviteEventWithUserID:sourcePage:;
- (void)trackKickOutEventWith:eventParams:;
- (void)unMuteOtherRoom:;
- (id)waitingOffsetResponse;
- (id)waitingPrompts;
- (void)showToast:;
- (BOOL)isPaid;
- (BOOL)connected;
- (id)currentLayout;
- (void).cxx_destruct;
- (id)currentUser;
- (id)room;
- (void)setRoom:;
- (BOOL)isAdmin;
- (void)setIsPaid:;
- (BOOL)isFirstFetch;
- (void)clean;
@end
