@interface C2Session : NSObject
@property (nonatomic) NSString originalHost;
@property (nonatomic) NSString routeHost;
@property (nonatomic) double routeLastUpdated;
@property (nonatomic) NSMutableSet didCompleteWithErrorRunningTasks;
@property (nonatomic) BOOL isComplete;
@property (nonatomic) <C2SessionDelegate> sessionDelegate;
@property (nonatomic) q emptyTimestamp;
@property (nonatomic) NSMutableDictionary wrappedTaskByTaskDescription;
@property (nonatomic) NSOperationQueue queue;
@property (nonatomic) @? testBehavior_sessionInvalidated_cfnetwork;
@property (nonatomic) @? testBehavior_sessionInvalidated_shouldInvalidate;
@property (nonatomic) @? testBehavior_cleanupRetainCycle;
@property (nonatomic) @? testBehavior_callbackHung;
@property (nonatomic) NSString sessionConfigurationName;
@property (nonatomic) NSURLSession session;
@property (nonatomic) C2RequestOptions options;
@property (nonatomic) Q hash;
@property (nonatomic) # superclass;
@property (nonatomic) NSString description;
@property (nonatomic) NSString debugDescription;
- (void)setIsComplete:;
- (void)removeTask:;
- (void)URLSession:dataTask:didReceiveData:;
- (void)URLSession:task:_willSendRequestForEstablishedConnection:completionHandler:;
- (BOOL)isComplete;
- (void)C2Session:didBecomeInvalidWithError:;
- (void)_recalculateSessionDelegateQueuePriority;
- (void)URLSession:task:needNewBodyStream:;
- (void)dealloc;
- (id)wrappedTaskByTaskDescription;
- (void)invalidateAndCancel;
- (BOOL)shouldInvalidateAndCancel;
- (void)URLSession:task:didCompleteWithError:;
- (id)sessionDelegate;
- (id)testBehavior_sessionInvalidated_shouldInvalidate;
- (void)URLSession:task:didFinishCollectingMetrics:;
- (id)createTaskWithOptions:delegate:;
- (void)URLSession:didBecomeInvalidWithError:;
- (void)setTestBehavior_sessionInvalidated_cfnetwork:;
- (void)setRouteHost:;
- (void)URLSession:dataTask:didReceiveResponse:completionHandler:;
- (void)URLSession:task:_conditionalRequirementsChanged:;
- (long long)emptyTimestamp;
- (void)setRouteLastUpdated:;
- (void)URLSession:task:willPerformHTTPRedirection:newRequest:completionHandler:;
- (void)C2Session:sessionTask:updatedRoute:;
- (void)URLSession:task:didSendBodyData:totalBytesSent:totalBytesExpectedToSend:;
- (double)routeLastUpdated;
- (void)URLSession:_taskIsWaitingForConnection:;
- (id)testBehavior_callbackHung;
- (void)C2Session:task:didCompleteWithError:;
- (id)routeHost;
- (void)setSessionDelegate:;
- (void)sessionTaskDelegateCallbackHelper:task:block:;
- (void)setTestBehavior_sessionInvalidated_shouldInvalidate:;
- (id)testBehavior_cleanupRetainCycle;
- (void)setDidCompleteWithErrorRunningTasks:;
- (id)options;
- (id)originalHost;
- (id)didCompleteWithErrorRunningTasks;
- (id)session;
- (id)sessionConfigurationName;
- (void).cxx_destruct;
- (void)setTestBehavior_callbackHung:;
- (void)setOriginalHost:;
- (void)cleanupRetainCycle;
- (id)testBehavior_sessionInvalidated_cfnetwork;
- (void)setTestBehavior_cleanupRetainCycle:;
- (void)setEmptyTimestamp:;
- (void)testBehavior_triggerSessionExpiry;
- (void)testBehavior_triggerCallbackHang;
- (id)queue;
- (id)initWithSessionConfigurationName:routeHost:options:sessionDelegate:;
- (id)addTask:withDescription:request:;
- (void)URLSession:_willRetryBackgroundDataTask:withError:;
+ (id)portFromURL:;
@end
