@interface ML3MusicLibrary : NSObject
@property (nonatomic) NSString artworkDirectory;
@property (nonatomic) NSString originalArtworkDirectory;
@property (nonatomic) NSString rootArtworkCacheDirectory;
@property (nonatomic) BOOL supportsUbiquitousPlaybackPositions;
@property (nonatomic) NSNumber sagaAccountID;
@property (nonatomic) NSNumber sagaLastKnownActiveLockerAccountDSID;
@property (nonatomic) NSDate sagaLastGeniusUpdateDate;
@property (nonatomic) NSDate sagaLastItemPlayDataUploadDate;
@property (nonatomic) NSDate sagaLastPlaylistPlayDataUploadDate;
@property (nonatomic) NSString sagaCloudLibraryCUID;
@property (nonatomic) NSString sagaCloudLibraryTroveID;
@property (nonatomic) q sagaDatabaseUserVersion;
@property (nonatomic) q sagaCloudAddToPlaylistBehavior;
@property (nonatomic) BOOL sagaNeedsFullUpdateAfterNextUpdate;
@property (nonatomic) BOOL sagaPrefersToMergeWithCloudLibrary;
@property (nonatomic) NSString storefrontIdentifier;
@property (nonatomic) NSDate sagaLastLibraryUpdateTime;
@property (nonatomic) NSDate sagaLastSubscribedContainersUpdateTime;
@property (nonatomic) q preferredVideoQuality;
@property (nonatomic) q sagaOnDiskDatabaseRevision;
@property (nonatomic) NSNumber jaliscoAccountID;
@property (nonatomic) NSDate jaliscoLastGeniusUpdateDate;
@property (nonatomic) NSString jaliscoLastSupportedMediaKinds;
@property (nonatomic) NSArray jaliscoLastExcludedMediaKinds;
@property (nonatomic) BOOL jaliscoHasCloudGeniusData;
@property (nonatomic) BOOL jaliscoIsMusicGeniusUserEnabled;
@property (nonatomic) BOOL jaliscoNeedsUpdateForTokens;
@property (nonatomic) NSDate jaliscoLastLibraryUpdateTime;
@property (nonatomic) q jaliscoOnDiskDatabaseRevision;
@property (nonatomic) NSObject<OS_dispatch_queue> serialQueue;
@property (nonatomic) ML3LibraryNotificationManager notificationManager;
@property (nonatomic) ^{iPhoneSortKeyBuilder=} sortKeyBuilder;
@property (nonatomic) BOOL usingSharedLibraryPath;
@property (nonatomic) BOOL readOnly;
@property (nonatomic) ML3MusicLibraryResourcesManager resourcesManager;
@property (nonatomic) <ML3MusicLibraryDelegate> delegate;
@property (nonatomic) ML3DatabaseConnectionPool connectionPool;
@property (nonatomic) NSString databasePath;
@property (nonatomic) ML3DatabasePrivacyContext privacyContext;
@property (nonatomic) NSString libraryUID;
@property (nonatomic) q currentRevision;
@property (nonatomic) q currentContentRevision;
@property (nonatomic) q syncGenerationID;
@property (nonatomic) q autoFilledTracksTotalSize;
@property (nonatomic) NSString syncLibraryID;
@property (nonatomic) BOOL libraryEmpty;
@property (nonatomic) ML3Container currentDevicePurchasesPlaylist;
@property (nonatomic) ML3Container currentDevicePlaybackHistoryPlaylist;
@property (nonatomic) ML3Container currentDevicePhotosMemoriesPlaylist;
@property (nonatomic) ML3DatabaseMetadata databaseInfo;
@property (nonatomic) NSArray localizedSectionIndexTitles;
@property (nonatomic) NSArray preferredAudioTracks;
@property (nonatomic) NSArray preferredSubtitleTracks;
@property (nonatomic) BOOL isHomeSharingLibrary;
@property (nonatomic) BOOL mediaRestrictionEnabled;
@property (nonatomic) BOOL downloadOnAddToLibrary;
@property (nonatomic) BOOL isUnitTesting;
@property (nonatomic) NSArray libraryEntityFilterPredicates;
@property (nonatomic) NSArray libraryContainerFilterPredicates;
@property (nonatomic) NSArray libraryPublicEntityFilterPredicates;
@property (nonatomic) NSArray libraryPublicContainerFilterPredicates;
@property (nonatomic) BOOL hasUserPlaylists;
@property (nonatomic) BOOL hasAddedToLibraryAppleMusicContent;
@property (nonatomic) BOOL hasUserPlaylistsContainingAppleMusicContent;
@property (nonatomic) Q hash;
@property (nonatomic) # superclass;
@property (nonatomic) NSString description;
@property (nonatomic) NSString debugDescription;
@property (nonatomic) NSString accountDSID;
- (void)checkForChangesInHomeSharingLibrary:completionHandler:;
- (void)fillContainerForHomeSharingLibrary:containerID:completionHandler:;
- (void)_performImport:progressHandler:completion:;
- (BOOL)executeUpdateSQL:;
- (id)libraryContainerPathByAppendingPathComponent:;
- (BOOL)isReadOnly;
- (id)databasePath;
- (id)pathForBaseLocationPath:;
- (id)libraryContainerRelativePath:;
- (void)setPreferredVideoQuality:;
- (id)valueForDatabaseProperty:;
- (id)libraryContainerPath;
- (id)pathForResourceFileOrFolder:;
- (void)terminateForFailureToPerformDatabasePathChange;
- (long long)sagaOnDiskDatabaseRevision;
- (void)setReadOnly:;
- (void)dealloc;
- (id)pathForResourceFileOrFolder:basePath:relativeToBase:createParentFolderIfNecessary:;
- (void)clearSagaCloudAccountID;
- (long long)preferredVideoQuality;
- (void)setNotificationManager:;
- (void)setDelegate:;
- (id)accountDSID;
- (void)setSagaAccountID:;
- (id)serialQueue;
- (id)initWithCoder:;
- (id)sagaLastItemPlayDataUploadDate;
- (long long)syncGenerationID;
- (id)sagaLastPlaylistPlayDataUploadDate;
- (BOOL)importOriginalArtworkFromImageData:withArtworkToken:artworkType:sourceType:mediaType:;
- (void)setSagaDatabaseUserVersion:;
- (BOOL)hasUserPlaylistsContainingAppleMusicContent;
- (void)setStorefrontIdentifier:;
- (id)notificationManager;
- (id)sagaLastLibraryUpdateTime;
- (BOOL)isHomeSharingLibrary;
- (void)encodeWithCoder:;
- (void)setSagaLastPlaylistPlayDataUploadDate:;
- (BOOL)hasAddedToLibraryAppleMusicContent;
- (id)delegate;
- (BOOL)recordPlayEventForAlbumPersistentID:;
- (void)importArtworkTokenForEntityPersistentID:entityType:artworkToken:artworkType:sourceType:;
- (void)setSagaLastItemPlayDataUploadDate:;
- (void).cxx_destruct;
- (id)storefrontIdentifier;
- (void)setSagaLastSubscribedContainersUpdateTime:;
- (id)initWithPath:;
- (void)setSagaLastLibraryUpdateTime:;
- (id)sagaAccountID;
- (id)currentDevicePurchasesPlaylist;
- (void)clearSagaLastItemPlayDataUploadDate;
- (void)setClientIdentity:;
- (BOOL)isUnitTesting;
- (id)sagaLastSubscribedContainersUpdateTime;
- (BOOL)hasUserPlaylists;
- (id)localizedSectionHeaderForSectionIndex:;
- (void)clearSagaLastPlaylistPlayDataUploadDate;
- (BOOL)isCurrentThreadInTransaction;
- (id)localizedSectionIndexTitles;
- (void)performDatabasePathChange:completion:;
- (long long)sagaDatabaseUserVersion;
- (id)privacyContext;
- (BOOL)setValue:forDatabaseProperty:;
- (BOOL)deleteDatabaseProperty:;
- (void)setSagaOnDiskDatabaseRevision:;
- (void)emergencyDisconnectWithCompletion:;
- (id)libraryUID;
- (id)initWithPath:isUnitTesting:;
- (BOOL)isArtworkTokenAvailable:;
- (void)setLibraryContainerFilterPredicates:;
- (void)setLibraryEntityFilterPredicates:;
- (unsigned long long)sectionIndexTitleIndexForSectionIndex:;
- (void)setLibraryPublicContainerFilterPredicates:;
- (void)setLibraryPublicEntityFilterPredicates:;
- (long long)currentContentRevision;
- (id)currentDevicePhotosMemoriesPlaylist;
- (id)currentDevicePlaybackHistoryPlaylist;
- (BOOL)validateDatabase;
- (BOOL)recordPlayEventForContainerPersistentID:;
- (long long)currentRevision;
- (id)preferredAudioTracks;
- (void)performDatabaseTransactionWithBlock:;
- (void)enumeratePersistentIDsAfterRevision:revisionTrackingCode:maximumRevisionType:forMediaTypes:inUsersLibrary:usingBlock:;
- (void)enumeratePersistentIDsAfterRevision:revisionTrackingCode:maximumRevisionType:usingBlock:;
- (id)preferredSubtitleTracks;
- (void)retrieveBestArtworkTokensForEntityPersistentID:entityType:artworkType:retrievalTime:completionHandler:;
- (void)notifyDisplayValuesPropertyDidChange;
- (void)databaseConnectionAllowingWrites:withBlock:;
- (long long)jaliscoOnDiskDatabaseRevision;
- (id)syncLibraryID;
- (BOOL)isLibraryEmpty;
- (void)_effectiveSettingsDidChangeNotification:;
- (void)_libraryPathDidChangeNotification:;
- (void)connectionWillOpenDatabase:;
- (void)connectionDidOpenDatabase:;
- (void)connectionWillCloseDatabase:;
- (void)connectionDidAccessDatabase:;
- (void)connectionDidBeginDatabaseTransaction:;
- (void)connection:didEndDatabaseTransactionAndCommit:;
- (void)connectionPool:createdNewConnection:;
- (id)initWithClientIdentity:forUserAccount:;
- (id)initWithResourcesManager:;
- (id)initWithPath:readOnly:populateUnitTestTablesBlock:;
- (id)initWithClientIdentity:path:;
- (id)initWithClientIdentity:path:readOnly:populateUnitTestTablesBlock:;
- (id)resourcesManager;
- (id)connectionPool;
- (id)sortKeyBuilder;
- (void)setIsHomeSharingLibrary:;
- (BOOL)downloadOnAddToLibrary;
- (void)setSyncGenerationID:;
- (void)setSyncLibraryID:;
- (void)setLibraryUID:;
- (id)databaseInfo;
- (BOOL)mediaRestrictionEnabled;
- (id)libraryEntityFilterPredicatesForEntityClass:;
- (id)libraryEntityFilterPredicatesForContainerClass:;
- (id)checkoutReaderConnection;
- (id)checkoutWriterConnection;
- (void)checkInDatabaseConnection:;
- (void)reconnectToDatabase;
- (void)performReadOnlyDatabaseTransactionWithBlock:;
- (void)performAsyncDatabaseWriteTransactionWithBlock:completionBlock:;
- (BOOL)automaticDatabaseValidationDisabled;
- (int)currentDatabaseVersion;
- (BOOL)createIndexes;
- (BOOL)emptyAllTables;
- (BOOL)clearAllGeniusData;
- (BOOL)clearAllCloudKVSData;
- (id)accountCacheDatabase;
- (void)accessSortKeyBuilder:;
- (id)groupingKeyForString:;
- (id)groupingKeysForStrings:;
- (unsigned long long)unknownSectionIndex;
- (void)notifyContentsDidChange;
- (void)notifyAssistantContentsDidChange;
- (void)notifyEntitiesAddedOrRemoved;
- (void)notifyNonContentsPropertyDidChange;
- (void)notifyInvisiblePropertyDidChange;
- (void)notifySectionsDidChange;
- (void)notifyCloudLibraryAvailabilityDidChange;
- (void)notifyLibraryImportDidFinish;
- (void)notifyKeepLocalStateDidChange;
- (void)saveTrackMetadata;
- (void)saveTrackMetadataSinceRevision:withGrappaID:;
- (void)savePlaylists;
- (void)savePlaylistsSinceRevision:withGrappaID:;
- (BOOL)requiresSchemaOnlyUpdatesOnConnection:;
- (BOOL)requiresNonSchemaUpdatesOnConnection:;
- (BOOL)updateSortMap;
- (void)getChangedPersistentIDsAfterRevision:revisionTrackingCode:maximumRevisionType:usingBlock:;
- (BOOL)persistentID:changedAfterRevision:revisionTrackingCode:;
- (unsigned long long)countOfChangedPersistentIdsAfterRevision:revisionTrackingCode:maximumRevisionType:;
- (void)removeSource:withCompletionHandler:;
- (void)removeSource:usingConnection:withCompletionHandler:;
- (void)removeTracksWithPersistentIDs:fromSource:withCompletionHandler:;
- (void)removeTracksWithPersistentIDs:fromSource:usingConnection:withCompletionHandler:;
- (void)removePlaylistsWithPersistentIDs:fromSource:usingConnection:withCompletionHandler:;
- (long long)autoFilledTracksTotalSize;
- (long long)autoFilledTracksTotalSizeWithUrgency:;
- (long long)deleteAutoFilledTracksOfAtLeastTotalSize:urgency:respectSongMattress:;
- (long long)deleteAutoFilledTracksOfAtLeastTotalSize:;
- (long long)deleteAutoFilledTracksOfAtLeastTotalSize:urgency:;
- (void)autogenerateSupportedSizesForAllOriginalArtworkWithConnection:completionHandler:;
- (BOOL)importExistingOriginalArtworkWithArtworkToken:artworkType:sourceType:mediaType:;
- (BOOL)importOriginalArtworkFromFileURL:withArtworkToken:artworkType:sourceType:mediaType:;
- (BOOL)removeArtworkAssetWithToken:;
- (BOOL)deleteArtworkToken:;
- (void)migrateExistingArtworkToken:newArtworkToken:newSourceType:;
- (void)importArtworkTokenForEntityPersistentID:entityType:artworkToken:artworkType:sourceType:usingConnection:;
- (void)removeArtworkTokenForEntityPersistentID:entityType:artworkType:sourceType:;
- (void)removeArtworkTokenForEntityPersistentID:entityType:artworkType:sourceType:usingConnection:;
- (void)updateBestArtworkTokenForEntityPersistentID:entityType:artworkType:retrievalTime:usingConnection:;
- (void)updateBestArtworkTokenForEntityPersistentID:entityType:artworkType:retrievalTime:preserveExistingAvailableToken:usingConnection:;
- (void)enumerateArtworkTokensForEntityPersistentID:entityType:artworkType:usingBlock:;
- (BOOL)cleanupArtworkWithOptions:;
- (BOOL)cleanupArtworkWithOptions:usingConnection:;
- (void)removeTombstonesForDeletedItems;
- (void)removeOrphanedTracksOnlyInCaches:;
- (void)removeItemsWithFamilyAccountID:purchaserAccountID:downloaderAccountID:;
- (void)migratePresignedValidity;
- (BOOL)hasPresignedValidity;
- (BOOL)verifyPresignedValidity;
- (void)deletePresignedValidity;
- (void)updateTrackIntegrity;
- (void)_logDatabaseAccess;
- (BOOL)_insertArtworkRowWithArtworkToken:artworkType:sourceType:relativePath:;
- (BOOL)_insertArtworkRowWithArtworkToken:artworkType:sourceType:relativePath:usingConnection:;
- (BOOL)_updateBestArtworkTokensForArtworkToken:artworkType:sourceType:preserveExistingAvailableToken:usingConnection:;
- (BOOL)_determineAndUpdateBestArtworkTokensForEntityPersistentID:entityType:artworkType:retrievalTime:preserveExistingAvailableToken:usingConnection:;
- (id)_allArtworkVariantDirectories;
- (void)_deleteAllArtworkVariantsAtRelativePaths:;
- (BOOL)_removeOrphanedArtworkTokensUsingConnection:;
- (BOOL)_removeOrphanedArtworkMetadataUsingConnection:;
- (BOOL)_removeOrphanedArtworkAssetsUsingConnection:;
- (BOOL)_removeInvalidAvailableArtworkTokensUsingConnection:;
- (void)_convertOriginalArtworkToDevicePreferredFormatFromSourceURL:toDestinationURL:completionHandler:;
- (void)_autogenerateArtworkForRelativePath:artworkType:mediaType:completionHandler:;
- (id)_newGeniusDBConnectionAtPath:;
- (BOOL)_canConfigureMediaLibraryDatabaseConnection:;
- (void)_configureMediaLibraryDatabaseConnection:;
- (void)_teardownMediaLibraryDatabaseConnection:;
- (BOOL)_clearAllRowsFromTables:;
- (BOOL)_prepareForAccountChange:;
- (void)_completeAccountChangeWithPath:;
- (BOOL)_shouldProcessAccountChanges;
- (void)_closeAndLockCurrentDatabaseConnections;
- (void)_setupNotificationManager;
- (void)_tearDownNotificationManager;
- (void)_postClientNotificationWithDistributedName:localName:;
- (void)setIsUnitTesting:;
- (id)libraryEntityFilterPredicates;
- (id)libraryContainerFilterPredicates;
- (id)libraryPublicEntityFilterPredicates;
- (id)libraryPublicContainerFilterPredicates;
- (BOOL)isUsingSharedLibraryPath;
- (void)setUsingSharedLibraryPath:;
- (id)artistGroupingKeyForArtistName:seriesName:;
- (id)artistForArtistName:seriesName:;
- (id)albumForAlbumArtistPersistentID:albumName:feedURL:seasonNumber:compilation:;
- (BOOL)repairAlbumArtistRelationshipsWithConnection:;
- (BOOL)coerceValidDatabaseWithError:;
- (BOOL)_validateDatabaseUsingConnection:error:;
- (BOOL)updateSortMapOnConnection:;
- (BOOL)updateSortMapOnConnection:forceUpdateOriginals:;
- (BOOL)inTransactionUpdateSortMapOnConnection:forceUpdateOriginals:;
- (BOOL)inTransactionUpdateSortMapOnConnection:forceRebuild:forceUpdateOriginals:;
- (BOOL)inTransactionUpdateSearchMapOnConnection:;
- (BOOL)validateSortMapUnicodeVersionOnConnection:;
- (id)nameOrderForString:;
- (id)insertStringsIntoSortMap:didReSortMap:;
- (id)insertStringsIntoSortMap:;
- (long long)insertStringIntoSortMapNoTransaction:;
- (id)_systemUnicodeVersionData;
- (BOOL)coalesceMismatchedCollectionsUsingConnection:;
- (BOOL)_coalesceMismatchedCollectionClass:usingConnection:;
- (id)genreForGenre:;
- (id)composerForComposerName:;
- (id)albumArtistForEffectiveAlbumArtistName:;
- (BOOL)updateSystemPlaylistNamesForCurrentLanguageUsingConnection:;
- (void)updateOrderingLanguagesForCurrentLanguage;
- (void)_updateSystemPlaylist:withName:usingConnection:;
- (long long)purgeableStorageSizeWithUrgency:;
- (long long)purgeableStorageSizeWithUrgency:includeAutoFilledTracks:;
- (long long)clearPurgeableStorageAmount:withUrgency:;
- (long long)clearPurgeableStorageAmount:withUrgency:includeAutoFilledTracks:;
- (long long)clearAllRemovedTracks;
- (void)setAutoFilledTracksArePurgeable:;
- (BOOL)autoFilledTracksArePurgeable;
- (void)setShouldOptimizeStorage:;
- (BOOL)shouldOptimizeStorage;
- (void)setMinimumPurgeableStorage:;
- (long long)minimumPurgeableStorage;
- (void)enumeratePurgeableAlbumTracksForUrgency:usingBlock:;
- (BOOL)_shouldPurgeKeepLocalTracksForUrgency:;
- (long long)_databaseFileFreeSpace;
- (long long)_cloudAssetsTotalSize;
- (unsigned long long)_artworkTotalSize;
- (BOOL)_shouldPurgeAllArtworkAtUrgency:;
- (unsigned long long)_purgeAllArtwork;
- (unsigned long long)_purgeableArtworkTotalSizeWithUrgency:;
- (unsigned long long)_clearPurgeableArtworkOfAmount:withUrgency:;
- (unsigned long long)_managedPurgeableTracksTotalSizeWithUrgency:;
- (unsigned long long)_managedClearPurgeableTracksOfAmount:urgency:;
- (id)_purgeableItemsPredicateSQLWithUrgency:;
- (id)_nonPurgeableAlbumsQuerySQLWithUrgency:;
- (id)_purgeableAlbumsQuerySQLWithUrgency:;
- (unsigned long long)_totalSizeForAllNonCacheTracks;
- (void)_enumeratePurgeableStreamedTracksForUrgency:usingBlock:;
- (void)_enumeratePurgeableAlbumTracksForUrgency:usingBlock:;
- (long long)_purgeableTracksTotalSizeWithUrgency:includeAutoFilledTracks:;
- (void)_enumeratePurgeableTracksForUrgency:includeAutoFilledTracks:includeCloudAssets:usingBlock:;
- (id)_purgeableTrackPredicateWithUrgency:includeAutoFilledTracks:includeCloudAssets:;
- (id)_allKeepLocalPlaylistTracks;
- (id)_notInKeepLocalCollectionPredicate;
- (long long)_clearDatabaseFileFreeSpace;
- (long long)_clearAllCloudAssets;
- (long long)_clearOrphanedAssetsOfAmount:withUrgency:;
- (long long)_clearPurgeableTracksOfAmount:withUrgency:includeAutoFilledTracks:;
- (long long)_clearPurgeableTracksOfAmount:withUrgency:includeCloudAssets:includeAutoFilledTracks:;
- (id)artworkDirectory;
- (id)originalArtworkDirectory;
- (id)rootArtworkCacheDirectory;
- (id)artworkCacheDirectoryForSize:;
- (id)artworkCacheDirectoryForEffect:;
- (BOOL)hasOriginalArtworkForRelativePath:;
- (BOOL)isArtworkFetchableForPersistentID:entityType:artworkType:artworkSourceType:;
- (BOOL)supportsUbiquitousPlaybackPositions;
- (id)uppService;
- (void)updateUbiquitousDatabaseByRemovingUbiquitousMetadataFromTrackWithPersistentID:;
- (void)updateMusicLibraryByApplyingUbiquitousBookmarkMetadataToTrackWithPersistentID:;
- (id)sagaLastKnownActiveLockerAccountDSID;
- (void)setSagaLastKnownActiveLockerAccountDSID:;
- (id)sagaLastGeniusUpdateDate;
- (void)setSagaLastGeniusUpdateDate:;
- (id)sagaCloudLibraryCUID;
- (void)setSagaCloudLibraryCUID:;
- (id)sagaCloudLibraryTroveID;
- (void)setSagaCloudLibraryTroveID:;
- (long long)sagaCloudAddToPlaylistBehavior;
- (void)setSagaCloudAddToPlaylistBehavior:;
- (BOOL)sagaNeedsFullUpdateAfterNextUpdate;
- (void)setSagaNeedsFullUpdateAfterNextUpdate:;
- (BOOL)sagaPrefersToMergeWithCloudLibrary;
- (void)setSagaPrefersToMergeWithCloudLibrary:;
- (void)clearSagaLastGeniusUpdateDate;
- (void)clearSagaCloudLibraryCUID;
- (void)clearSagaCloudLibraryTroveID;
- (void)clearSagaPrefersToMergeWithCloudLibrary;
- (void)clearSagaCloudAddToPlaylistBehavior;
- (long long)syncIdFromMultiverseId:;
- (BOOL)prepareUnitTestDatabaseWithSQLFromContentsOfFile:error:;
- (id)jaliscoAccountID;
- (void)setJaliscoAccountID:;
- (id)jaliscoLastGeniusUpdateDate;
- (void)setJaliscoLastGeniusUpdateDate:;
- (id)jaliscoLastSupportedMediaKinds;
- (void)setJaliscoLastSupportedMediaKinds:;
- (id)jaliscoLastExcludedMediaKinds;
- (BOOL)jaliscoHasCloudGeniusData;
- (void)setJaliscoHasCloudGeniusData:;
- (BOOL)jaliscoIsMusicGeniusUserEnabled;
- (void)setJaliscoIsMusicGeniusUserEnabled:;
- (BOOL)jaliscoNeedsUpdateForTokens;
- (void)setJaliscoNeedsUpdateForTokens:;
- (void)setJaliscoOnDiskDatabaseRevision:;
- (id)jaliscoLastLibraryUpdateTime;
- (void)setJaliscoLastLibraryUpdateTime:;
- (void)clearJaliscoAccountID;
- (void)clearJaliscoLastGeniusUpdateDate;
- (void)clearJaliscoLastExcludedMediaKinds;
- (void)sortJaliscoLastSupportedMediaKinds;
- (void)updateJaliscoExcludedMediaKindsWith:excludingMediaKindsInSet:;
+ (void)buildDatabaseFromHomeSharingLibrary:atPath:completionHandler:progressHandler:;
+ (void)buildDatabaseFromHomeSharingLibrary:atPath:completionHandler:;
+ (id)libraryContainerPathByAppendingPathComponent:;
+ (id)pathForBaseLocationPath:;
+ (id)libraryContainerRelativePath:;
+ (id)libraryContainerPath;
+ (id)pathForResourceFileOrFolder:;
+ (id)globalSerialQueue;
+ (id)pathForResourceFileOrFolder:basePath:relativeToBase:createParentFolderIfNecessary:;
+ (BOOL)supportsSecureCoding;
+ (id)sectionIndexTitles;
+ (id)sharedLibrary;
+ (id)allTables;
+ (id)autoupdatingSharedLibrary;
+ (id)allLibraries;
+ (long long)devicePreferredImageFormat;
+ (BOOL)deviceSupportsASTC;
+ (id)musicLibraryForUserAccount:;
+ (void)setGlobalPrivacyContextWithAuditToken:;
+ (id)_onGlobalQueue_shareableMusicLibraryWithResourcesManager:;
+ (id)registeredLibraries;
+ (id)autoupdatingSharedLibraryPath;
+ (void)setAutoupdatingSharedLibraryPath:;
+ (id)musicLibraryPerUserDSID;
+ (id)sharedLibraryDatabasePath;
+ (void)setSharedLibraryDatabasePath:;
+ (void)disableSharedLibrary;
+ (void)disableAutomaticDatabaseValidation;
+ (void)enableAutomaticDatabaseValidation;
+ (BOOL)deviceSupportsMultipleLibraries;
+ (id)localizedSectionHeaderForSectionHeader:;
+ (id)localizedSectionIndexTitleForSectionHeader:;
+ (id)sectionIndexTitleForSectionHeader:;
+ (void)enumerateSortMapTablesUsingBlock:;
+ (void)removeOrphanedTracks;
+ (BOOL)updateTrackIntegrityOnConnection:;
+ (id)widthLimitedSetValuesQueue;
+ (id)assistantSyncDataChangedNotificationName;
+ (id)distributedToLocalNotificationMapping;
+ (void)clearCloudAssetSharedCache;
+ (id)artworkRelativePathFromToken:;
+ (id)artworkTokenForArtistHeroURL:;
+ (id)artworkTokenForChapterWithItemPID:retrievalTime:;
+ (long long)artworkSourceTypeForTrackSource:;
+ (id)storeLinkSchemaSQL;
+ (id)sortMapSchemaSQL;
+ (id)sortMapNewSchemaSQL;
+ (id)itemSchemaSQL;
+ (id)itemNewSchemaSQL;
+ (id)allSchemaSQL;
+ (id)allPragmaSQL;
+ (id)allTriggersSQL;
+ (id)indexSchemaSQL;
+ (id)itemIndexSchemaSQL;
+ (int)userVersionUsingConnection:;
+ (BOOL)userVersionMatchesSystemUsingConnection:;
+ (BOOL)orderingLanguageMatchesSystemUsingConnection:;
+ (BOOL)dropIndexesUsingConnection:tableNames:;
+ (id)mediaFolderPath;
+ (id)mediaFolderPathByAppendingPathComponent:;
+ (id)allLibraryContainerPaths;
+ (id)libraryPathForContainerPath:;
+ (id)cloudAssetsSharedCacheFolderPath;
+ (id)databasePathForUnitTest:withBasePath:;
+ (id)unitTestableLibraryForTest:basePath:setupSQLFilenames:;
+ (id)jaliscoGetSortedMediaKinds:;
@end
