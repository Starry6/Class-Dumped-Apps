@interface STConversation : NSObject
@property (nonatomic) CNContactStore contactStore;
@property (nonatomic) CNDowntimeWhitelist whitelist;
@property (nonatomic) STManagementState managementState;
@property (nonatomic) DMFCommunicationPolicyMonitor communicationPolicyMonitor;
@property (nonatomic) DMFApplicationPolicyMonitor thirdPartyApplicationPolicyMonitor;
@property (nonatomic) NSString bundleIdentifier;
@property (nonatomic) BOOL isThirdPartyBundleIdentifier;
@property (nonatomic) NSString processName;
@property (nonatomic) q generalScreenTimePolicy;
@property (nonatomic) q whileLimitedPolicy;
@property (nonatomic) Q currentApplicationState;
@property (nonatomic) q currentThirdPartyApplicationState;
@property (nonatomic) DMFEmergencyModeMonitor emergencyModeMonitor;
@property (nonatomic) BOOL emergencyModeEnabled;
@property (nonatomic) BOOL didFetchInitialScreenTimePolicyState;
@property (nonatomic) BOOL didFetchInitialApplicationState;
@property (nonatomic) BOOL didFetchInitialEmergencyModeState;
@property (nonatomic) BOOL didFetchInitialThirdPartyApplicationState;
@property (nonatomic) NSInteger policyNotifyToken;
@property (nonatomic) NSInteger emergencyModeNotifyToken;
@property (nonatomic) STConversation me;
@property (nonatomic) @? conversationCompletionHandler;
- (id)bundleIdentifier;
- (void)setMe:;
- (void)dealloc;
- (void)_updateAllContextsForNewWhileLimitedPolicyOrWhitelist;
- (void)_emergencyModeDidChange;
- (id)me;
- (void)_stConversationCommonInitWithBundleIdentifier:contactStore:completionHandler:;
- (void)setGeneralScreenTimePolicy:;
- (void)setCommunicationPolicyMonitor:;
- (id)whitelist;
- (int)policyNotifyToken;
- (void)setEmergencyModeMonitor:;
- (BOOL)_shouldWhileLimitedAllowHandles:context:;
- (BOOL)didFetchInitialThirdPartyApplicationState;
- (long long)currentThirdPartyApplicationState;
- (id)emergencyModeMonitor;
- (id)initWithBundleIdentifier:;
- (void)_populateAllowedContactsByHandlesForContactHandles:context:;
- (BOOL)didFetchInitialScreenTimePolicyState;
- (void)setCurrentThirdPartyApplicationState:;
- (id)_contactsByHandle:error:;
- (id)initWithBundleIdentifier:contactStore:;
- (void)_screenTimePolicyDidChange;
- (BOOL)emergencyModeEnabled;
- (id)thirdPartyApplicationPolicyMonitor;
- (void)_stConversationCommonInitWithThirdPartyBundleIdentifier:completionHandler:;
- (BOOL)_doesContainAtLeastOneContactInHandles:contactsByHandle:;
- (int)emergencyModeNotifyToken;
- (long long)generalScreenTimePolicy;
- (void)_updateThirdPartyContext:forHandles:;
- (void)callCompletionHandlerIfNeededWithConversation:error:;
- (id)processName;
- (void)setDidFetchInitialScreenTimePolicyState:;
- (id)communicationPolicyMonitor;
- (void)setConversationCompletionHandler:;
- (void)_currentThirdPartyApplicationStateDidChange;
- (void)setThirdPartyApplicationPolicyMonitor:;
- (void)_updateAllContextsUpdateGeneral:updateLimited:updateCurrentApplicationState:updateAllowedByContactsHandle:refreshContacts:refreshWhitelist:updateEmergencyMode:;
- (id)_filteredArrayForKnownHandlesInArray:;
- (void)_currentApplicationStateDidChange;
- (void)_stConversationCommonInitSetupObservationOfStateChanges;
- (void).cxx_destruct;
- (id)initSynchronouslyWithBundleIdentifier:;
- (unsigned long long)currentApplicationState;
- (id)contactStore;
- (id)conversationCompletionHandler;
- (void)_populateThirdPartyAllowedContactsByHandlesForContactHandles:context:;
- (void)callCompletionHandlerIfNeededWithThirdPartyConversation:error:;
- (void)_contactStoreDidChange;
- (id)managementState;
- (BOOL)didFetchInitialEmergencyModeState;
- (void)setDidFetchInitialThirdPartyApplicationState:;
- (void)_updateAllThirdPartyContexts;
- (void)_updateContext:forHandles:updateGeneral:updateLimited:updateCurrentApplicationState:updateAllowedByContactsHandle:refreshContacts:refreshWhitelist:updateEmergencyMode:;
- (void)setDidFetchInitialEmergencyModeState:;
- (BOOL)didFetchInitialApplicationState;
- (void)setWhileLimitedPolicy:;
- (id)initWithBundleIdentifier:contactStore:completionHandler:;
- (BOOL)isThirdPartyBundleIdentifier;
- (id)initSynchronouslyWithThirdPartyBundleIdentifier:;
- (void)setEmergencyModeEnabled:;
- (void)setDidFetchInitialApplicationState:;
- (id)initWithThirdPartyBundleIdentifier:completionHandler:;
- (void)setManagementState:;
- (BOOL)_shouldGeneralScreenTimeAllowHandles:context:;
- (id)allowableByContactsHandles:;
- (void)setCurrentApplicationState:;
- (long long)whileLimitedPolicy;
+ (void)requestConversationWithBundleIdentifier:completionHandler:;
@end
