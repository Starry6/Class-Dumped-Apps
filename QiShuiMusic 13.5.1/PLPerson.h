@interface PLPerson : PLManagedObject
@property (nonatomic) BOOL shouldIndexForSearch;
@property (nonatomic) NSInteger verifiedType;
@property (nonatomic) NSInteger cloudVerifiedType;
@property (nonatomic) NSString personUUID;
@property (nonatomic) NSString fullName;
@property (nonatomic) BOOL userVerified;
@property (nonatomic) BOOL graphVerified;
@property (nonatomic) BOOL isTombstone;
@property (nonatomic) BOOL keyFaceIsPicked;
@property (nonatomic) s detectionType;
@property (nonatomic) Q hash;
@property (nonatomic) # superclass;
@property (nonatomic) NSString description;
@property (nonatomic) NSString debugDescription;
@property (nonatomic) @ localID;
@property (nonatomic) s cloudLocalState;
@property (nonatomic) PLDetectedFace keyFace;
@property (nonatomic) NSInteger verifiedType;
@property (nonatomic) NSInteger cloudVerifiedType;
@property (nonatomic) NSString personUUID;
@property (nonatomic) s detectionType;
@property (nonatomic) NSString fullName;
@property (nonatomic) NSString displayName;
@property (nonatomic) NSSet personReferences;
@property (nonatomic) NSSet detectedFaces;
@property (nonatomic) s keyFacePickSource;
@property (nonatomic) NSSet rejectedFaces;
@property (nonatomic) NSSet rejectedFacesNeedingFaceCrops;
@property (nonatomic) NSSet clusterRejectedFaces;
@property (nonatomic) NSSet faceCrops;
@property (nonatomic) NSInteger type;
@property (nonatomic) I manualOrder;
@property (nonatomic) double mergeCandidateConfidence;
@property (nonatomic) NSString personUri;
@property (nonatomic) BOOL inPersonNamingModel;
@property (nonatomic) NSInteger faceCount;
@property (nonatomic) s cloudLocalState;
@property (nonatomic) s cloudDeleteState;
@property (nonatomic) PLDetectedFaceGroup associatedFaceGroup;
@property (nonatomic) NSDictionary contactMatchingDictionary;
@property (nonatomic) s questionType;
@property (nonatomic) S genderType;
@property (nonatomic) S ageType;
@property (nonatomic) S suggestedForClientType;
@property (nonatomic) NSSet userFeedbacks;
@property (nonatomic) PLShareParticipant shareParticipant;
@property (nonatomic) NSSet mergeCandidates;
@property (nonatomic) NSSet mergeCandidatesWithConfidence;
@property (nonatomic) NSSet invalidMergeCandidates;
@property (nonatomic) PLPerson mergeTargetPerson;
@property (nonatomic) NSSet mergeSourcePersons;
@property (nonatomic) NSInteger effectiveVerifiedType;
@property (nonatomic) q cloudDeletionType;
@property (nonatomic) NSString cloudUUIDForDeletion;
@property (nonatomic) Q hash;
@property (nonatomic) # superclass;
@property (nonatomic) NSString description;
@property (nonatomic) NSString debugDescription;
- (BOOL)isValidForPersistence;
- (id)payloadID;
- (BOOL)isTombstone;
- (BOOL)isSyncableChange;
- (id)payloadIDForTombstone:;
- (void)persistMetadataToFileSystemWithPathManager:;
- (void)willSave;
- (id)cloudUUIDForDeletion;
- (id)payloadForChangedKeys:;
- (long long)cloudDeletionType;
- (void)prepareForDeletion;
- (id)debugLogDescription;
- (void)removePersistedFileSystemDataWithPathManager:;
- (id)cplFullRecord;
- (BOOL)supportsCloudUpload;
- (id)localID;
- (id)mutableFaces;
- (id)mutableInvalidMergeCandidates;
- (id)mutableMergeCandidates;
- (id)mutableMergeCandidatesWithConfidence;
- (id)mutableRejectedFaces;
- (id)pickOptimalStateForUserInitiatedMergeWithPersons:nominalTarget:;
- (void)disconnectFaceGroup;
- (void)rejectFaceIfPossible:shouldCreateFaceCrop:;
- (void)prepareForUserInitiatedMergeWithPersons:;
- (id)faceGroupDescription;
- (void)setKeyFace:pickSource:;
- (BOOL)dedupeGraphPersons:error:;
- (void)setEffectiveVerifiedType:;
- (void)mergePersons:withOptimalState:;
- (BOOL)validForPersistenceChangedForChangedKeys:;
- (id)syncDescription;
- (BOOL)shouldIndexForSearch;
- (void)_triggerPersonSyncUpdateWithLibraryServicesManager:;
- (id)mutableRejectedFacesNeedingFaceCrops;
- (id)mutableFaceCrops;
- (void)resetAllFacesToDefault;
- (int)effectiveVerifiedType;
- (void)_updateSharedLibraryPeopleRulesForTombstone;
- (id)_nameRelatedMetadataKeys;
- (id)reverseOrderedMergeTargetPersons;
- (id)pickKeyFaceOptimalStateForContactDedupeWithPersons:;
- (id)finalMergeTargetPerson;
- (void)_basicMergePersons:;
- (void)basicMergePersons:;
- (void)applyCPLChangeForContactMatchingDictionary:;
- (id)cplPersonChange;
- (void)setCPLSyncedMergeTarget:;
- (BOOL)keyFaceIsPicked;
- (void)setKeyFaceToPicked;
- (BOOL)userVerified;
- (BOOL)graphVerified;
+ (void)createAssociatedPersonForFaceGroup:inManagedObjectContext:;
+ (id)entityName;
+ (id)_predicateForSupportedDetectionTypesForUpload;
+ (id)predicateForVisibleKeyFace;
+ (BOOL)resetAllInLibrary:error:;
+ (void)batchFetchAssociatedPersonByFaceGroupUUIDWithFaceGroupUUIDs:predicate:library:completion:;
+ (id)fullNameFromContact:;
+ (id)insertIntoManagedObjectContext:withPersonUUID:fullName:verifiedType:;
+ (id)_batchFetchPersonUUIDsByAssetUUIDWithAssetUUIDs:predicate:inManagedObjectContext:error:;
+ (void)createAssociatedPersonForFaceGroup:;
+ (BOOL)person:isBetterMergeTargetThanPerson:;
+ (id)personsToUploadInManagedObjectContext:limit:;
+ (id)cloudUUIDKeyForDeletion;
+ (id)personsMatchingPredicate:fetchLimit:sortDescriptors:relationshipKeyPathsForPrefetching:inManagedObjectContext:;
+ (void)enumerateAssetUUIDsForSearchIndexingWithPersonUUID:managedObjectContext:assetUUIDHandler:;
+ (id)listOfSyncedProperties;
+ (id)allPersonsInManagedObjectContext:;
+ (void)resetCloudStateInPhotoLibrary:;
+ (id)fetchFinalMergeTargetPersonForPersonWithUUID:context:predicate:;
+ (id)personsWithUUIDs:inManagedObjectContext:;
+ (id)_stringFromContact:preferGivenName:;
+ (id)displayNameFromContact:;
+ (id)fetchPersonCountByAssetUUIDForAssetUUIDs:predicate:library:error:;
+ (id)fetchDuplicatePersonUUIDsInManagedObjectContext:error:;
+ (id)predicateForPersonsNeedingFaceCropGenerationForFaceObjectID:;
+ (id)personWithUUID:inManagedObjectContext:;
+ (id)predicateToExcludeTorsoOnlyPerson;
+ (long long)cloudDeletionTypeForTombstone:;
+ (id)personsWithPersonUri:inManagedObjectContext:;
+ (id)_predicateForSupportedVerifiedTypesForUpload;
+ (id)insertIntoPhotoLibrary:withPersonUUID:fullName:verifiedType:;
+ (id)listOfPropertiesToResetAgeAndGender;
+ (id)personsToPrefetchInManagedObjectContext:;
+ (void)batchFetchPersonUUIDsByAssetUUIDWithAssetUUIDs:predicate:inManagedObjectContext:completion:;
+ (id)predicateForIncludedDetectionTypes:;
+ (id)predicateForPersistence;
+ (void)batchFetchPersonsByAssetUUIDWithAssetUUIDs:predicate:library:completion:;
+ (id)personsWithPersonUris:inManagedObjectContext:;
@end
