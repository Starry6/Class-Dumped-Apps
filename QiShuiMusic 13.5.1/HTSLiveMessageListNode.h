@interface HTSLiveMessageListNode : NSObject
@property (nonatomic) BOOL ac_isPlaying;
@property (nonatomic) double ac_fontSize;
@property (nonatomic) {CGSize=dd} waveViewSize;
@property (nonatomic) NSString waveFilePath;
@property (nonatomic) BOOL needLayoutReturn;
@property (nonatomic) NSAttributedString nameString;
@property (nonatomic) NSAttributedString sentenceString;
@property (nonatomic) NSAttributedString durationString;
@property (nonatomic) <IESLiveAudioPlayAnimDelegate> animDelegate;
@property (nonatomic) Q hash;
@property (nonatomic) # superclass;
@property (nonatomic) NSString description;
@property (nonatomic) NSString debugDescription;
@property (nonatomic) <IESLiveRoomServiceAdapter> room;
@property (nonatomic) NSArray associatedObjects;
@property (nonatomic) NSString title;
@property (nonatomic) NSString content;
@property (nonatomic) HTSLiveText displayTextContent;
@property (nonatomic) UIColor titleColor;
@property (nonatomic) UIColor contentColor;
@property (nonatomic) BOOL isMyMessage;
@property (nonatomic) q relationBadgeType;
@property (nonatomic) BOOL disableTapHighlight;
@property (nonatomic) double lastDisplayTime;
@property (nonatomic) BOOL isOtherLiveRoom;
@property (nonatomic) BOOL intercomHideUserCard;
@property (nonatomic) NSString accessibilityString;
@property (nonatomic) double createTime;
@property (nonatomic) BOOL isPinnedNode;
@property (nonatomic) q style;
@property (nonatomic) double displayTime;
@property (nonatomic) double minPinnedTime;
@property (nonatomic) double pinnedTime;
@property (nonatomic) BOOL foldPinningNode;
@property (nonatomic) BOOL slideUpDismiss;
@property (nonatomic) BOOL removeAfterPinned;
@property (nonatomic) BOOL showRefreshTag;
@property (nonatomic) double pinnedPriority;
@property (nonatomic) double pinnedNodeWillPinTimeStamp;
@property (nonatomic) double pinnedNodeWillDisappearTimeStamp;
@property (nonatomic) BOOL isFloatNode;
@property (nonatomic) NSAttributedString userNameAttrString;
@property (nonatomic) {CGSize=dd} contentSize;
@property (nonatomic) NSMutableArray emojiURLListArray;
@property (nonatomic) BOOL isSingleEmoji;
@property (nonatomic) HTSLiveImage avartarBorder;
@property (nonatomic) BOOL isMention;
@property (nonatomic) BOOL hasRead;
@property (nonatomic) NSString imagePlaceHolderInDisplayText;
@property (nonatomic) HTSLiveShareItemStyle itemStyle;
@property (nonatomic) q replyID;
@property (nonatomic) HTSLiveText repliedLiveText;
@property (nonatomic) NSAttributedString repliedString;
@property (nonatomic) BOOL tr_hasTrackedShow;
@property (nonatomic) GPBMessage message;
@property (nonatomic) NSString identifier;
@property (nonatomic) NSAttributedString attributedString;
@property (nonatomic) NSMutableArray actions;
@property (nonatomic) double preferredMaxLayoutWidth;
@property (nonatomic) # cellViewClass;
@property (nonatomic) UIColor backgroundColor;
@property (nonatomic) UIColor longPressBackgroundColor;
@property (nonatomic) NSString backgroundImageURL;
@property (nonatomic) @? tapOtherAction;
@property (nonatomic) @? displayAction;
@property (nonatomic) {CGSize=dd} size;
@property (nonatomic) {CGSize=dd} innerViewSize;
@property (nonatomic) {UIEdgeInsets=dddd} textContainerInset;
@property (nonatomic) double topMargin;
@property (nonatomic) double bottomMargin;
@property (nonatomic) q displayRowCount;
@property (nonatomic) q listCellStyle;
@property (nonatomic) NSString accessibilityBadgeString;
@property (nonatomic) @? itemUpdateBlock;
@property (nonatomic) Q hash;
@property (nonatomic) # superclass;
@property (nonatomic) NSString description;
@property (nonatomic) NSString debugDescription;
- (long long)displayRowCount;
- (BOOL)enableLongPress;
- (BOOL)executedTapTextActionWith:cell:;
- (BOOL)filterUserBadge;
- (void)setAc_fontSize:;
- (void)setIsMyMessage:;
- (long long)executedTapOtherActionWithCell:;
- (BOOL)foldPinningNode;
- (BOOL)isOtherLiveRoom;
- (BOOL)isValidFoldNode;
- (double)lastDisplayTime;
- (id)repliedLiveText;
- (void)setIsFloatNode:;
- (id)userPreviewConfigWithNode:user:;
- (double)ac_fontSize;
- (BOOL)ac_isPlaying;
- (id)accessibilityBadgeString;
- (id)accessibilityNodeString;
- (void)addActionWithRange:piece:tapAction:;
- (id)animDelegate;
- (id)avartarBorder;
- (BOOL)canDisplayInFloatArea;
- (id)delegateIdentifier;
- (BOOL)disableTapHighlight;
- (id)displayAction;
- (id)displayTextContent;
- (id)emojiURLListArray;
- (long long)executedTapActionWithPoint:cell:;
- (id)imagePlaceHolderInDisplayText;
- (id)innerViewSize;
- (BOOL)intercomHideUserCard;
- (BOOL)isDigged;
- (BOOL)isFloatNode;
- (BOOL)isMention;
- (BOOL)isMyMessage;
- (BOOL)isOfficialMessageForScreenChatMessage;
- (BOOL)isPinnedNode;
- (BOOL)isSingleEmoji;
- (BOOL)isValidFloatNodeWithDuration:;
- (BOOL)isValidNodeWithMaxWaitTime:;
- (id)itemStyle;
- (long long)listCellStyle;
- (id)longPressBackgroundColor;
- (double)minPinnedTime;
- (BOOL)needLayoutReturn;
- (BOOL)openPublicScreenActionSheet;
- (double)pinnedNodeWillDisappearTimeStamp;
- (double)pinnedNodeWillPinTimeStamp;
- (double)pinnedPriority;
- (double)pinnedTime;
- (void)playbackDidStop:;
- (void)playbackWillStart:;
- (void)playbackWithError:;
- (void)puaseAudio;
- (long long)relationBadgeType;
- (void)removeActions;
- (BOOL)removeAfterPinned;
- (id)repliedString;
- (void)setAc_isPlaying:;
- (void)setAccessibilityBadgeString:;
- (void)setAnimDelegate:;
- (void)setAvartarBorder:;
- (void)setCellViewClass:;
- (void)setDisableTapHighlight:;
- (void)setDisplayAction:;
- (void)setDisplayRowCount:;
- (void)setDisplayTextContent:;
- (void)setEmojiURLListArray:;
- (void)setFilterUserBadge:;
- (void)setFoldPinningNode:;
- (void)setHasRead:;
- (void)setImagePlaceHolderInDisplayText:;
- (void)setInnerViewSize:;
- (void)setIntercomHideUserCard:;
- (void)setIsDigged:;
- (void)setIsMention:;
- (void)setIsOtherLiveRoom:;
- (void)setIsPinnedNode:;
- (void)setIsSingleEmoji:;
- (void)setItemStyle:;
- (void)setLastDisplayTime:;
- (void)setListCellStyle:;
- (void)setLongPressBackgroundColor:;
- (void)setMinPinnedTime:;
- (void)setNeedLayoutReturn:;
- (void)setPinnedNodeWillDisappearTimeStamp:;
- (void)setPinnedNodeWillPinTimeStamp:;
- (void)setPinnedPriority:;
- (void)setPinnedTime:;
- (void)setRelationBadgeType:;
- (void)setRemoveAfterPinned:;
- (void)setRepliedLiveText:;
- (void)setRepliedString:;
- (void)setReplyID:;
- (void)setShowRefreshTag:;
- (void)setSlideUpDismiss:;
- (void)setTapOtherAction:;
- (void)setTr_hasTrackedShow:;
- (void)setUserNameAttrString:;
- (void)setWaveFilePath:;
- (void)setWaveViewSize:;
- (void)showActionSheetAtCell:;
- (void)showCommentPanelAndAtUser;
- (BOOL)showRefreshTag;
- (void)showUserModel:;
- (void)showUserModel:isAnonymous:messageID:;
- (BOOL)slideUpDismiss;
- (void)switchPropertyFromNode:;
- (id)tapOtherAction;
- (BOOL)tr_hasTrackedShow;
- (id)userNameAttrString;
- (id)waveFilePath;
- (id)waveViewSize;
- (id)textContainerInset;
- (id)content;
- (void)setContent:;
- (id)init;
- (void)setBackgroundColor:;
- (void)setContentColor:;
- (void)setActions:;
- (void)setMessage:;
- (id)backgroundColor;
- (double)createTime;
- (id)identifier;
- (void)setStyle:;
- (void)setAttributedString:;
- (void)setTitleColor:;
- (void)setTitle:;
- (id)attributedString;
- (double)bottomMargin;
- (id)contentColor;
- (BOOL)isAnchor;
- (id)titleColor;
- (Class)cellViewClass;
- (id)title;
- (double)preferredMaxLayoutWidth;
- (id)actions;
- (id)message;
- (double)topMargin;
- (void).cxx_destruct;
- (void)setPreferredMaxLayoutWidth:;
- (id)contentSize;
- (void)setCreateTime:;
- (void)setTextContainerInset:;
- (long long)style;
- (void)setIdentifier:;
- (void)setSize:;
- (void)setContentSize:;
- (id)size;
- (id)accessibilityString;
- (void)setAccessibilityString:;
- (id)room;
- (void)setRoom:;
- (void)setTopMargin:;
- (void)setBottomMargin:;
- (id)playbackItem;
- (id)durationString;
- (void)setDurationString:;
- (void)playAudio;
- (id)nameString;
- (long long)replyID;
- (double)displayTime;
- (id)backgroundImageURL;
- (void)setBackgroundImageURL:;
- (id)sentenceString;
- (void)setSentenceString:;
- (id)associatedObjects;
- (void)setAssociatedObjects:;
- (void)setNameString:;
- (BOOL)hasRead;
- (void)playbackDidStart:;
- (void)setDisplayTime:;
@end
