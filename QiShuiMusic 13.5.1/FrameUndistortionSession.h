@interface FrameUndistortionSession : NSObject
@property (nonatomic) {?=ii} outputDimensions;
@property (nonatomic) NSInteger mode;
@property (nonatomic) NSString portType;
@property (nonatomic) NSInteger numCCWRotationsFromInputToFramingSpace;
@property (nonatomic)  gravity;
@property (nonatomic) {?=fi{?=[3]}{?=ffffffff}{?=ffffffff}} calibrationParams;
@property (nonatomic) float additionalCameraRotation;
@property (nonatomic) NSInteger sensorID;
@property (nonatomic) I exifOrientation;
@property (nonatomic) NSInteger outputType;
@property (nonatomic) {?={?=}} backProjectedFramingSpaceViewport;
@property (nonatomic) {?=[3]} normalizedFramingSpaceLandscapeLeftToInputImageTransformMatrix;
@property (nonatomic) BOOL imageTransformIsValid;
@property (nonatomic) NSInteger cameraOrientation;
@property (nonatomic) BOOL cameraOrientationCorrectionEnabled;
@property (nonatomic) CinematicFramingSessionOptions options;
@property (nonatomic) BOOL isFrontCamera;
@property (nonatomic) {CGRect={CGPoint=dd}{CGSize=dd}} framingSpaceBounds;
@property (nonatomic) {CGRect={CGPoint=dd}{CGSize=dd}} defaultFramingSpaceViewport;
@property (nonatomic) float maxWidth;
- (void)setOptions:;
- (id)portType;
- (unsigned int)exifOrientation;
- (void)setExifOrientation:;
- (void)dealloc;
- (float)maxWidth;
- (void)finish;
- (void)setCameraOrientation:;
- (int)cameraOrientation;
- (id)gravity;
- (int)_compileShaders;
- (id)options;
- (void).cxx_destruct;
- (id)outputDimensions;
- (int)sensorID;
- (int)mode;
- (void)setOutputType:;
- (int)outputType;
- (void)setCameraOrientationCorrectionEnabled:;
- (id)initWithOutputDimensions:mode:portType:;
- (BOOL)cameraOrientationCorrectionEnabled;
- (id)_framingSpaceBoundsLandscapeLeft;
- (float)_getHeightDerivativeForWidth:widthDerivative:outputAspectRatioInDeviceOrientation:;
- (float)_getHeightForWidth:outputAspectRatioInDeviceOrientation:;
- (float)_getWidthForHeight:outputAspectRatioInDeviceOrientation:;
- (id)_adjustDisplayRectToFitInFramingSpaceLandscapeLeft:;
- (id)backProjectedFramingSpaceViewport;
- (id)projectRectInFramingSpaceLandscapeLeftToInputImageCoordinates:;
- (id)projectRectInInputImageToFramingSpaceLandscapeLeftCoordinates:;
- (id)normalizedFramingSpaceLandscapeLeftToInputImageTransformMatrix;
- (BOOL)imageTransformIsValid;
- (id)_projectRectInFramingSpaceLandscapeLeft:toDisplayRectInFramingSpaceLandscapeLeft:;
- (id)_warpRectInInputImageCoordinatesToFramingSpaceInLandscapeLeft:calibrationParameters:;
- (void)_setShaderParametersForRotationNormalizedDisplayRect:gidToNormalizedOutput:calibrationParameters:commandEncoder:;
- (float)additionalCameraRotation;
- (float)getWidthForHeight:;
- (float)getHeightForWidth:;
- (float)getHeightDerivativeForWidth:widthDerivative:;
- (id)adjustDisplayRectToFitInFramingSpace:;
- (id)defaultFramingSpaceViewport:;
- (id)framingSpaceBounds;
- (id)defaultFramingSpaceViewport;
- (id)computeNewCoordinatesInOrientation:forViewportInCurrentOrientation:;
- (int)registerCalibrationData:;
- (void)registerGravityX:y:z:;
- (void)registerAdditionalCameraRotation:;
- (void)registerSensorID:;
- (void)registerOutputType:;
- (int)processBuffer:cropRect:outputPixelBuffer:;
- (id)projectRectInFramingSpace:toDisplayRectInFramingSpace:;
- (void)warpMetadataInInputImageCoordinatesToFramingSpace:;
- (id)warpRectInInputImageCoordinatesToFramingSpace:;
- (float)outputAspectRatioInDeviceOrientation;
- (int)zRotationsFromNaturalOrientationForCamera:;
- (int)_computeNumberOfCCWRotationsFromInputToFramingSpaceForOrientation:;
- (void)initializeMetal;
- (int)_createComputePipelinesForShaders:;
- (id)_compileComputeShader:pixelFormat:;
- (int)_cachedTexturesFromPixelBuffer:isOptimized:textures:;
- (int)_getTransformShaderParameters:isLuma:pixelRatio:pipelineIndexToUse:;
- (int)numCCWRotationsFromInputToFramingSpace;
- (id)calibrationParams;
- (BOOL)isFrontCamera;
@end
