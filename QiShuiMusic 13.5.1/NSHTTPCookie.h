@interface NSHTTPCookie : NSObject
@property (nonatomic) BOOL ams_cookieValidForBag;
@property (nonatomic) BOOL ams_deleted;
@property (nonatomic) BOOL ams_expired;
@property (nonatomic) NSString hashedDescription;
@property (nonatomic) Q hash;
@property (nonatomic) # superclass;
@property (nonatomic) NSString description;
@property (nonatomic) NSString debugDescription;
@property (nonatomic) ^{HTTPCookie=^^?} _inner;
@property (nonatomic) NSDictionary properties;
@property (nonatomic) Q version;
@property (nonatomic) NSString name;
@property (nonatomic) NSString value;
@property (nonatomic) NSDate expiresDate;
@property (nonatomic) BOOL sessionOnly;
@property (nonatomic) NSString domain;
@property (nonatomic) NSString path;
@property (nonatomic) BOOL secure;
@property (nonatomic) BOOL HTTPOnly;
@property (nonatomic) NSString comment;
@property (nonatomic) NSURL commentURL;
@property (nonatomic) NSArray portList;
@property (nonatomic) NSString sameSitePolicy;
- (id)replacementObjectForPortCoder:;
- (id)hashedDescription;
- (id)initWithCoder:;
- (void)encodeWithCoder:;
- (BOOL)ams_isCookieValidForBag;
- (BOOL)ams_isDeleted;
- (BOOL)ams_isExpired;
- (BOOL)_domainMatchesURL:;
- (BOOL)_pathMatchesURL:;
- (BOOL)_httpOnlyMatchesURL:;
- (BOOL)_secureOnlyMatchesURL:;
- (BOOL)ams_isEqualToCookie:;
- (BOOL)ams_isEquivalent:;
- (BOOL)ams_matchesURL:;
- (BOOL)ams_shouldReplaceCookie:;
- (BOOL)sf_matchesTopLevelDomain:;
- (BOOL)isSecure;
- (id)path;
- (id)initWithProperties:;
- (id)init;
- (void)dealloc;
- (id)_initWithReference:index:;
- (id)comment;
- (unsigned long long)version;
- (id)initWithCoder:;
- (unsigned long long)hash;
- (id)_initWithProperties:fromString:;
- (id)_inner;
- (void)encodeWithCoder:;
- (id)properties;
- (id)description;
- (id)value;
- (id)name;
- (id)domain;
- (id)_initWithCookie:partition:;
- (BOOL)isEqual:;
- (id)_initWithHeader:;
- (id)_key;
- (id)_initWithInternal:;
- (id)initWithCFHTTPCookie:;
- (id)_GetInternalCFHTTPCookie;
- (id)_CFHTTPCookie;
- (BOOL)isSessionOnly;
- (BOOL)isHTTPOnly;
- (id)expiresDate;
- (id)commentURL;
- (id)portList;
- (id)_storagePartition;
- (id)sameSitePolicy;
- (id)Name;
- (id)Value;
- (id)Domain;
- (id)Path;
- (id)Expires;
- (id)Comment;
- (id)CommentURL;
- (id)StoragePartition;
- (id)SameSitePolicy;
- (id)OriginURL;
- (id)Version;
- (id)Secure;
- (id)Discard;
- (id)Port;
- (id)MaxAge;
- (long long)_compareForHeaderOrder:;
- (BOOL)_isExpired;
+ (BOOL)supportsSecureCoding;
+ (id)classesForPropertyCoding;
+ (id)ams_cookieByMarkingCookieAsDeleted:;
+ (id)ams_cookiesByMergingProperties:intoProperties:;
+ (id)ams_cookiesForProperties:;
+ (id)ams_propertiesForCookies:;
+ (id)ams_cookiesByUnarchivingPropertyData:error:;
+ (id)ams_dataByArchivingPropertiesOfCookies:error:;
+ (id)_cookieForSetCookieString:forURL:partition:;
+ (id)cookieWithProperties:;
+ (id)cookieWithCFHTTPCookie:;
+ (id)_cf2nsCookies:;
+ (id)_ns2cfCookies:;
+ (id)requestHeaderFieldsWithCookies:;
+ (id)_parsedCookiesWithResponseHeaderFields:forURL:;
+ (id)cookiesWithResponseHeaderFields:forURL:;
@end
