@interface BDPreloadManager : NSObject
@property (nonatomic) NSMutableArray pendingTasks;
@property (nonatomic) NSMutableArray tempTasks;
@property (nonatomic) NSOperationQueue preloadQueue;
@property (nonatomic) Q type;
@property (nonatomic) Q finishCount;
@property (nonatomic) Q maxConcurrentTaskCount;
- (BOOL)_taskIsLoading:;
- (void)addPreloadTask:;
- (void)_cancelOperationWithKey:;
- (void)_cancelOperationWithScene:;
- (void)_removePendingTaskWithKey:;
- (void)_removePendingTaskWithScene:;
- (void)_startPendingTaskIfNeed;
- (void)_tryInsertTempTasks:;
- (void)addPreloadTaskWithKey:onlyWifi:withExecutionBlock:;
- (void)addPreloadTaskWithKey:scene:onlyWifi:withExecutionBlock:;
- (void)addPreloadTaskWithKey:scene:preloadType:onlyWifi:withExecutionBlock:;
- (void)addPreloadTaskWithKey:withExecutionBlock:;
- (void)cancelAllPreloadTask;
- (void)cancelPreloadTaskWithKey:;
- (void)cancelPreloadTasksWithScene:;
- (void)increaseFinish;
- (unsigned long long)maxConcurrentTaskCount;
- (unsigned long long)maxRuningTime;
- (void)refreshDebugView;
- (void)resumeAllTask;
- (void)setPreloadQueue:;
- (void)setTempTasks:;
- (void)suppendAllTask;
- (id)tempTasks;
- (void)throttleInsertTask:;
- (id)init;
- (void)setType:;
- (void)setFinishCount:;
- (unsigned long long)type;
- (void).cxx_destruct;
- (unsigned long long)finishCount;
- (void)_addOperation:;
- (id)pendingTasks;
- (void)setPendingTasks:;
- (id)preloadQueue;
+ (id)hardManager;
+ (id)sharedInstance;
@end
