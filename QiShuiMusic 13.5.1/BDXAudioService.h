@interface BDXAudioService : NSObject
@property (nonatomic) BDXAudioPlayer player;
@property (nonatomic) NSTimer timer;
@property (nonatomic) BDXAudioQueueModel currentQueue;
@property (nonatomic) q playStatus;
@property (nonatomic) double seekedTime;
@property (nonatomic) BDWebImageRequest req;
@property (nonatomic) @ playCommandTarget;
@property (nonatomic) @ pauseCommandTarget;
@property (nonatomic) @ previousCommandTarget;
@property (nonatomic) @ nextCommandTarget;
@property (nonatomic) @ seekCommandTarget;
@property (nonatomic) BOOL fromRemote;
@property (nonatomic) NSMutableDictionary nowPlayingInfo;
@property (nonatomic) <BDXAudioServiceDelegate> delegate;
@property (nonatomic) <BDXAudioEventServiceDelegate> eventService;
@property (nonatomic) BOOL inAudioChanging;
@property (nonatomic) BOOL enableEvent;
@property (nonatomic) Q hash;
@property (nonatomic) # superclass;
@property (nonatomic) NSString description;
@property (nonatomic) NSString debugDescription;
- (void)audioService:playStatusChanged:;
- (BOOL)inAudioChanging;
- (void)setAudioModels:current:queueId:;
- (void)setEnableEvent:;
- (void)audioServiceDidPause:pauseType:;
- (void)clearNowPlaying;
- (void)resetNowPlaying;
- (void)appendAudioModels:;
- (void)audioEngine:didFinishedWithError:;
- (void)audioEngine:loadStateChanged:;
- (void)audioEngine:playbackStateChanged:;
- (void)audioEnginePeriodicTimeObserverForInterval:;
- (void)audioEngineReadyToPlay:;
- (void)audioEngineStartPlay:;
- (void)audioService:didFinishedWithError:;
- (void)audioServiceAudioChanged:;
- (void)audioServiceDidPlay:;
- (void)audioServiceDidSeek:;
- (void)audioServiceDidStop:;
- (void)audioServiceInPlaying:;
- (void)audioServiceReadyToPlay:;
- (BOOL)canGoNext;
- (BOOL)canGoPrev;
- (void)clearCommand;
- (id)currentPlayModel;
- (BOOL)enableEvent;
- (BOOL)fromRemote;
- (void)goNext;
- (void)goPrev;
- (id)nextCommandTarget;
- (void)onTimer:;
- (id)pauseCommandTarget;
- (void)pauseWithType:;
- (long long)playBitrate;
- (id)playCommandTarget;
- (void)playCurrent;
- (long long)playStatus;
- (void)playStatusChanged:;
- (double)playableTime;
- (id)previousCommandTarget;
- (void)receiveNotes:;
- (void)refreshCommandState;
- (void)refreshNowPlayingInfo;
- (id)seekCommandTarget;
- (double)seekedTime;
- (void)setCurrentQueue:;
- (void)setCurrentToPlay;
- (void)setFromRemote:;
- (void)setInAudioChanging:;
- (void)setNextCommandTarget:;
- (void)setPauseCommandTarget:;
- (void)setPlayCommandTarget:;
- (void)setPlayStatus:;
- (void)setPreviousCommandTarget:;
- (void)setSeekCommandTarget:;
- (void)setSeekedTime:;
- (void)setupCommand;
- (BOOL)updateCurrentModel:;
- (void)updateNowPlaying;
- (void)updateNowPlayingInfoPlayback;
- (void)setNowPlayingInfo:;
- (void)removeObserver:;
- (void)seekToTime:;
- (id)init;
- (void)addObserver:;
- (BOOL)isPlaying;
- (void)dealloc;
- (void)play;
- (void)setDelegate:;
- (void)stop;
- (void)setEventService:;
- (id)nowPlayingInfo;
- (void)setTimer:;
- (double)playbackTime;
- (id)player;
- (void)clear;
- (id)delegate;
- (void).cxx_destruct;
- (void)setPlayer:;
- (id)eventService;
- (id)timer;
- (id)currentQueue;
- (void)setQueue:;
- (void)pause;
- (double)duration;
- (id)queue;
- (void)prepareToPlay;
- (void)setIsLooping:;
- (void)setupNotifications;
- (id)req;
- (void)setReq:;
@end
