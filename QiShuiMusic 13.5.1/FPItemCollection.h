@interface FPItemCollection : NSObject
@property (nonatomic) BOOL doc_isObserving;
@property (nonatomic) BOOL doc_displaysSearchResults;
@property (nonatomic) NSString providerIdentifier;
@property (nonatomic) NSString domainIdentifier;
@property (nonatomic) FPItemID enumeratedItemID;
@property (nonatomic) <FPCollectionDataSource> dataSource;
@property (nonatomic) BOOL gathering;
@property (nonatomic) NSPredicate additionalItemFilteringPredicate;
@property (nonatomic) BOOL observing;
@property (nonatomic) NSObject<OS_dispatch_queue> updateQueue;
@property (nonatomic) FPPacer updatePacer;
@property (nonatomic) NSPredicate itemFilteringPredicate;
@property (nonatomic) <FPItemCollectionMinimalDelegate> delegate;
@property (nonatomic) BOOL immutable;
@property (nonatomic) BOOL hasMoreUpdates;
@property (nonatomic) BOOL showHiddenFiles;
@property (nonatomic) NSArray sortDescriptors;
@property (nonatomic) NSObject<OS_dispatch_queue> workingQueue;
@property (nonatomic) NSArray items;
@property (nonatomic) Q hash;
@property (nonatomic) # superclass;
@property (nonatomic) NSString description;
@property (nonatomic) NSString debugDescription;
@property (nonatomic) Q lastForcedUpdate;
- (void)doc_setIsObserving:;
- (BOOL)doc_isObserving;
- (void)doc_startObserving;
- (void)doc_stopObserving;
- (BOOL)doc_displaysSearchResults;
- (void)doc_startObservationIfNeeded;
- (void)doc_restartObservation;
- (void)_startObserving;
- (id)domainIdentifier;
- (id)sortDescriptors;
- (long long)numberOfItems;
- (id)providerIdentifier;
- (id)init;
- (void)dealloc;
- (void)resumeUpdates;
- (id)items;
- (id)enumeratedItemID;
- (void)setDelegate:;
- (BOOL)observing;
- (void)startObserving;
- (id)itemAtIndexPath:;
- (void)setObserving:;
- (void)stopObserving;
- (id)dataSource;
- (id)delegate;
- (void).cxx_destruct;
- (id)workingQueue;
- (id)updateQueue;
- (BOOL)isImmutable;
- (BOOL)isGathering;
- (long long)_numberOfItems;
- (void)setShowHiddenFiles:;
- (void)reachabilityMonitor:didChangeReachabilityStatusTo:;
- (void)setWorkingQueue:;
- (void)setItemFilteringPredicate:;
- (void)suspendUpdates;
- (BOOL)recoverFromError:;
- (BOOL)shouldRetryError:;
- (BOOL)isRootItem:;
- (void)updateRootItem:;
- (BOOL)isCollectionValidForItem:;
- (id)createDataSourceWithSortDescriptors:;
- (id)scopedSearchQuery;
- (id)initWithPacing:;
- (void)dataSource:replaceContentsWithItems:hasMoreChanges:;
- (void)dataSource:receivedUpdatedItems:deletedItems:hasMoreChanges:;
- (void)dataSource:wasInvalidatedWithError:;
- (BOOL)dataSourceShouldAlwaysReplaceContents:;
- (unsigned long long)lastForcedUpdate;
- (void)setGathering:;
- (void)replacePlaceholders:withActualItems:deletedIDs:;
- (void)_cancelStartTime;
- (void)_startRegathering;
- (void)_restartObservation;
- (void)reorderItemsWithSortDescriptors:;
- (unsigned long long)_indexOfItemID:;
- (unsigned long long)_indexOfItem:;
- (id)_t_items;
- (id)_itemsMutableCopy;
- (BOOL)_isUsingDataSource:;
- (BOOL)__isUsingDataSource:;
- (BOOL)isRegatheringAfterSignal;
- (void)_didEncounterError:forObservationID:;
- (void)_updateObservedItem:;
- (void)receivedBatchWithUpdatedItems:deletedItemsIdentifiers:hasMoreChanges:;
- (void)receivedBatchWithUpdatedItems:deletedItemsIdentifiers:;
- (void)_receivedBatchWithUpdatedItems:deletedItemsIdentifiers:;
- (void)_receivedBatchWithUpdatedItems:deletedItemsIdentifiers:dropForReplacedPlaceholders:;
- (void)forceRefreshOfItemWithItemID:;
- (void)_receivedBatchWithUpdatedItems:deletedItemsIdentifiers:forceFlush:dropForReplacedPlaceholders:;
- (id)indexPathFromIndex:;
- (id)indexPathsFromIndexSet:;
- (id)_reorderWithPlaceholdersLast:;
- (BOOL)shouldConsiderUsingPlaceholder:forItem:skipForwardFormerID:;
- (void)_flushPendingUpdates;
- (id)computeIndexPathsBasedDiffsWithOldItems:futureItems:;
- (void)sendIndexPathBasedDiffs:;
- (id)computeItemIDBasedDiffs;
- (void)sendItemIDBasedDiffs:;
- (BOOL)isHiddenItem:;
- (id)itemFilteringPredicate;
- (void)_replaceContentsWithVendorItems:;
- (void)_setObserving:;
- (void)_restartObservationWithReason:;
- (BOOL)hasMoreUpdates;
- (BOOL)showHiddenFiles;
- (id)additionalItemFilteringPredicate;
- (void)setAdditionalItemFilteringPredicate:;
- (id)updatePacer;
- (void)startObservingWithEnumerationProperties:;
+ (id)_bouncedItem:withinItems:;
+ (id)activeCollections;
+ (void)consumeUpdates:deletes:;
+ (void)replacePlaceholders:withActualItems:deletedIDs:;
+ (BOOL)isEnumerationSuspended;
+ (void)suspendVendorEnumeration;
+ (void)resumeVendorEnumeration;
+ (void)addActiveCollection:;
+ (void)removeActiveCollection:;
+ (void)refreshActiveCollectionsForDecorationChange;
@end
