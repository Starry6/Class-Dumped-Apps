@interface IESLiveInteractiveMediaService : NSObject
@property (nonatomic) IESLiveInteractiveMediaServiceConfig config;
@property (nonatomic) NSMutableSet observerSet;
@property (nonatomic) UILabel tipLabel;
@property (nonatomic) <IESLiveRealStreamingProviderAdapter> streamProvider;
@property (nonatomic) IESLiveInteractStreamConfig rtcConfig;
@property (nonatomic) IESLiveInteractiveSignalApi signalApi;
@property (nonatomic) IESLiveInteractiveRTCInfoReportAPI reportRTCInfoAPI;
@property (nonatomic) BOOL mute;
@property (nonatomic) BOOL muteVideo;
@property (nonatomic) BOOL needToSendSignal;
@property (nonatomic) BOOL enableAudioReportSeiOptimzie;
@property (nonatomic) BOOL enableSpatialAudio;
@property (nonatomic) BOOL isLoadSpatial;
@property (nonatomic) NSString preset;
@property (nonatomic) IESLiveCountTimer audioReportTimer;
@property (nonatomic) <IESLiveInteractiveUserService> userService;
@property (nonatomic) q clientType;
@property (nonatomic) <IESLivePerfSampler> perfSampler;
@property (nonatomic) IESLiveInteractStreamFullLinkMonitor interactStreamMonitor;
@property (nonatomic) NSNumber startInteractTime;
@property (nonatomic) NSMutableArray totalVolumeArray;
@property (nonatomic) BOOL useBackupStream;
@property (nonatomic) {CGSize=dd} nativeOutputSize;
@property (nonatomic) RACDisposable rtcSEIDispoable;
@property (nonatomic) <IESLiveTracker> tracker;
@property (nonatomic) RACDisposable ktvBgmStateDispoable;
@property (nonatomic) RACDisposable diagnoseKtvBgmStateDispoable;
@property (nonatomic) IESLiveRTCNetTraffic rtcNetTraffic;
@property (nonatomic) IESLiveInteractSession backupAnchorInteractSession;
@property (nonatomic) IESLiveInteractiveMediaServiceForwardStreamState forwardStreamState;
@property (nonatomic) IESLiveInteractPublicStreamInfo publicStreamInfo;
@property (nonatomic) IESLiveGCDTimer publicStreamTimer;
@property (nonatomic) <IESLiveInteractivePreMixStreamLayout> preMixerStreamLayout;
@property (nonatomic) <IESLiveInteractiveMediaServiceDelegate> delegate;
@property (nonatomic) IESLiveLinkmicMonitor linkmicMonitor;
@property (nonatomic) BOOL enableVolumReport;
@property (nonatomic) BOOL isVideoConnection;
@property (nonatomic) Q hash;
@property (nonatomic) # superclass;
@property (nonatomic) NSString description;
@property (nonatomic) NSString debugDescription;
- (void)addDiagnoseKtvBgmStateDispoable;
- (void)interactClient:localAudioStats:;
- (void)interactClientWillLeaveChannel:;
- (id)rtcSEIDispoable;
- (void)setPerfSampler:;
- (void)setUserService:;
- (BOOL)useBackupStream;
- (void)appResignActive;
- (id)baseMonitorDict;
- (void)interactClient:didOccurWarning:;
- (void)interactClient:localVideoStats:;
- (BOOL)isEnableInteractMediaExtInfoOpt;
- (void)setBackupAnchorInteractSession:;
- (void)setObserverSet:;
- (void)startPushStream;
- (void)updatePreMixerCompositingLayout;
- (void)addExtraMonitorDict:;
- (int)adjustPlaybackSignalVolume:;
- (id)allSessionUids;
- (id)anchorInteractSession;
- (void)appDidActive;
- (void)appEnterBack;
- (void)appendUserRoleType:extraDic:;
- (id)audioReportTimer;
- (id)backupAnchorInteractSession;
- (void)byteLog:;
- (void)byteLogLevel:logString:;
- (void)checkLinkerIfNeeded;
- (void)closeChorus;
- (void)closeMediaClientWithScene:;
- (void)compositingLayoutOfPublisher;
- (void)configAudioSpatialRenderEnable:positionInfo:;
- (void)destoryRenderFilter;
- (id)diagnoseKtvBgmStateDispoable;
- (void)didSetAttachingDIContext;
- (BOOL)enableAudienceMediaCaptureOpt;
- (void)enableAudioCapture:reason:;
- (BOOL)enableAudioReportSeiOptimzie;
- (void)enableKTV:;
- (void)enableLocalVideo:;
- (BOOL)enablePublicStream;
- (void)enableRealTimeChorus:;
- (BOOL)enableSpatialAudio;
- (BOOL)enableVolumReport;
- (id)extInfoManager;
- (void)forceCheckLinker;
- (id)forwardStreamState;
- (long long)getMixType;
- (void)hideDebugInfo;
- (void)interactClient:connectionStateChanged:;
- (void)interactClient:didJoinChannel:withUid:elapsed:;
- (void)interactClient:didOccurError:;
- (void)interactClient:didOfflineOfUid:reason:;
- (void)interactClient:didPublishSucceedOfUser:;
- (void)interactClient:didVideoMuted:byUid:;
- (void)interactClient:firstFrameRenderCallback:;
- (void)interactClient:firstLocalAudioFrame:;
- (void)interactClient:firstRemoteAudioFrameOfUid:elapsed:;
- (void)interactClient:firstRemoteVideoDecodedOfUid:size:elapsed:;
- (void)interactClient:newSessionCreated:local:;
- (void)interactClient:onDeviceLoopDelayReceived:;
- (void)interactClient:onFirstPublicStreamAudioFrame:;
- (void)interactClient:onFirstPublicStreamVideoFrameDecoded:withFrameInfo:;
- (void)interactClient:onForwardStreamStateChanged:;
- (BOOL)interactClient:onLayerRectMapChanged:;
- (void)interactClient:onNetworkQuality:remoteQualities:;
- (void)interactClient:onPlayPublicStreamResult:errorCode:;
- (void)interactClient:onPublicStreamDataMessageReceived:andMessage:sourceType:;
- (void)interactClient:onPublicStreamSEIMessageReceived:andMessage:sourceType:;
- (void)interactClient:onRoomBinaryMessageReceived:message:;
- (void)interactClient:onRoomMessageReceived:message:;
- (void)interactClient:onSEIMessageReceived:byUid:;
- (void)interactClient:onStreamSyncInfoReceived:streamType:data:;
- (void)interactClient:onSubtitleMessageReceived:;
- (void)interactClient:onSubtitleStateChanged:;
- (void)interactClient:onSwitchMixTypeResult:isMixOnClient:;
- (void)interactClient:onUserBinaryMessageReceived:message:;
- (void)interactClient:onUserJoined:extraInfo:;
- (void)interactClient:onUserMessageReceived:message:;
- (void)interactClient:onUserMessageReceivedOutsideRoom:message:;
- (void)interactClient:publishVideoStats:;
- (void)interactClient:remoteAudioStats:;
- (void)interactClient:remoteVideoStats:;
- (void)interactClient:reportKeyApiCallToTTMonitorData:;
- (void)interactClient:reportLogLevel:filename:tag:line:funcName:format:;
- (void)interactClient:reportToTTMonitorData:logTypeStr:;
- (void)interactClient:updateLayoutOfPreMixer:;
- (void)interactClient:updateLayoutOfPublisher:;
- (void)interactClient:updateLayoutOfSessionViews:;
- (void)interactClient:videoSizeChangedOfUid:size:rotation:;
- (void)interactClientConnectionDidInterrupted:;
- (void)interactClientConnectionDidLost:;
- (void)interactClientDidLeaveChannel:withStats:;
- (BOOL)interactClientOnRenderFilterWillInit:;
- (void)interactIgnoreCaptureVideoBuffer:;
- (id)interactSessions;
- (id)interactStreamMonitor;
- (void)invalidPublicStreamTimer;
- (BOOL)isAcqVolumeSettingEnable;
- (BOOL)isBackupHostSession:;
- (BOOL)isEnableAudienceCaptureOpt;
- (BOOL)isEnableAudienceCaptureOptWithScene:;
- (BOOL)isEnableCaptureOpt;
- (BOOL)isEnableCaptureOptWithScene:;
- (BOOL)isEnableInteractMediaExtInfoOptWithScene:;
- (BOOL)isHostSession:;
- (BOOL)isInteractRunning;
- (BOOL)isLoadSpatial;
- (BOOL)isMainHostSession:;
- (BOOL)isMixOnClient;
- (BOOL)isScreencastEnableInteractMediaExtInfoOpt;
- (BOOL)isValidHostSession:;
- (BOOL)isVideoConnection;
- (id)ktvBgmStateDispoable;
- (id)linkmicMonitor;
- (void)loadModelFile:;
- (id)localSmallWindowSession;
- (void)logSpatialAudioEvent:linkMicId:positionInfo:;
- (id)messageStringWith:sendTo:from:;
- (id)monitorDictFromRtcExtInfo:liveCoreExtInfo:addEmptyParams:;
- (void)monitorSpatialAudioEvent:errCode:linkMicId:;
- (void)muteAllRemoteAudioStreams:reason:;
- (void)muteJoinUserRTCStreamIfNeed:;
- (void)muteLocalAudio:reason:;
- (void)muteOtherRoomRTCStream:;
- (BOOL)muteRemoteAudioStreamWithLinkmicID:mute:reason:;
- (BOOL)muteRemoteAudioStreamWithLinkmicID:mute:reason:force:;
- (BOOL)muteRemoteVideoStreamWithLinkmicID:mute:;
- (BOOL)muteRemoteVideoStreamWithLinkmicID:mute:force:;
- (void)muteVideoStream:;
- (id)nativeOutputSize;
- (BOOL)needToSendSignal;
- (void)observeNotifications;
- (void)onAudioSessionInterruptNoti:;
- (void)onPlayPublicStreamResult:;
- (void)onPublicStreamStreamPublishStatsSEIMessageReceived:;
- (void)onPublicStreamVolumeSEIMessageReceived:;
- (void)onReceivedSwitchStreamMessage:;
- (id)perfSampler;
- (void)playPublicStreamTimeOut;
- (id)preMixerStreamLayout;
- (BOOL)processWithAudioReport:;
- (id)publicStreamInfo;
- (id)publicStreamTimer;
- (void)pushMixerBuffer:layerId:rotation:withCMTime:;
- (void)pushSEIWithAppData:;
- (void)removeAllRemotePosition;
- (void)removeRemotePositionWithLinkMicId:;
- (id)reportRTCInfoAPI;
- (void)reportRTCInfoIfNeed:;
- (void)reportVolume;
- (void)resetMuteOperationForBGM;
- (void)resumeCaptureOutputSize;
- (void)retryStartPlayPublicStream;
- (id)rtcConfig;
- (id)rtcInfoParams;
- (id)rtcNetTraffic;
- (void)rtcTrafficMonitor;
- (void)sendEnterBackgroundSignal:;
- (BOOL)sendUserMessageOutsideRoom:message:;
- (void)setAllRemoteVideoSuperResolutionWithMode:;
- (void)setAudioReportTimer:;
- (int)setDefaultMuteAllRemoteVideoStreams:;
- (void)setDiagnoseKtvBgmStateDispoable:;
- (void)setEnableAudioReportSeiOptimzie:;
- (void)setEnableNoiseSuppression:param:;
- (void)setEnableSpatialAudio:;
- (void)setEnableUpdateConfigCallAB:;
- (void)setEnableVolumReport:;
- (void)setEnableVolumeBalance:balancedLoudnessValue:;
- (void)setForwardStreamState:;
- (void)setInteractStreamMonitor:;
- (void)setIsLoadSpatial:;
- (void)setIsVideoConnection:;
- (void)setKtvBgmStateDispoable:;
- (void)setLinkmicMonitor:;
- (void)setMoviePlayVolume:;
- (void)setMuteVideo:;
- (void)setNativeOutputSize:;
- (void)setNeedToSendSignal:;
- (void)setPreMixerStreamLayout:;
- (void)setPublicStreamInfo:;
- (void)setPublicStreamTimer:;
- (void)setRemoteAudioPlaybackVolume:isSilence:;
- (void)setRemoteSessionNeedRender:;
- (int)setRemoteVideoSuperResolution:withMode:;
- (void)setReportRTCInfoAPI:;
- (void)setRtcConfig:;
- (void)setRtcNetTraffic:;
- (void)setRtcSEIDispoable:;
- (void)setSignalApi:;
- (void)setStartInteractTime:;
- (void)setTotalVolumeArray:;
- (void)setUseBackupStream:;
- (void)setupAudioSceneWithScene:;
- (void)setupBeforeJoinChannel;
- (void)setupCaptureOutputSize;
- (void)setupCaptureOutputSizeIfNeed;
- (void)setupEnableUpdateConfigCallAB:;
- (void)setupInteractiveSDKConfig;
- (void)setupMediaPermissionManager;
- (void)setupPerformanceWarningHandler;
- (void)setupReportRTCInfo;
- (BOOL)shouldFilterVideoMuted:;
- (BOOL)shouldMuteOtherRoomRTCStream;
- (void)showDebugInfoIfNeed;
- (void)showSwitchMixTypeResultIfNeed:isMixOnClient:;
- (id)signalApi;
- (void)speakStateDidChange:;
- (unsigned long long)speakingTypeWithVolume:withStrUid:;
- (void)startChorus:isSingleFollower:;
- (void)startInteract;
- (id)startInteractTime;
- (void)startJoinChannel;
- (BOOL)startLiveLinkAfterMixer:;
- (void)startLiveLinkAfterMixerStream;
- (void)startLiveLinkPreMixerStreamLayout:;
- (void)startMediaClientWithScene:;
- (void)startMixStream;
- (void)startPlayPublicStreamIfNeed:;
- (BOOL)startRenderPublicStream:;
- (void)startReportAudioVolume;
- (void)startSmallWindowSession;
- (int)startSubtitle;
- (void)stopInteract;
- (void)stopLiveLinkAfterMixerStream;
- (void)stopLiveLinkPreMixer;
- (void)stopPlayPublicStream;
- (void)stopSmallWindowSession;
- (int)stopSubtitle;
- (void)switchCrossRoomForwardStreamRtcInfo:;
- (void)switchCrossRoomForwardStreamRtcInfo:needSwitchMiXType:;
- (void)switchCrossRoomForwardStreamRtcInfo:needSwitchMiXType:source:;
- (void)switchInteractSeiSourceValueManually:;
- (void)switchInteractiveScene:andRtcExtInfo:andLiveCoreExtInfo:;
- (void)switchInteractiveScene:isAnchor:;
- (void)switchInteractiveScene:isAnchor:andRtcExtInfo:andLiveCoreExtInfo:;
- (void)switchMixType:;
- (void)switchPlayModeTo:;
- (void)switchPlayModeToScene:;
- (void)switchPublicStreamWithMcuContent:;
- (void)switchRtcExtInfo:andLiveCoreExtInfo:;
- (void)switchToChannel:;
- (id)totalVolumeArray;
- (void)updateCaptureOutputSizeWithLiveCoreExtraInfo:;
- (void)updateCaptureSessionPresetAudience;
- (void)updateCaptureSessionPresetIfNeed;
- (void)updateCaptureSessionPresetScene:andRtcExtInfo:andLiveCoreExtInfo:;
- (void)updateCaptureSessionPresetWithCaptureSize:;
- (void)updateCaptureSessionPresetWithLivecoreExtInfo:andScene:;
- (void)updateLocalLayout;
- (void)updatePerformanceTackerParams;
- (void)updateRemoteLinkMicId:postionInfo:;
- (void)updateRenderFilterLayout;
- (void)updateStreamingConfiguration:;
- (void)updateUserService:;
- (id)userService;
- (void)willCloseLivingRoom;
- (void)setTracker:;
- (BOOL)mute;
- (long long)clientType;
- (void)setPreset:;
- (id)streamProvider;
- (void)dealloc;
- (id)tracker;
- (void)setConfig:;
- (void)setDelegate:;
- (id)preset;
- (void)setStreamProvider:;
- (void)setMute:;
- (id)observerSet;
- (id)delegate;
- (void).cxx_destruct;
- (id)config;
- (void)setClientType:;
- (id)tipLabel;
- (void)setTipLabel:;
- (BOOL)login;
- (void)setPlaybackVolume:;
- (BOOL)muteVideo;
- (id)initWithConfig:delegate:;
- (void)networkStatusChanged:;
@end
