@interface VEFFAudioDecoder : IESMMObject
@property (nonatomic) VEAudioConfig config;
@property (nonatomic) ^{?=^v^v^v} formatCtx_C;
@property (nonatomic) ^{AVFormatContext=^{AVClass}Q^{AVInputFormat}^{AVOutputFormat}^v^{AVIOContext}iI^^{AVStream}[1024c]*qqqIiiqq*iI^^{AVProgram}iiiIII^^{AVChapter}^{AVDictionary}qii{AVIOInterruptCB=^?^vi}iqiiiiiiiiiiiqIiiii**^{AVFormatInternal}i^{AVCodec}^{AVCodec}^{AVCodec}^{AVCodec}i^v^?q*i^?*^?^?*i^viiqq} formatCtx;
@property (nonatomic) ^{AVCodecContext=^{AVClass}iQi^{AVCodec}[32c]iII^v^{AVCodecInternal}^vqiiiii*i{AVRational=ii}iiiiiiiii^?^?ifiifiifffffffii^i{AVRational=ii}iiiiiiiiiiiiiiiii^S^SiiiiiiifiiiiiiiiiiiiiiiiiiiiiiiiiQQii^?iffiiiffiii^{RcOverride}*qqffffiiiiiiiiiiiiq^?iiiiiiiiii**iiiiiiq^{AVHWAccel}^v[8Q]iiiii^{AVFrame}iiii^?^?iiiiii*iiQii{AVRational=ii}i{AVRational=ii}^{AVCodecDescriptor}qqqq*iii^S**I^{AVPacketSideData}i^{AVBufferRef}iiq^{AVBufferRef}i} codecCtx;
@property (nonatomic) VEAudioParams audioParam;
@property (nonatomic) NSInteger audioStreamIndex;
@property (nonatomic) NSInteger dstChannels;
@property (nonatomic) float dstSampleRate;
@property (nonatomic) NSInteger dstSampleFormat;
@property (nonatomic) ^{SwrContext=} swrCtx;
@property (nonatomic) NSURL fileUrl;
@property (nonatomic) double streamStartTime;
@property (nonatomic) double currentTime;
@property (nonatomic) double skipTime;
@property (nonatomic) BOOL needSyncSkip;
@property (nonatomic) double seekTime;
@property (nonatomic) {AVRational=ii} pktTimeBase;
@property (nonatomic) BOOL srcAudioIsPlanar;
@property (nonatomic) BOOL isEncryptorFile;
@property (nonatomic) BOOL veabtest_audioSeekBackward;
@property (nonatomic) BOOL veabtest_avSyncStartTimeOpt;
@property (nonatomic) BOOL veabtest_audioDecoderOpt;
@property (nonatomic) BOOL veabtest_audioDropFrameOpt;
@property (nonatomic) BOOL veabtest_VEFFAudioReaderSeekSkipOpt;
@property (nonatomic) Q hash;
@property (nonatomic) # superclass;
@property (nonatomic) NSString description;
@property (nonatomic) NSString debugDescription;
- (int)dstSampleFormat;
- (void)setDstChannels:;
- (BOOL)isEncryptorFile;
- (int)readAudioBufferList:bufferSize:;
- (void)setFormatCtx_C:;
- (void)setPktTimeBase:;
- (void)setVeabtest_avSyncStartTimeOpt:;
- (double)streamStartTime;
- (id)audioParam;
- (int)audioStreamIndex;
- (id)codecCtx;
- (int)dstChannels;
- (float)dstSampleRate;
- (id)formatCtx;
- (id)formatCtx_C;
- (id)getAVErrorDes:;
- (id)initWithUrl:config:;
- (BOOL)needSyncSkip;
- (BOOL)p_enableDropAudioFrameAfterDecode;
- (int)p_initAudioCodec:;
- (int)p_initSwrContext:;
- (int)p_initSwrContextWithCodec;
- (int)p_initSwrContextWithFrame:;
- (void)p_printAssetFormat;
- (id)pktTimeBase;
- (void)setAudioParam:;
- (void)setAudioStreamIndex:;
- (void)setCodecCtx:;
- (void)setDstSampleFormat:;
- (void)setDstSampleRate:;
- (void)setFormatCtx:;
- (void)setIsEncryptorFile:;
- (void)setNeedSyncSkip:;
- (void)setSkipTime:;
- (void)setSrcAudioIsPlanar:;
- (void)setStreamStartTime:;
- (void)setSwrCtx:;
- (void)setVeabtest_VEFFAudioReaderSeekSkipOpt:;
- (void)setVeabtest_audioDecoderOpt:;
- (void)setVeabtest_audioDropFrameOpt:;
- (void)setVeabtest_audioSeekBackward:;
- (double)skipTime;
- (BOOL)srcAudioIsPlanar;
- (id)swrCtx;
- (BOOL)veabtest_VEFFAudioReaderSeekSkipOpt;
- (BOOL)veabtest_audioDecoderOpt;
- (BOOL)veabtest_audioDropFrameOpt;
- (BOOL)veabtest_audioSeekBackward;
- (BOOL)veabtest_avSyncStartTimeOpt;
- (void)setCurrentTime:;
- (void)seekToTime:;
- (void)dealloc;
- (void)setConfig:;
- (void)flush;
- (void).cxx_destruct;
- (double)currentTime;
- (void)setSeekTime:;
- (id)config;
- (double)seekTime;
- (id)fileUrl;
- (void)setFileUrl:;
- (void)freeContext;
@end
