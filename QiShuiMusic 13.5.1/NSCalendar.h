@interface NSCalendar : NSObject
@property (nonatomic) Q hash;
@property (nonatomic) # superclass;
@property (nonatomic) NSString description;
@property (nonatomic) NSString debugDescription;
@property (nonatomic) NSString calendarIdentifier;
@property (nonatomic) NSLocale locale;
@property (nonatomic) NSTimeZone timeZone;
@property (nonatomic) Q firstWeekday;
@property (nonatomic) Q minimumDaysInFirstWeek;
@property (nonatomic) NSArray eraSymbols;
@property (nonatomic) NSArray longEraSymbols;
@property (nonatomic) NSArray monthSymbols;
@property (nonatomic) NSArray shortMonthSymbols;
@property (nonatomic) NSArray veryShortMonthSymbols;
@property (nonatomic) NSArray standaloneMonthSymbols;
@property (nonatomic) NSArray shortStandaloneMonthSymbols;
@property (nonatomic) NSArray veryShortStandaloneMonthSymbols;
@property (nonatomic) NSArray weekdaySymbols;
@property (nonatomic) NSArray shortWeekdaySymbols;
@property (nonatomic) NSArray veryShortWeekdaySymbols;
@property (nonatomic) NSArray standaloneWeekdaySymbols;
@property (nonatomic) NSArray shortStandaloneWeekdaySymbols;
@property (nonatomic) NSArray veryShortStandaloneWeekdaySymbols;
@property (nonatomic) NSArray quarterSymbols;
@property (nonatomic) NSArray shortQuarterSymbols;
@property (nonatomic) NSArray standaloneQuarterSymbols;
@property (nonatomic) NSArray shortStandaloneQuarterSymbols;
@property (nonatomic) NSString AMSymbol;
@property (nonatomic) NSString PMSymbol;
- (id)initWithCoder:;
- (void)encodeWithCoder:;
- (Class)classForCoder;
- (unsigned long long)bs_dayPeriodForDate:inLocale:;
- (BOOL)date:isSameDayAsDate:;
- (BOOL)date:isSameYearAsDate:;
- (id)_intents_encodeWithJSONEncoder:codableDescription:;
- (id)pl_startOfDayForDate:;
- (BOOL)pl_isDateValid:;
- (id)pl_validDateForDate:;
- (id)pl_startOfNextDayForDate:;
- (id)pl_endOfPreviousDayForDate:;
- (id)pl_endOfDayForDate:;
- (id)pl_dateByAddingDays:toDate:;
- (id)pl_endOfWeekForDate:;
- (id)pl_startOfWeekForDate:;
- (id)pl_startOfMonthForDate:;
- (long long)monthsInYearForDate:;
- (long long)daysInWeek;
- (long long)hoursInDay;
- (long long)minutesInHour;
- (long long)secondsInMinute;
- (long long)secondsInDay;
- (id)dateBySanityCheckingDateRoundedToDay:;
- (long long)calendarDaysFromDate:toDate:;
- (long long)daysInMonthContainingDate:;
- (long long)CalDaysInYearContainingDate:;
- (long long)CalWeeksInYearContainingDate:;
- (BOOL)dateIsFirstOfMonth:;
- (BOOL)dateIsFirstOfYear:;
- (id)CalDateFromComponents:inTimeZone:;
- (id)CalDateBySubtractingComponents:fromDate:;
- (id)CalOccurrencesForBirthday:inDateRange:;
- (id)mapDatesFromDate:stepSize:range:mapBlock:;
- (BOOL)_navigation_isDateInToday:inTimeZone:;
- (id)_navigation_transitRelativeDateStringForDate:context:inTimeZone:outUsedFormat:;
- (id)_navigation_offsetDate:toTimeZone:;
- (BOOL)_navigation_isDateInTomorrow:inTimeZone:;
- (id)_navigation_dateStringForDate:withStyle:useRelativeFormatting:inTimeZone:;
- (id)_navigation_relativeDateStringForDate:context:inTimeZone:;
- (void)setFirstWeekday:;
- (unsigned long long)firstWeekday;
- (void)setGregorianStartDate:;
- (id)minimumRangeOfUnit:;
- (id)gregorianStartDate;
- (id)calendarIdentifier;
- (void)setLocale:;
- (void)setTimeZone:;
- (id)init;
- (unsigned long long)ordinalityOfUnit:inUnit:forDate:;
- (id)rangeOfUnit:inUnit:forDate:;
- (void)enumerateDatesStartingAfterDate:matchingComponents:options:usingBlock:;
- (id)maximumRangeOfUnit:;
- (id)locale;
- (BOOL)rangeOfUnit:startDate:interval:forDate:;
- (void)setMinimumDaysInFirstWeek:;
- (id)initWithCoder:;
- (id)components:fromDate:toDate:options:;
- (unsigned long long)hash;
- (void)encodeWithCoder:;
- (unsigned long long)minimumDaysInFirstWeek;
- (BOOL)isDateInWeekend:;
- (id)dateFromComponents:;
- (unsigned long long)_cfTypeID;
- (BOOL)nextWeekendStartDate:interval:options:afterDate:;
- (id)components:fromDate:;
- (id)timeZone;
- (id)initWithCalendarIdentifier:;
- (BOOL)isEqual:;
- (id)copyWithZone:;
- (id)dateByAddingComponents:toDate:options:;
- (id)nextDateAfterDate:matchingUnit:value:options:;
- (id)dateByAddingUnit:value:toDate:options:;
- (id)eraSymbols;
- (id)longEraSymbols;
- (id)monthSymbols;
- (id)shortMonthSymbols;
- (id)veryShortMonthSymbols;
- (id)standaloneMonthSymbols;
- (id)shortStandaloneMonthSymbols;
- (id)veryShortStandaloneMonthSymbols;
- (id)weekdaySymbols;
- (id)shortWeekdaySymbols;
- (id)veryShortWeekdaySymbols;
- (id)standaloneWeekdaySymbols;
- (id)shortStandaloneWeekdaySymbols;
- (id)veryShortStandaloneWeekdaySymbols;
- (id)quarterSymbols;
- (id)shortQuarterSymbols;
- (id)standaloneQuarterSymbols;
- (id)shortStandaloneQuarterSymbols;
- (id)AMSymbol;
- (id)PMSymbol;
- (id)componentsInTimeZone:fromDate:;
- (id)components:fromDateComponents:toDateComponents:options:;
- (long long)component:fromDate:;
- (id)startOfDayForDate:;
- (long long)compareDate:toDate:toUnitGranularity:;
- (BOOL)isDate:equalToDate:toUnitGranularity:;
- (BOOL)isDate:inSameDayAsDate:;
- (BOOL)isDateInToday:;
- (BOOL)isDateInYesterday:;
- (BOOL)isDateInTomorrow:;
- (BOOL)rangeOfWeekendStartDate:interval:containingDate:;
- (id)nextDateAfterDate:matchingComponents:options:;
- (id)dateBySettingUnit:value:ofDate:options:;
- (id)dateBySettingHour:minute:second:ofDate:options:;
- (BOOL)date:matchesComponents:;
- (void)getEra:year:month:day:fromDate:;
- (void)getEra:yearForWeekOfYear:weekOfYear:weekday:fromDate:;
- (void)getHour:minute:second:nanosecond:fromDate:;
- (id)dateWithEra:year:month:day:hour:minute:second:nanosecond:;
- (id)dateWithEra:yearForWeekOfYear:weekOfYear:weekday:hour:minute:second:nanosecond:;
- (id)nextDateAfterDate:matchingHour:minute:second:options:;
- (id)_copyLocale;
- (id)_copyTimeZone;
- (void)_setGregorianStartDate:;
- (id)_copyGregorianStartDate;
- (id)_minimumRangeOfUnit:;
- (id)_maximumRangeOfUnit:;
- (id)_rangeOfUnit:inUnit:forAT:;
- (long long)_ordinalityOfUnit:inUnit:forAT:;
- (unsigned char)_rangeOfUnit:startTime:interval:forAT:;
- (unsigned char)_composeAbsoluteTime:::;
- (unsigned char)_decomposeAbsoluteTime:::;
- (unsigned char)_addComponents::::;
- (unsigned char)_diffComponents:::::;
+ (id)_intents_decodeWithJSONDecoder:codableDescription:from:;
+ (id)if_currentCalendarWithLanguageCode:;
+ (id)VCS_gregorianGMTCalendar;
+ (id)VCS_gregorianLocalCalendar:;
+ (id)CalYearlessDateThreshold;
+ (id)CalGregorianGMTCalendar;
+ (id)CalGregorianCalendarForTimeZone:;
+ (id)sharedAutoupdatingCurrentCalendar;
+ (id)CalCalendarWithUnsanitizedCalendarIdentifier:;
+ (id)CalDateFromBirthdayComponents:;
+ (id)allocWithZone:;
+ (BOOL)supportsSecureCoding;
+ (id)currentCalendar;
+ (id)calendarWithIdentifier:;
+ (id)autoupdatingCurrentCalendar;
@end
