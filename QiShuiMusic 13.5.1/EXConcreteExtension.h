@interface EXConcreteExtension : NSExtension
@property (nonatomic) NSString _localizedName;
@property (nonatomic) NSString _localizedShortName;
@property (nonatomic) <PKPlugIn> _plugIn;
@property (nonatomic) NSBundle _extensionBundle;
@property (nonatomic) @? _requestPostCompletionBlock;
@property (nonatomic) @? _requestPostCompletionBlockWithItems;
@property (nonatomic) double requestTeardownDelay;
@property (nonatomic) NSUUID connectionUUID;
@property (nonatomic) q wantsDedicatedQueue;
@property (nonatomic) NSMutableDictionary _extensionExpirationIdentifiers;
@property (nonatomic) NSMutableDictionary _extensionServiceConnections;
@property (nonatomic) NSMutableDictionary _extensionContexts;
@property (nonatomic) NSDictionary _extensionState;
@property (nonatomic) NSSet _allowedErrorClasses;
@property (nonatomic) BOOL observingHostAppStateChanges;
@property (nonatomic) @ _stashedPlugInConnection;
@property (nonatomic) NSArray _internalPersonas;
- (id)connectionUUID;
- (long long)wantsDedicatedQueue;
- (void)setRequestInterruptionBlock:;
- (void)setConnectionUUID:;
- (id)_requestPostCompletionBlock;
- (id)infoDictionary;
- (id)init;
- (id)_requestPostCompletionBlockWithItems;
- (id)beginExtensionRequestWithInputItems:listenerEndpoint:error:;
- (BOOL)attemptOptOut:;
- (void)_didShowExtensionManagementInterface;
- (void)setRequestCancellationBlock:;
- (void)dealloc;
- (void)_reallyBeginExtensionRequest:completion:;
- (void)_safelyEndUsingRequestWithPKUUID:processAssertion:continuation:;
- (id)extensionPointIdentifier;
- (void)_safelyEndUsing:;
- (BOOL)attemptOptIn:;
- (id)beginExtensionRequestWithOptions:inputItems:listenerEndpoint:error:;
- (void)_hostWillResignActiveNote:;
- (id)version;
- (id)requestInterruptionBlock;
- (id)_beginExtensionRequest:error:;
- (BOOL)makeExtensionContextAndXPCConnectionForRequest:error:;
- (id)_internalPersonas;
- (id)identifier;
- (BOOL)validateRequest:error:;
- (id)_plugIn;
- (void)_safelyBeginUsingWithRequest:readyHandler:;
- (void)_reallyBeginExtensionRequest:synchronously:completion:;
- (void)_setExtensionServiceConnections:;
- (id)_extensionBundle;
- (void)set_requestPostCompletionBlock:;
- (id)_localizedShortName;
- (void)_setExtensionExpirationsIdentifiers:;
- (void)_dropAssertion;
- (unsigned long long)hash;
- (id)beginExtensionRequestWithInputItems:error:;
- (void)_setExtensionState:;
- (void)beginExtensionRequestWithOptions:inputItems:listenerEndpoint:completion:;
- (void)_setObservingHostAppStateChanges:;
- (id)attributes;
- (void)beginExtensionRequestWithOptions:inputItems:completion:;
- (void)_beginExtensionRequest:completion:;
- (void)_openURL:completion:;
- (id)_itemProviderForPayload:extensionContext:;
- (void)_completeRequestReturningItems:forExtensionContextWithUUID:completion:;
- (void)_didShowNewExtensionIndicator;
- (BOOL)optedIn;
- (BOOL)_beginUsingAndCreateExtensionAssertionWithRequest:error:;
- (void)cancelExtensionRequestWithIdentifier:;
- (BOOL)_isObservingHostAppStateChanges;
- (id)objectForInfoDictionaryKey:;
- (double)requestTeardownDelay;
- (id)requestCompletionBlock;
- (id)_localizedName;
- (void)set_requestPostCompletionBlockWithItems:;
- (void)beginExtensionRequestWithInputItems:listenerEndpoint:completion:;
- (BOOL)_isSystemExtension;
- (id)_bareExtensionServiceConnection;
- (void)_resetExtensionState;
- (int)pidForRequestIdentifier:;
- (id)_extensionContextForUUID:;
- (void)_loadItemForPayload:contextIdentifier:completionHandler:;
- (void)_loadPreviewImageForPayload:contextIdentifier:completionHandler:;
- (int)_plugInProcessIdentifier;
- (void)_didCreateExtensionContext:;
- (id)_allowedErrorClasses;
- (void)_setExtensionContexts:;
- (void)_hostDidBecomeActiveNote:;
- (BOOL)_wantsProcessPerRequest;
- (void).cxx_destruct;
- (id)beginExtensionRequestWithOptions:inputItems:error:;
- (void)_setAllowedErrorClasses:;
- (BOOL)_isMarkedNew;
- (id)requestCancellationBlock;
- (void)_hostWillEnterForegroundNote:;
- (id)_initWithPKPlugin:;
- (void)setRequestCompletionBlock:;
- (void)_safelyBeginUsing:;
- (void)_hostDidEnterBackgroundNote:;
- (id)description;
- (void)_kill:;
- (id)_extensionContexts;
- (id)_extensionServiceConnections;
- (id)_extensionExpirationIdentifiers;
- (void)set_stashedPlugInConnection:;
- (id)_allowedItemPayloadClasses;
- (id)icons;
- (id)extensionContexts;
- (id)_extensionState;
- (void)_cancelRequestWithError:forExtensionContextWithUUID:completion:;
- (Class)_hostContextClass;
- (BOOL)_isPhotoServiceAccessGranted;
- (void)setWantsDedicatedQueue:;
- (id)_stashedPlugInConnection;
- (void)_setPlugIn:;
- (void)_safelyBeginUsingSynchronously:request:readyHandler:;
- (void)beginExtensionRequestWithInputItems:completion:;
- (BOOL)isEqual:;
- (id)_personas;
+ (BOOL)_evaluateActivationRule:withDictionaryIfItMatchesActiveWebPageAlternative:matchResult:;
+ (BOOL)_inputItemsMatchActiveWebPageAlternative:;
+ (id)beginMatchingExtensionsWithAttributes:completion:;
+ (BOOL)_shouldLogExtensionDiscovery;
+ (id)extensionWithIdentifier:excludingDisabledExtensions:error:;
+ (BOOL)_matchingDictionaryMatchesActiveWebPageAlternative:;
+ (id)extensionWithIdentifier:error:;
+ (BOOL)evaluateActivationRule:withExtensionItemsRepresentation:;
+ (id)globalStateQueueForExtension:;
+ (void)extensionsWithMatchingAttributes:completion:;
+ (id)_dictionaryIncludingOnlyItemsWithRegisteredTypeIdentifier:fromMatchingDictionary:;
+ (void)extensionWithURL:completion:;
+ (BOOL)_genericValuesMatchActiveWebPageAlternativeWithExtensionItems:attachmentsLens:registeredTypeIdentifiersLens:isActiveWebPageAttachmentCheck:;
+ (id)predicateForActivationRule:;
+ (void)extensionsWithMatchingAttributes:synchronously:completion:;
+ (void)initializeFiltering;
+ (void)endMatchingExtensions:;
+ (BOOL)_evaluateActivationRuleWithoutWorkarounds:withExtensionItemsRepresentation:;
+ (BOOL)_evaluateActivationRule:withInputItemsIfTheyMatchActiveWebPageAlternative:matchResult:;
+ (id)_inputItemsByApplyingActiveWebPageAlternative:ifNeededByActivationRule:;
+ (void)extensionWithUUID:completion:;
+ (id)extensionsWithMatchingAttributes:error:;
@end
