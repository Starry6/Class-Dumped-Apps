@interface NPWaldo : NSObject
@property (nonatomic) NSMutableDictionary networkInformation;
@property (nonatomic) NSArray allOnRamps;
@property (nonatomic) BOOL daypassRefreshInProgress;
@property (nonatomic) NSArray currentEdges;
@property (nonatomic) q currentEdgeIndex;
@property (nonatomic) NPTuscanyEdge nextEdge;
@property (nonatomic) NSArray currentEdgeList;
@property (nonatomic) BOOL reprocessCancelled;
@property (nonatomic) I generation;
@property (nonatomic) NSObject<OS_dispatch_source> reprocessSamplingTimer;
@property (nonatomic) NWNetworkAgentRegistration agentRegistration;
@property (nonatomic) NSUUID configurationIdentifier;
@property (nonatomic) NSObject<OS_dispatch_queue> reprocessQueue;
@property (nonatomic) @? latencyComparator;
@property (nonatomic) NSData updateHash;
@property (nonatomic) BOOL reResolve;
@property (nonatomic) NSString identifier;
@property (nonatomic) q source;
@property (nonatomic) NSNumber timestamp;
@property (nonatomic) NSNumber version;
@property (nonatomic) NSString dayPassHostname;
@property (nonatomic) NSNumber dayPassHostnamePrependLabel;
@property (nonatomic) NSNumber dayPassPort;
@property (nonatomic) NSNumber dayPassRequestTimeout;
@property (nonatomic) NSString dayPassLeafOID;
@property (nonatomic) NSNumber dayPassRevocationFailClosed;
@property (nonatomic) NSNumber dayPassExtendedValidation;
@property (nonatomic) NSNumber dayPassEnableSessionTicket;
@property (nonatomic) NSArray dayPassSoftExpiry;
@property (nonatomic) NSNumber enableLatencyDerivation;
@property (nonatomic) NSNumber latencyFactorA;
@property (nonatomic) NSNumber latencyFactorB;
@property (nonatomic) NSNumber latencyFactorX;
@property (nonatomic) NSNumber edgeFairnessFactor;
@property (nonatomic) NSNumber locationCheckInterval;
@property (nonatomic) NSNumber locationTTL;
@property (nonatomic) NSNumber locationToleranceDistance;
@property (nonatomic) NSNumber viewSize;
@property (nonatomic) NSNumber probePause;
@property (nonatomic) NSNumber probeTFO;
@property (nonatomic) NSNumber probeNoTFOCookie;
@property (nonatomic) NSNumber probeTimeout;
@property (nonatomic) NSNumber retryPause;
@property (nonatomic) NSNumber signatureLimit;
@property (nonatomic) NSNumber observedRTTSampleSize;
@property (nonatomic) NSNumber reprocessSamplingInterval;
@property (nonatomic) NSNumber reprocessSampleSize;
@property (nonatomic) NSNumber connectionIdleTimeoutMaximum;
@property (nonatomic) NSString tag;
@property (nonatomic) NSURL telemetryURL;
@property (nonatomic) NSString telemetryService;
@property (nonatomic) NSNumber useGeohashFromServer;
@property (nonatomic) NSNumber edgeSelectionEnabled;
@property (nonatomic) NSNumber edgeSelectionAlpha;
@property (nonatomic) NSNumber edgeSelectionWindowSize;
@property (nonatomic) NSNumber enableIPv6;
@property (nonatomic) NSArray edges;
@property (nonatomic) NSNumber requireTFO;
@property (nonatomic) NSNumber TFOLeeway;
@property (nonatomic) BOOL isIPv6Enabled;
@property (nonatomic) NSNumber edgesGeneration;
@property (nonatomic) NSNumber usedEdgesGeneration;
@property (nonatomic) NPTuscanyEdge currentEdge;
@property (nonatomic) Q edgeCount;
@property (nonatomic) BOOL hasEdges;
@property (nonatomic) q dayPassFetchCount;
@property (nonatomic) NSDate currentNetworkLastUsed;
@property (nonatomic) NSString hostname;
@property (nonatomic) <NPWaldoDelegate> delegate;
@property (nonatomic) BOOL shouldSave;
@property (nonatomic) NSDate expirationDate;
@property (nonatomic) Q probeSize;
@property (nonatomic) NPLocation cachedLocation;
@property (nonatomic) NSDate locationCheckTimestamp;
@property (nonatomic) NSDate locationExpiration;
@property (nonatomic) NPWaldo defaults;
@property (nonatomic) NSPNetworkAgent agent;
@property (nonatomic) NPKeyBag keybag;
@property (nonatomic) NPWaldoLocationManager locationManager;
@property (nonatomic) BOOL reprocessPending;
- (void)link;
- (id)hostname;
- (id)configurationIdentifier;
- (id)defaults;
- (id)tag;
- (id)init;
- (void)setHostname:;
- (void)setLocationManager:;
- (void)setDefaults:;
- (void)setVersion:;
- (id)version;
- (void)setEdges:;
- (void)setDelegate:;
- (id)identifier;
- (id)updateHash;
- (id)initWithCoder:;
- (void)setConfigurationIdentifier:;
- (id)viewSize;
- (id)expirationDate;
- (void)encodeWithCoder:;
- (void)setTag:;
- (id)requireTFO;
- (void)teardownNetworkAgent;
- (void)setTimestamp:;
- (unsigned long long)edgeCount;
- (id)delegate;
- (void)setAgent:;
- (id)agentRegistration;
- (void)setUpdateHash:;
- (void)setGeneration:;
- (id)locationManager;
- (void).cxx_destruct;
- (long long)source;
- (void)setAgentRegistration:;
- (id)timestamp;
- (void)saveToKeychain;
- (id)agent;
- (id)description;
- (id)edges;
- (void)removeFromKeychain;
- (unsigned int)generation;
- (void)setRequireTFO:;
- (id)copyWithZone:;
- (void)setViewSize:;
- (id)cachedLocation;
- (void)setCachedLocation:;
- (void)resolveWithCompletionHandler:;
- (void)updateEdgeSelection:;
- (id)copyEdgeSelectionTelemetry;
- (id)keybag;
- (void)setKeybag:;
- (id)probeTFO;
- (void)setProbeTFO:;
- (id)probeNoTFOCookie;
- (void)setProbeNoTFOCookie:;
- (BOOL)reResolve;
- (void)setReResolve:;
- (id)initWithIdentifier:timestamp:fromDictionary:source:;
- (void)linkLatenciesAllSignatures:;
- (void)linkAllSignatures:;
- (void)merge:missingSettingsOnly:;
- (id)allOnRamps;
- (void)setAllOnRamps:;
- (void)updateNetworkAgentWithKeybag:networkInfo:;
- (id)initFromKeychainWithIdentifier:;
- (void)establishTrustWithCompletionHandler:;
- (void)pushKeybagToKernelUpdateGeneration:;
- (void)pushKeybagToKernel;
- (void)pushKeybagToKernelCanReuse:;
- (void)removeDayPassesFromKernel;
- (void)ageOutLatencyMap;
- (BOOL)isLatenciesCompleteForNetwork:;
- (void)handleUsageReport:;
- (void)updateMetaDataNeedProbe:refresh:push:minRTT:;
- (long long)indexOfBestEdge;
- (long long)dayPassFetchCount;
- (id)currentEdge;
- (BOOL)shouldPerformDayPassRefresh;
- (void)timestampNetworkSignature:;
- (void)setCurrentNetworkCharacteristics:;
- (long long)getCurrentNetworkInterfaceType;
- (void)cancelProbes;
- (void)initializeEdgeSelection;
- (void)reprocessWithCompletionHandler:;
- (void)reprocessAdHocWithEdgeIndex:completionHandler:;
- (void)reprocessEdgeAtIndex:networkSignature:completionHandler:;
- (BOOL)isEndpointProbed:parameters:latencies:checkSampleSize:incompleteLatency:;
- (id)createEdgeLatenciesToProbeWithEdgeIndex:startSampleCount:;
- (void)reprocessLatencies:sampleCount:completionHandler:;
- (long long)getFallbackReasonForLatencies:;
- (BOOL)reprocessWithNewRTT:reProbe:;
- (void)startProbingEdges:atIndex:doneCount:sampleCount:completionHandler:;
- (void)logEdgeList:debug:toStdout:;
- (id)copyEdgeList:;
- (id)copyEdgeListRTTAverage:observed:shortDescription:;
- (BOOL)validateEdgeList:;
- (void)loadObservedRTTSamples:;
- (BOOL)shouldFetchWaldo;
- (unsigned long long)probeSize;
- (id)currentEdgeList;
- (id)currentNetworkInfo;
- (void)resortEdgeListForCurrentNetworkSignature;
- (void)rebuildLatencyMapAllSignatures:;
- (void)mergeEdgeList:forNetworkSignature:;
- (id)edgeAtIndex:;
- (BOOL)hasEdges;
- (void)getDayPassRTT;
- (void)refreshDayPassesWithCompletionHandler:;
- (void)logLatencyInfoToStdout:logAll:logEdgeSelection:;
- (id)copyLatencyInfoDictionary:copyAll:;
- (id)currentNetworkLastUsed;
- (id)edgeContainingOnRamp:;
- (id)copyStateIncludeDistance:;
- (BOOL)isIPv6Enabled;
- (id)onRampForIndex:;
- (id)latencyComparator;
- (void)cleanupStaleKeys;
- (void)incrementSessionCounters;
- (id)dayPassHostname;
- (void)setDayPassHostname:;
- (id)dayPassHostnamePrependLabel;
- (void)setDayPassHostnamePrependLabel:;
- (id)dayPassPort;
- (void)setDayPassPort:;
- (id)dayPassRequestTimeout;
- (void)setDayPassRequestTimeout:;
- (id)dayPassLeafOID;
- (void)setDayPassLeafOID:;
- (id)dayPassRevocationFailClosed;
- (void)setDayPassRevocationFailClosed:;
- (id)dayPassExtendedValidation;
- (void)setDayPassExtendedValidation:;
- (id)dayPassEnableSessionTicket;
- (void)setDayPassEnableSessionTicket:;
- (id)dayPassSoftExpiry;
- (void)setDayPassSoftExpiry:;
- (id)enableLatencyDerivation;
- (void)setEnableLatencyDerivation:;
- (id)latencyFactorA;
- (void)setLatencyFactorA:;
- (id)latencyFactorB;
- (void)setLatencyFactorB:;
- (id)latencyFactorX;
- (void)setLatencyFactorX:;
- (id)edgeFairnessFactor;
- (void)setEdgeFairnessFactor:;
- (id)locationCheckInterval;
- (void)setLocationCheckInterval:;
- (id)locationTTL;
- (void)setLocationTTL:;
- (id)locationToleranceDistance;
- (void)setLocationToleranceDistance:;
- (id)probePause;
- (void)setProbePause:;
- (id)probeTimeout;
- (void)setProbeTimeout:;
- (id)retryPause;
- (void)setRetryPause:;
- (id)signatureLimit;
- (void)setSignatureLimit:;
- (id)observedRTTSampleSize;
- (void)setObservedRTTSampleSize:;
- (id)reprocessSamplingInterval;
- (void)setReprocessSamplingInterval:;
- (id)reprocessSampleSize;
- (void)setReprocessSampleSize:;
- (id)connectionIdleTimeoutMaximum;
- (void)setConnectionIdleTimeoutMaximum:;
- (id)telemetryURL;
- (void)setTelemetryURL:;
- (id)telemetryService;
- (void)setTelemetryService:;
- (id)useGeohashFromServer;
- (void)setUseGeohashFromServer:;
- (id)edgeSelectionEnabled;
- (void)setEdgeSelectionEnabled:;
- (id)edgeSelectionAlpha;
- (void)setEdgeSelectionAlpha:;
- (id)edgeSelectionWindowSize;
- (void)setEdgeSelectionWindowSize:;
- (id)enableIPv6;
- (void)setEnableIPv6:;
- (id)TFOLeeway;
- (void)setTFOLeeway:;
- (id)edgesGeneration;
- (void)setEdgesGeneration:;
- (id)usedEdgesGeneration;
- (void)setUsedEdgesGeneration:;
- (long long)currentEdgeIndex;
- (void)setCurrentEdgeIndex:;
- (BOOL)shouldSave;
- (void)setShouldSave:;
- (id)locationCheckTimestamp;
- (void)setLocationCheckTimestamp:;
- (id)locationExpiration;
- (void)setLocationExpiration:;
- (BOOL)reprocessPending;
- (void)setReprocessPending:;
- (id)networkInformation;
- (void)setNetworkInformation:;
- (BOOL)daypassRefreshInProgress;
- (void)setDaypassRefreshInProgress:;
- (id)currentEdges;
- (id)nextEdge;
- (BOOL)reprocessCancelled;
- (void)setReprocessCancelled:;
- (id)reprocessSamplingTimer;
- (void)setReprocessSamplingTimer:;
- (id)reprocessQueue;
+ (BOOL)supportsSecureCoding;
+ (id)createEndpointFromHostList:defaultPortString:allowIPv6:;
@end
