@interface BDUGLuckyDogCalibratorManagerV2 : NSObject
@property (nonatomic) double timeInterval;
@property (nonatomic) double lastServerTime;
@property (nonatomic) double hostTimeInterval;
@property (nonatomic) BOOL hasUpdated;
@property (nonatomic) BOOL hasTrySetHostTime;
@property (nonatomic) BOOL enableLowPrecisionTimeInterval;
@property (nonatomic) BOOL isBackground;
@property (nonatomic) double lowPrecisionTimeInterval;
@property (nonatomic) NSObject<OS_dispatch_source> dispatchTimer;
@property (nonatomic) NSObject<OS_dispatch_queue> dispatchQueue;
@property (nonatomic) BOOL isTimerRunning;
@property (nonatomic) Q hash;
@property (nonatomic) # superclass;
@property (nonatomic) NSString description;
@property (nonatomic) NSString debugDescription;
- (void)__clearCachedTime;
- (id)__highPrecisionAccurateCurrentServerDate;
- (void)__onAppDidBecomeActive:;
- (void)__onAppWillResignActive:;
- (void)__recoverServerTimeFromCache;
- (void)__setupNotification;
- (void)__updateLowPrecisionTimeInterval:;
- (id)accurateCurrentServerDate;
- (double)currentServerTimestampInMS;
- (BOOL)enableLowPrecisionTimeInterval;
- (BOOL)hasTrySetHostTime;
- (double)hostTimeInterval;
- (BOOL)isTimerRunning;
- (double)lastServerTime;
- (double)lowPrecisionTimeInterval;
- (void)setEnableLowPrecisionTimeInterval:;
- (void)setHasTrySetHostTime:;
- (void)setHostTimeInterval:;
- (void)setIsTimerRunning:;
- (void)setLastServerTime:;
- (void)setLowPrecisionTimeInterval:;
- (void)updateServerTime:source:extra:;
- (BOOL)isBackground;
- (void)setDispatchTimer:;
- (id)init;
- (void)dealloc;
- (id)dispatchQueue;
- (void)setDispatchQueue:;
- (BOOL)isAvailable;
- (void)setTimeInterval:;
- (double)timeInterval;
- (void)setIsBackground:;
- (void).cxx_destruct;
- (id)dispatchTimer;
- (void)setHasUpdated:;
- (BOOL)hasUpdated;
+ (id)ABSetting;
+ (double)elapsedBootTime;
+ (BOOL)isDefaultABTest;
+ (unsigned long long)effectTime;
+ (double)fallbackElapsedBootTime;
+ (void)onCleanCache;
+ (void)preStartupCalibratorModule;
+ (void)sdkSettingsUpdate;
+ (double)systemBootTime;
+ (id)sharedInstance;
+ (id)moduleName;
+ (id)serviceProtocol;
@end
