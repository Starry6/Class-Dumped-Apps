@interface MKETAProvider : NSObject
@property (nonatomic) <_MKPlaceItem> placeItem;
@property (nonatomic) MKMapItem mapItem;
@property (nonatomic) <GEOTransitLineItem> lineItem;
@property (nonatomic) NSHashTable observers;
@property (nonatomic) NSLock observersLock;
@property (nonatomic) CLLocation currentLocation;
@property (nonatomic) <MKETAProviderDelegate> delegate;
@property (nonatomic) GEOAutomobileOptions automobileOptions;
@property (nonatomic) GEOWalkingOptions walkingOptions;
@property (nonatomic) GEOTransitOptions transitOptions;
@property (nonatomic) GEOCyclingOptions cyclingOptions;
@property (nonatomic) BOOL allowsDistantETA;
@property (nonatomic) NSString rawDistanceString;
@property (nonatomic) NSString distanceString;
@property (nonatomic) Q etaTransportType;
@property (nonatomic) double etaTravelTime;
@property (nonatomic) NSNumber transportTypePreferenceNumber;
@property (nonatomic) BOOL isLikelyToReturnETA;
@property (nonatomic) Q hash;
@property (nonatomic) # superclass;
@property (nonatomic) NSString description;
@property (nonatomic) NSString debugDescription;
- (void)_startTimer;
- (id)mapItem;
- (void)_commonInit;
- (void)setAutomobileOptions:;
- (void)_cancelTimer;
- (void)removeObserver:;
- (id)observersLock;
- (id)automobileOptions;
- (void)addObserver:;
- (void)cancel;
- (void)dealloc;
- (void)_didEnterBackground;
- (id)transitOptions;
- (id)lineItem;
- (void)start;
- (void)setDelegate:;
- (id)currentLocation;
- (void)locationManagerDidPauseLocationUpdates:;
- (void)locationManager:didUpdateVehicleHeading:timestamp:;
- (void)setObserversLock:;
- (id)delegate;
- (id)initWithMapItem:;
- (void)setTransitOptions:;
- (void)locationManager:didUpdateVehicleSpeed:timestamp:;
- (void)locationManagerDidResumeLocationUpdates:;
- (void).cxx_destruct;
- (void)restart;
- (void)setObservers:;
- (void)setCyclingOptions:;
- (void)setWalkingOptions:;
- (void)pause;
- (id)observers;
- (void)_refreshTimer;
- (id)walkingOptions;
- (id)cyclingOptions;
- (void)locationManagerUpdatedLocation:;
- (void)locationManagerFailedToUpdateLocation:withError:;
- (void)locationManagerDidReset:;
- (BOOL)locationManagerShouldPauseLocationUpdates:;
- (id)initWithLineItem:;
- (id)placeItem;
- (void)setAllowsDistantETA:;
- (BOOL)allowsDistantETA;
- (id)initWithPlaceItem:;
- (void)_locationManagerApprovalDidChange:;
- (void)_updateETAHandler:;
- (void)_willEnterForeground;
- (void)_updateETA;
- (BOOL)quickRouteShouldOnlyUseAutomobile;
- (BOOL)quickRouteShouldIncludeTransitWhenNotPreferredTransportType;
- (void)quickRouteManager:didUpdateETA:error:animated:;
- (void)findDirectionsTypeForOriginCoordinate:destinationCoordinate:handler:;
- (void)_notifyETAAllObservers;
- (void)_notifyLocationAllObservers;
- (unsigned long long)etaTransportType;
- (double)etaTravelTime;
- (id)distanceString;
- (id)rawDistanceString;
- (id)transportTypePreferenceNumber;
- (BOOL)isLikelyToReturnETA;
- (void)configureWithNearestStationMapItem:;
- (BOOL)_areDistanceAndETAInformationAvailable;
- (BOOL)_shouldUpdateETAForMapView:;
- (void)_configureETAForMapItem:;
- (id)currentMapItem;
- (void)_updateETADisplayWithTransportType:travelTime:distance:;
@end
