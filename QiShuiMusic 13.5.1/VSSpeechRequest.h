@interface VSSpeechRequest : NSObject
@property (nonatomic) NSAttributedString attributedText;
@property (nonatomic) BOOL shouldStreamAudioData;
@property (nonatomic) NSString utterance;
@property (nonatomic) NSString clientBundleIdentifier;
@property (nonatomic) NSUUID accessoryID;
@property (nonatomic) Q requestCreatedTimestamp;
@property (nonatomic) @? stopHandler;
@property (nonatomic) @? pauseHandler;
@property (nonatomic) q pointer;
@property (nonatomic) NSString text;
@property (nonatomic) NSString languageCode;
@property (nonatomic) NSString voiceName;
@property (nonatomic) q footprint;
@property (nonatomic) q voiceType;
@property (nonatomic) q gender;
@property (nonatomic) NSURL outputPath;
@property (nonatomic) BOOL shouldWaitCurrentSpeaking;
@property (nonatomic) BOOL disableDeviceRacing;
@property (nonatomic) BOOL shouldCache;
@property (nonatomic) double rate;
@property (nonatomic) double pitch;
@property (nonatomic) double volume;
@property (nonatomic) BOOL shouldWhisper;
@property (nonatomic) NSDictionary contextInfo;
@property (nonatomic) BOOL disableCompactVoiceFallback;
@property (nonatomic) I audioSessionID;
@property (nonatomic) BOOL forceServerTTS;
@property (nonatomic) BOOL canUseServerTTS;
@property (nonatomic) BOOL retryDeviceOnNetworkStall;
@property (nonatomic) q powerProfile;
@property (nonatomic) NSURL resourceListURL;
@property (nonatomic) NSURL resourceSearchPathURL;
@property (nonatomic) NSArray customResourceURLs;
@property (nonatomic) NSUUID siriRequestId;
- (id)clientBundleIdentifier;
- (unsigned int)audioSessionID;
- (void)setRate:;
- (void)setPitch:;
- (id)init;
- (void)setAttributedText:;
- (double)volume;
- (void)setVoiceType:;
- (void)setFootprint:;
- (void)setLanguageCode:;
- (long long)gender;
- (id)languageCode;
- (BOOL)forceServerTTS;
- (BOOL)shouldCache;
- (void)setForceServerTTS:;
- (void)setVolume:;
- (id)accessoryID;
- (void)setText:;
- (double)rate;
- (void)setGender:;
- (double)pitch;
- (long long)footprint;
- (id)initWithCoder:;
- (id)logText;
- (void)encodeWithCoder:;
- (BOOL)disableDeviceRacing;
- (void)setAudioSessionID:;
- (void)setDisableDeviceRacing:;
- (void)setAccessoryID:;
- (void)setShouldCache:;
- (void).cxx_destruct;
- (void)setPowerProfile:;
- (id)description;
- (long long)voiceType;
- (id)attributedText;
- (id)text;
- (void)setClientBundleIdentifier:;
- (long long)powerProfile;
- (id)copyWithZone:;
- (long long)pointer;
- (id)utterance;
- (void)setUtterance:;
- (id)voiceName;
- (void)setVoiceName:;
- (id)contextInfo;
- (void)setContextInfo:;
- (id)siriRequestId;
- (void)setSiriRequestId:;
- (id)customResourceURLs;
- (void)setCustomResourceURLs:;
- (id)outputPath;
- (void)setOutputPath:;
- (BOOL)canUseServerTTS;
- (void)setCanUseServerTTS:;
- (id)pauseHandler;
- (void)setPauseHandler:;
- (unsigned long long)requestCreatedTimestamp;
- (void)setRequestCreatedTimestamp:;
- (BOOL)canLogRequestText;
- (id)stopHandler;
- (void)setStopHandler:;
- (id)logUtterance;
- (BOOL)isSimilarTo:;
- (id)contextInfoString;
- (BOOL)shouldWaitCurrentSpeaking;
- (void)setShouldWaitCurrentSpeaking:;
- (BOOL)shouldWhisper;
- (void)setShouldWhisper:;
- (BOOL)disableCompactVoiceFallback;
- (void)setDisableCompactVoiceFallback:;
- (BOOL)retryDeviceOnNetworkStall;
- (void)setRetryDeviceOnNetworkStall:;
- (id)resourceListURL;
- (void)setResourceListURL:;
- (id)resourceSearchPathURL;
- (void)setResourceSearchPathURL:;
- (BOOL)shouldStreamAudioData;
- (void)setShouldStreamAudioData:;
- (void)setPointer:;
+ (BOOL)supportsSecureCoding;
@end
