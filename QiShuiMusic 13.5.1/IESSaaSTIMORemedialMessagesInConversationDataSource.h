@interface IESSaaSTIMORemedialMessagesInConversationDataSource : NSObject
@property (nonatomic) NSString conversationID;
@property (nonatomic) NSArray currentMessagesAll;
@property (nonatomic) NSArray currentMessagesFiltered;
@property (nonatomic) NSDictionary currentMessagesDict;
@property (nonatomic) NSMutableDictionary updatedModels;
@property (nonatomic) <IESSaaSTIMMessageStoreProtocol> db;
@property (nonatomic) BOOL hasOlderMessages;
@property (nonatomic) BOOL hasNewerMessages;
@property (nonatomic) q lastReadIndex;
@property (nonatomic) BOOL autoInsertNewMessages;
@property (nonatomic) BOOL loadOlderDoNotNeedNetwork;
@property (nonatomic) @? shouldIncludeMessageFilter;
@property (nonatomic) Q messageCountPerPage;
@property (nonatomic) IESSaaSTIMMessageChecker checker;
@property (nonatomic) q currentMaxIndexV2;
@property (nonatomic) NSObject<OS_dispatch_semaphore> lock;
@property (nonatomic) NSObject<OS_dispatch_queue> processQueue;
@property (nonatomic) NSString notifierToken;
@property (nonatomic) NSString dbToken;
@property (nonatomic) NSCache referMessageCache;
@property (nonatomic) <IESSaaSTIMOMessagesDataSourceDelegate> delegate;
@property (nonatomic) NSArray currentMessageBriefs;
@property (nonatomic) BOOL forcePullRemoteForFirstPage;
@property (nonatomic) Q hash;
@property (nonatomic) # superclass;
@property (nonatomic) NSString description;
@property (nonatomic) NSString debugDescription;
- (void)setForcePullRemoteForFirstPage:;
- (void)appendNewMessages:needFixOrder:;
- (id)dbToken;
- (void)appendNewMessages:needFixOrder:reason:;
- (void)applyNewResult:reason:;
- (BOOL)autoInsertNewMessages;
- (BOOL)checkMessageValid:;
- (BOOL)checkMessagesContinuous:;
- (long long)currentMaxIndexV2;
- (id)currentMessageBriefs;
- (id)currentMessagesAll;
- (id)currentMessagesDict;
- (id)currentMessagesFiltered;
- (void)cycleLoadMessagesBetweenMinIndexV2:maxIndexV2:completionBlock:;
- (void)cycleLoadOlderMessagesUntilLastReadMessageInMessageArray:beforeMessage:countPerPage:maxLoadCount:completion:;
- (void)deleteWithIdentifiers:reason:;
- (void)didResetHasMoreStateOfConversation:;
- (id)extractMessagesLogInfoWithMessagesArray:;
- (id)filteredMessagesOfMessages:reason:;
- (BOOL)forcePullRemoteForFirstPage;
- (BOOL)hasNewerMessages;
- (BOOL)hasOlderMessages;
- (id)initPurelyWithConversationID:;
- (id)itemForMessageId:;
- (long long)lastReadIndex;
- (void)loadMessageDetailWithServerMessageID:conversationShortId:conversationId:conversationType:completion:;
- (void)loadNewerMessagesRemedialyWithTargetMessageID:completionBlock:;
- (void)loadNewestMessagesWithCompletionBlock:;
- (BOOL)loadOlderDoNotNeedNetwork;
- (void)loadOlderMessagesRemedialyWithPriorityUseDB:completionBlock:;
- (void)loadOlderMessagesRemedialyWithPriorityUseDB:targetMessageID:completionBlock:;
- (void)loadOlderMessagesUntilLastReadMessageWithCountPerPage:maxLoadCount:completion:;
- (unsigned long long)messageCountPerPage;
- (id)notifierToken;
- (void)onConversationCleared:;
- (void)onConversationsDeleted:;
- (void)onMessagesCreated:belongingConversationMap:reason:;
- (void)onMessagesDeleted:belongingConversationMap:;
- (void)onMessagesUpdated:belongingConversationMap:;
- (void)preSetupExtOfMessageList:;
- (id)referMessageCache;
- (void)setAutoInsertNewMessages:;
- (void)setChecker:;
- (void)setCurrentMaxIndexV2:;
- (void)setCurrentMessagesAll:;
- (void)setCurrentMessagesDict:;
- (void)setCurrentMessagesFiltered:;
- (void)setDbToken:;
- (void)setHasNewerMessages:;
- (void)setHasOlderMessages:;
- (void)setLastReadIndex:;
- (void)setLoadOlderDoNotNeedNetwork:;
- (void)setMessageCountPerPage:;
- (void)setNotifierToken:;
- (void)setProcessQueue:;
- (void)setReferMessageCache:;
- (void)setShouldIncludeMessageFilter:;
- (void)setUpdatedModels:;
- (id)shouldIncludeMessageFilter;
- (id)updatedModels;
- (id)db;
- (unsigned long long)numberOfItems;
- (void)dealloc;
- (void)setDelegate:;
- (id)lock;
- (id)delegate;
- (void).cxx_destruct;
- (id)itemAtIndex:;
- (void)setDb:;
- (id)conversationID;
- (void)setLock:;
- (void)setConversationID:;
- (id)checker;
- (void)commonSetup;
- (id)processQueue;
@end
