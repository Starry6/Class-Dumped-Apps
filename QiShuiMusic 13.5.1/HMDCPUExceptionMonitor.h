@interface HMDCPUExceptionMonitor : HeimdallrModule
@property (nonatomic) HMDCPUExceptionRecordManager recordManager;
@property (nonatomic) BOOL readFromDB;
@property (nonatomic) q sampleInterval;
@property (nonatomic) HMDCPUExceptionConfig currentConfig;
@property (nonatomic) HMDCPUExceptionConfig customConfig;
@property (nonatomic) float powerConsumptionThreshold;
@property (nonatomic) NSObject<OS_dispatch_queue> operationQueue;
@property (nonatomic) NSObject<OS_dispatch_source> sampleTimer;
@property (nonatomic) HMDCPUExceptionCycleDataCollector cycleDataPool;
@property (nonatomic) Q monitorType;
@property (nonatomic) HMDCPUExceptionThermalMonitor thermalMonitor;
@property (nonatomic) @? cloudCommandCompletion;
@property (nonatomic) BOOL isTheramlSerious;
@property (nonatomic) BOOL isTheramlTracking;
@property (nonatomic) float powerConsumption;
@property (nonatomic) BOOL readFromDB;
@property (nonatomic) HMDCPUExceptionRecordManager recordManager;
@property (nonatomic) HMDCPUExceptionPerf perfWatch;
@property (nonatomic) NSMutableArray customScenes;
@property (nonatomic) NSString customSceneStr;
@property (nonatomic) Q hash;
@property (nonatomic) # superclass;
@property (nonatomic) NSString description;
@property (nonatomic) NSString debugDescription;
- (void)setMonitorType:;
- (void)setSampleTimer:;
- (id)backtraceWithThreads:maxThreadUsage:;
- (BOOL)checkNeedUploadExceptionDataImmediatelyWithCPUAverageUsage:;
- (void)checkThermalMonitorState;
- (id)cloudCommandCompletion;
- (void)collectCurrentUsageRate;
- (id)cpuExceptionDataFromMemory;
- (id)cpuExceptionDataFromStore;
- (void)currentTheramlStateAbormal:;
- (void)currentTheramlStateBecomeNormal:;
- (id)customConfig;
- (id)customSceneStr;
- (id)customScenes;
- (id)cycleDataPool;
- (void)dealCurrentConfig:;
- (BOOL)deleteCPUExceptionRecords:;
- (void)dropExceptionData;
- (void)enterCustomSceneWithUniq:;
- (void)enterSpecificalSceneWithExceptionConfig:;
- (BOOL)exceptionDataSource;
- (void)exceptionReporterDidReceiveResponse:;
- (void)execMonitorWithCloudCommand;
- (void)fetchCloudCommandCPUExceptionOneCycleInfoWithCompletion:;
- (void)finishMonitorWithCloudCommandWithResult:;
- (float)getCPUUsageFromThreadsWithConsumThreadArray:allThreadCount:maxThreadUsage:;
- (BOOL)isTheramlSerious;
- (BOOL)isTheramlTracking;
- (void)leaveCustomSceneWithUniq:;
- (void)leaveSpecificalScene;
- (void)monitorStartAction;
- (void)monitorStopAction;
- (unsigned long long)monitorType;
- (BOOL)needSyncStart;
- (id)pendingExceptionData;
- (id)perfWatch;
- (BOOL)performanceDataSource;
- (float)powerConsumption;
- (float)powerConsumptionThreshold;
- (void)productionExceptionRecord;
- (BOOL)readFromDB;
- (id)recordManager;
- (void)reportLocalStoredRecord;
- (void)restartUsageMonitoringAfterSleep;
- (id)sampleTimer;
- (void)setCloudCommandCompletion:;
- (void)setCustomConfig:;
- (void)setCustomSceneStr:;
- (void)setCustomScenes:;
- (void)setCycleDataPool:;
- (void)setIsTheramlSerious:;
- (void)setIsTheramlTracking:;
- (void)setPerfWatch:;
- (void)setPowerConsumption:;
- (void)setPowerConsumptionThreshold:;
- (void)setReadFromDB:;
- (void)setRecordManager:;
- (void)setupDataForCycleStart;
- (void)shouldReportCPUExceptionRecordNow;
- (void)startCPUStatusMonitoring;
- (void)stopCPUStatusMonitoring;
- (BOOL)storeCPUExceptionRecords:;
- (void)switchTheramlMonitorState:;
- (void)updateConfig:;
- (void)usageExceptionInCurrentCycle;
- (void)setSampleInterval:;
- (id)init;
- (void)start;
- (void)stop;
- (long long)sampleInterval;
- (id)operationQueue;
- (id)currentConfig;
- (void).cxx_destruct;
- (void)setCurrentConfig:;
- (unsigned long long)exceptionType;
- (void)setOperationQueue:;
- (void)setupData;
- (Class)storeClass;
- (id)thermalMonitor;
- (void)setThermalMonitor:;
+ (id)sharedMonitor;
@end
