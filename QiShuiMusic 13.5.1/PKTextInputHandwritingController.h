@interface PKTextInputHandwritingController : NSObject
@property (nonatomic) PKTextInputRecognitionManager debugRecognitionManager;
@property (nonatomic) PKTextInputTargetState debugActiveInputTargetState;
@property (nonatomic) PKTextInputRecognitionManager _recognitionManager;
@property (nonatomic) PKTextInputWritingSession _writingSession;
@property (nonatomic) PKTextInputHandwritingShot _activeHandwritingShot;
@property (nonatomic) PKTextInputHandwritingShot _possibleHandwritingShot;
@property (nonatomic) PKTextInputResultCommand _activeResultCommand;
@property (nonatomic) NSMutableArray _resultCommandsQueue;
@property (nonatomic) double _lastInProgressStrokeUpdateTime;
@property (nonatomic) NSUUID _lastInProgressStrokeUUID;
@property (nonatomic) PKDrawing _lastKnownDrawing;
@property (nonatomic) PKTextInputTargetState _activeInputTargetState;
@property (nonatomic) double _floatingBackgroundLastUpdateTime;
@property (nonatomic) <PKTextInputHandwritingControllerDelegate> delegate;
@property (nonatomic) PKTextInputCanvasController canvasController;
@property (nonatomic) PKTextInputElementsController elementsController;
@property (nonatomic) PKTextInputFeedbackController feedbackController;
@property (nonatomic) PKTextInputReserveSpaceController reserveSpaceController;
@property (nonatomic) PKTextInputDebugLogController debugLogController;
@property (nonatomic) PKTextInputCursorController cursorController;
@property (nonatomic) q writingState;
@property (nonatomic) double strokeAlphaOverride;
@property (nonatomic) Q hash;
@property (nonatomic) # superclass;
@property (nonatomic) NSString description;
@property (nonatomic) NSString debugDescription;
- (void)setDelegate:;
- (id)delegate;
- (void).cxx_destruct;
- (id)feedbackController;
- (void)reportDebugStateDescription:;
- (id)_recognitionManager;
- (void)canvasControllerDidBeginDrawing:;
- (void)canvasControllerDidEndDrawing:;
- (void)canvasControllerDidCancelStroke:strokeAcceptanceState:;
- (void)canvasControllerInProgressStrokeDidChange:;
- (void)canvasControllerEndedStroke:;
- (void)canvasController:drawingDidChange:;
- (id)canvasController;
- (id)elementsController;
- (id)reserveSpaceController;
- (id)debugLogController;
- (id)cursorController;
- (void)_updateStrokeAlphaOverride;
- (void)handwritingShotDidChangeState:;
- (void)handwritingShotDidOverrideStrongCursor:;
- (id)handwritingShot:preferredTargetElementForQueryItemStableIdentifier:simultaneousItemStableIdentifiers:proposedTargetElement:;
- (void)handwritingShot:willFocusAndLoadDataForTargetElement:;
- (id)handwritingShot:activePreviewRangeForElementRecognitionIdentifier:queryItemStableIdentifier:;
- (BOOL)handwritingShot:hasCommittedResultsInSessionToElementRecognitionIdentifier:;
- (long long)handwritingShot:lastCharacterLevelPositionForElementRecognitionIdentifier:;
- (id)handwritingShot:inProgressGestureInitialSelectedRangeForElementRecognitionIdentifier:;
- (BOOL)handwritingShot:shouldSuppressGesturesForStrokesBounds:coordinateSpace:;
- (id)handwritingShotStrokeIdentifiersToExcludeFromRecognition:;
- (void)resultCommandStateDidChange:;
- (id)resultCommandCanvasController:;
- (id)resultCommandFeedbackController:;
- (id)resultCommandCursorController:;
- (id)resultCommandSupportedElementDelegate:;
- (BOOL)writingSession:elementHasPendingOperations:;
- (void)writingSession:willBeginWritingInElement:;
- (void)writingSession:didEndWritingInElement:;
- (void)writingSession:didInsertTextInElement:;
- (id)initWithCanvasController:elementsController:feedbackController:reserveSpaceController:debugLogController:cursorController:;
- (void)_setWritingSession:;
- (long long)writingState;
- (void)_notifyDelegateOfResultCommandState;
- (void)_setActiveHandwritingShot:;
- (void)_setPossibleHandwritingShot:;
- (void)_setActiveResultCommand:;
- (void)_setLastKnownDrawing:;
- (void)_setActiveInputTargetState:;
- (void)_updateWritingSession;
- (void)_updateRecognitionManager;
- (void)reserveSpaceControllerIsActiveChanged;
- (void)reserveSpaceControllerWillFocusElement:;
- (void)_evaluateAndProcessResultCommandsQueue;
- (void)_evaluateAndProcessResultCommandsQueueImmediateCommit:;
- (void)_handleResultCommandFinished:;
- (void)_scheduleCommitForResultCommandIfNeeded:;
- (id)_pendingResultCommand;
- (void)_cancelPendingResultCommand;
- (void)_createPossibleHandwritingShotIfNeeded;
- (void)_processPossibleShotIfReady;
- (void)_handleActiveHandwritingShotRecognitionFinished;
- (id)_resultCommandToProcessQueryItem:handwritingShot:;
- (long long)_immediateCommitTypeForQueryItem:handwritingShot:;
- (double)_continuousRecognitionInterval;
- (BOOL)_wantsFloatingBackground;
- (void)_updateFloatingBackground;
- (void)_cancelInProgressStrokeFromHandwritingShots;
- (double)strokeAlphaOverride;
- (void)set_recognitionManager:;
- (id)_writingSession;
- (id)_activeHandwritingShot;
- (id)_possibleHandwritingShot;
- (id)_activeResultCommand;
- (id)_resultCommandsQueue;
- (double)_lastInProgressStrokeUpdateTime;
- (void)set_lastInProgressStrokeUpdateTime:;
- (id)_lastInProgressStrokeUUID;
- (void)set_lastInProgressStrokeUUID:;
- (id)_lastKnownDrawing;
- (id)_activeInputTargetState;
- (double)_floatingBackgroundLastUpdateTime;
- (void)set_floatingBackgroundLastUpdateTime:;
- (void)commitNowIfPossible;
- (id)debugRecognitionManager;
- (id)debugActiveInputTargetState;
- (void)cleanUpFromCancelledReplay;
+ (BOOL)_isCorrectionResultGesture:;
@end
