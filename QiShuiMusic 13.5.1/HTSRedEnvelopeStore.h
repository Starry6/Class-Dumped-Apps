@interface HTSRedEnvelopeStore : NSObject
@property (nonatomic) NSString showingToast;
@property (nonatomic) BoxListResponse_ResponseData currentShowingRedEnvelope;
@property (nonatomic) NSNumber remainCount;
@property (nonatomic) BoxListResponse_ResponseData currentShowingSmallRedEnvelope;
@property (nonatomic) NSNumber allPendingCount;
@property (nonatomic) BOOL closeRedEnvelopeView;
@property (nonatomic) HTSRedEnvelopePriorityQueue redEnvelopeQueue;
@property (nonatomic) NSMutableDictionary sentFakeRedEnvelopesDict;
@property (nonatomic) <IESLiveGiftModuleGiftInterface> giftInterface;
@property (nonatomic) NSMutableDictionary disposeMap;
@property (nonatomic) BOOL didTrackRedEnvelopeInfo;
@property (nonatomic) q receivedRedEnvelopDiamond;
@property (nonatomic) IESLiveCountTimer countTimer;
@property (nonatomic) q followerCount;
@property (nonatomic) q requestTime;
@property (nonatomic) <IESLiveRevenuePlayRedEnvelopeAPI> redEnvelopeApi;
@property (nonatomic) BOOL numsOfRedEnvelopeIsEmpty;
@property (nonatomic) NSMutableArray hasShowedResultBoxIds;
@property (nonatomic) NSArray resultArray;
@property (nonatomic) NSNumber rushOptCode;
@property (nonatomic) NSDictionary bunusLuckyResultBox;
@property (nonatomic) <IESLiveRoomServiceAdapter> roomModel;
@property (nonatomic) HTSEventContext trackContext;
@property (nonatomic) IESLiveComponentContext componentContext;
@property (nonatomic) <IESLiveRedEnvelopeReaction> reaction;
@property (nonatomic) IESLiveRedEnvelopeSkinManager skinManager;
@property (nonatomic) BOOL needUpdateRedEnvelopeView;
@property (nonatomic) BoxListResponse_ResponseData commingSmallRedEnvelope;
@property (nonatomic) BoxListResponse_ResponseData userSendRedEnvelope;
@property (nonatomic) @? finishAnimationBlock;
@property (nonatomic) BOOL isAnchor;
@property (nonatomic) Q triggerTemporaryType;
@property (nonatomic) NSNumber followerNum;
@property (nonatomic) NSInteger tempStateType;
@property (nonatomic) q followerCountChange;
@property (nonatomic) BOOL autoShowRedEnvelope;
@property (nonatomic) Q hash;
@property (nonatomic) # superclass;
@property (nonatomic) NSString description;
@property (nonatomic) NSString debugDescription;
- (void)didFollowUser:secUserID:status:;
- (void)evaluateRiskAndProcess:message:;
- (BOOL)pr_isInMseqRoom;
- (void)setRemainCount:;
- (void)setRushOptCode:;
- (id)allPendingCount;
- (void)dealBunusLuckyBoxResultMessage:;
- (id)nextRedEnvelope;
- (BOOL)pr_isSelfAnchor;
- (void)setFollowerNum:;
- (void)setSkinManager:;
- (BOOL)allowGrab;
- (BOOL)autoShowRedEnvelope;
- (id)bunusLuckyResultBox;
- (void)calculateRemainTime:;
- (BOOL)closeRedEnvelopeView;
- (id)commingSmallRedEnvelope;
- (id)componentContext;
- (void)componentMount;
- (id)countTimer;
- (id)currentShowingRedEnvelope;
- (id)currentShowingSmallRedEnvelope;
- (void)dequeForCurrentShowingRedEnvelope;
- (void)didRemoveRedEnvelopes:;
- (void)didSetAttachingDIContext;
- (BOOL)didTrackRedEnvelopeInfo;
- (void)didUnfollowUser:secUserID:status:;
- (void)didUpdateRoom:;
- (void)dispatchFakeIncomeMessageWith:message:;
- (id)disposeMap;
- (void)fetchAllRedEnvelopesInRoom;
- (BOOL)filterRedEnvelope:;
- (id)finishAnimationBlock;
- (void)followAnchor;
- (void)followUser;
- (long long)followerCount;
- (long long)followerCountChange;
- (id)followerNum;
- (id)getHotsoonTextByModel:;
- (id)giftInterface;
- (void)handleReceivedRedEnvelope:isByHand:message:;
- (id)hasShowedResultBoxIds;
- (void)lookOthers;
- (id)mapModel:;
- (void)monitorBoxListWithStatus:listCount:error:;
- (void)monitorImEndRedPacketStatus:;
- (void)monitorImNewRedPacketStatus:;
- (void)monitorRushBoxWithStatus:error:box:result:;
- (BOOL)needUpdateRedEnvelopeView;
- (BOOL)numsOfRedEnvelopeIsEmpty;
- (void)observeValues:message:;
- (void)p_dealWithRedEnvelopResult:now:nativeTimeInterval:;
- (id)p_getHideNickNameFrom:;
- (id)p_getRandomRiskyAvatarUrl;
- (void)pr_followUser:secUserId:trackParams:;
- (void)pr_handleReceivedRedEnvelope:isByHand:message:;
- (void)preLoadOfficialImages:;
- (long long)receivedRedEnvelopDiamond;
- (id)redEnvelopeApi;
- (void)redEnvelopeDidFinish:;
- (id)redEnvelopeQueue;
- (void)refreshAnchor;
- (void)refreshGrabedUserList;
- (void)refreshGrabedUsersWithCompletion:;
- (void)refreshUser;
- (void)registerLiveFollowStatusChangedSignal;
- (id)remainCount;
- (void)removeRedEnvelope:;
- (void)requestReceiveWithBoxIds:result:count:;
- (id)roomModel;
- (id)rushOptCode;
- (void)sendFakePushMessageWith:sourceMessage:displayText:text:completion:;
- (id)sentFakeRedEnvelopesDict;
- (void)setAllPendingCount:;
- (void)setAutoShowRedEnvelope:;
- (void)setBunusLuckyResultBox:;
- (void)setCloseRedEnvelopeView:;
- (void)setCommingSmallRedEnvelope:;
- (void)setComponentContext:;
- (void)setCountTimer:;
- (void)setCurrentShowingRedEnvelope:;
- (void)setCurrentShowingSmallRedEnvelope:;
- (void)setDidTrackRedEnvelopeInfo:;
- (void)setDisposeMap:;
- (void)setFinishAnimationBlock:;
- (void)setFollowerCount:;
- (void)setFollowerCountChange:;
- (void)setGiftInterface:;
- (void)setHasShowedResultBoxIds:;
- (void)setNeedUpdateRedEnvelopeView:;
- (void)setNumsOfRedEnvelopeIsEmpty:;
- (void)setReceivedRedEnvelopDiamond:;
- (void)setRedEnvelopeApi:;
- (void)setRedEnvelopeQueue:;
- (void)setRoomModel:;
- (void)setSentFakeRedEnvelopesDict:;
- (void)setTempStateType:;
- (void)setTrackContext:;
- (void)setTriggerTemporaryType:;
- (void)setUserSendRedEnvelope:;
- (void)showLuckBoxResults:;
- (void)showRedEnvelopeViewWith:;
- (void)showingRedEnvelopeFromPreview:;
- (id)skinManager;
- (id)smallRedEnvelopAnimationViewInfo;
- (void)startRequestFollowInfo;
- (void)stopRequestFollowInfo;
- (void)subscribeBackEndData;
- (int)tempStateType;
- (void)tr_openPacketWithSuccess:;
- (id)trackContext;
- (void)trackForDismiss:WithReason:;
- (void)trackForRedEnvelopClickFromPreview;
- (void)trackForRedEnvelopeList:type:;
- (void)trackForSmallRedEnvelopeClickAfter;
- (unsigned long long)triggerTemporaryType;
- (BOOL)updateFollowStatus;
- (void)updateLuckyBoxStatusWithBoxId:boxStatus:;
- (id)userSendRedEnvelope;
- (long long)requestTime;
- (void)setRequestTime:;
- (void)dealloc;
- (BOOL)isAnchor;
- (void)setup;
- (void).cxx_destruct;
- (id)resultArray;
- (void)messageReceived:;
- (id)reaction;
- (void)setReaction:;
- (id)initWithRoom:;
- (void)setResultArray:;
- (void)setShowingToast:;
- (id)showingToast;
@end
