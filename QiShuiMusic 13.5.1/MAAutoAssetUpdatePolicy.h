@interface MAAutoAssetUpdatePolicy : NSObject
@property (nonatomic) NSString updatePolicyName;
@property (nonatomic) NSString assetType;
@property (nonatomic) NSArray categoryList;
@property (nonatomic) q checkForNewerIntervalSecs;
@property (nonatomic) q checkForNewerTimeoutSecs;
@property (nonatomic) BOOL checkForNewerAsUserInitiated;
@property (nonatomic) BOOL checkForNewerWithoutRampEnabled;
@property (nonatomic) BOOL newerFoundAutoDownloadPostponed;
@property (nonatomic) q newerFoundAutoDownloadJitterSecs;
@property (nonatomic) q newerFoundAutoDownloadTimeoutSecs;
@property (nonatomic) q newerFoundUserInitiatedDownloadTimeoutSecs;
@property (nonatomic) BOOL revokeIgnoredForUnlockedPurge;
@property (nonatomic) BOOL revokeIgnoredForLockedContent;
@property (nonatomic) BOOL revokeTriggersLockedPurge;
@property (nonatomic) BOOL allowInterestAcrossTermination;
@property (nonatomic) BOOL allowLockAcrossTermination;
@property (nonatomic) BOOL allowLockAcrossReboot;
@property (nonatomic) BOOL allowLockAcrossOTAUpdate;
@property (nonatomic) BOOL allowLockOfRevokedContent;
@property (nonatomic) BOOL allowLockWhenFilesystemSpaceCritical;
@property (nonatomic) q defaultUnlockAfterUsageSecs;
@property (nonatomic) q maximumUnlockAfterUsageSecs;
@property (nonatomic) q defaultPreventGarbageCollectionSecs;
@property (nonatomic) q maximumPreventGarbageCollectionSecs;
@property (nonatomic) NSDictionary additionalUpdatePolicyControl;
@property (nonatomic) BOOL allowAutoCheckForNewerWhenBatteryLow;
@property (nonatomic) BOOL allowAutoCheckForNewerWhenCPUHigh;
@property (nonatomic) BOOL allowAutoCheckForNewerOverExpensive;
@property (nonatomic) BOOL allowAutoDownloadWhenBatteryLow;
@property (nonatomic) BOOL allowAutoDownloadWhenCPUHigh;
@property (nonatomic) BOOL blockIfBeforeFirstUnlock;
@property (nonatomic) BOOL blockAutoCheckForNewerOverCellular;
@property (nonatomic) BOOL blockAutoDownloadOverCellular;
@property (nonatomic) BOOL blockUserInitiatedDownloadOverCellular;
@property (nonatomic) BOOL blockUserInitiatedDownloadWhenBatteryLow;
@property (nonatomic) BOOL blockUserInitiatedDownloadWhenCPUHigh;
@property (nonatomic) BOOL blockUserInitiatedDownloadOverExpensive;
@property (nonatomic) BOOL downloadWithoutPreferenceForWiFi;
@property (nonatomic) @ limitCellularByRestrictedTimePeriods;
@property (nonatomic) @ limitWiFiByRestrictedTimePeriods;
@property (nonatomic) @ limitCellularByFeeAgreement;
@property (nonatomic) @ limitByNetworkType;
@property (nonatomic) NSUUID assetAudienceUUID;
- (id)assetType;
- (BOOL)allowLockAcrossTermination;
- (void)setAllowLockAcrossTermination:;
- (long long)maximumPreventGarbageCollectionSecs;
- (BOOL)allowInterestAcrossTermination;
- (BOOL)downloadWithoutPreferenceForWiFi;
- (void)setCheckForNewerIntervalSecs:;
- (BOOL)revokeIgnoredForUnlockedPurge;
- (BOOL)blockAutoCheckForNewerOverCellular;
- (BOOL)allowAutoDownloadWhenCPUHigh;
- (long long)checkForNewerIntervalSecs;
- (long long)newerFoundAutoDownloadJitterSecs;
- (BOOL)allowLockOfRevokedContent;
- (long long)checkForNewerTimeoutSecs;
- (void)setBlockAutoDownloadOverCellular:;
- (id)limitCellularByRestrictedTimePeriods;
- (void)setCheckForNewerWithoutRampEnabled:;
- (BOOL)newerFoundAutoDownloadPostponed;
- (void)setRevokeIgnoredForUnlockedPurge:;
- (BOOL)allowAutoCheckForNewerWhenCPUHigh;
- (void)setAllowAutoCheckForNewerWhenCPUHigh:;
- (BOOL)allowLockAcrossOTAUpdate;
- (id)limitCellularByFeeAgreement;
- (id)assetAudienceUUID;
- (long long)maximumUnlockAfterUsageSecs;
- (long long)newerFoundAutoDownloadTimeoutSecs;
- (long long)defaultPreventGarbageCollectionSecs;
- (id)limitWiFiByRestrictedTimePeriods;
- (id)categoryList;
- (long long)defaultUnlockAfterUsageSecs;
- (void)setAllowLockAcrossReboot:;
- (void)setMaximumPreventGarbageCollectionSecs:;
- (BOOL)allowAutoCheckForNewerWhenBatteryLow;
- (id)initWithCoder:;
- (BOOL)checkForNewerWithoutRampEnabled;
- (void)setBlockUserInitiatedDownloadWhenCPUHigh:;
- (void)setAllowAutoDownloadWhenBatteryLow:;
- (BOOL)blockUserInitiatedDownloadOverExpensive;
- (void)setAllowAutoCheckForNewerWhenBatteryLow:;
- (void)setDefaultPreventGarbageCollectionSecs:;
- (id)limitByNetworkType;
- (id)initUpdatePolicy:forAssetType:;
- (BOOL)blockIfBeforeFirstUnlock;
- (void)setNewerFoundUserInitiatedDownloadTimeoutSecs:;
- (void)setAllowLockWhenFilesystemSpaceCritical:;
- (void)setAllowLockAcrossOTAUpdate:;
- (BOOL)allowLockAcrossReboot;
- (void)encodeWithCoder:;
- (BOOL)blockUserInitiatedDownloadWhenBatteryLow;
- (BOOL)allowAutoDownloadWhenBatteryLow;
- (void)setLimitCellularByRestrictedTimePeriods:;
- (void)setBlockUserInitiatedDownloadWhenBatteryLow:;
- (long long)newerFoundUserInitiatedDownloadTimeoutSecs;
- (id)summary;
- (void)setLimitCellularByFeeAgreement:;
- (void)setBlockUserInitiatedDownloadOverExpensive:;
- (void)setBlockAutoCheckForNewerOverCellular:;
- (void)setAssetAudienceUUID:;
- (void)setRevokeIgnoredForLockedContent:;
- (void).cxx_destruct;
- (BOOL)blockUserInitiatedDownloadOverCellular;
- (void)setDownloadWithoutPreferenceForWiFi:;
- (BOOL)blockUserInitiatedDownloadWhenCPUHigh;
- (void)setNewerFoundAutoDownloadJitterSecs:;
- (void)setLimitByNetworkType:;
- (void)setDefaultUnlockAfterUsageSecs:;
- (id)description;
- (void)setCheckForNewerAsUserInitiated:;
- (void)setBlockUserInitiatedDownloadOverCellular:;
- (void)setAllowAutoDownloadWhenCPUHigh:;
- (void)setAllowAutoCheckForNewerOverExpensive:;
- (BOOL)checkForNewerAsUserInitiated;
- (void)setAdditionalUpdatePolicyControl:;
- (void)setMaximumUnlockAfterUsageSecs:;
- (id)additionalUpdatePolicyControl;
- (void)setNewerFoundAutoDownloadTimeoutSecs:;
- (void)setCheckForNewerTimeoutSecs:;
- (void)setNewerFoundAutoDownloadPostponed:;
- (void)setBlockIfBeforeFirstUnlock:;
- (void)setAllowLockOfRevokedContent:;
- (void)setRevokeTriggersLockedPurge:;
- (BOOL)revokeIgnoredForLockedContent;
- (BOOL)allowLockWhenFilesystemSpaceCritical;
- (BOOL)revokeTriggersLockedPurge;
- (void)setAllowInterestAcrossTermination:;
- (void)setLimitWiFiByRestrictedTimePeriods:;
- (BOOL)allowAutoCheckForNewerOverExpensive;
- (BOOL)blockAutoDownloadOverCellular;
- (id)updatePolicyName;
+ (BOOL)supportsSecureCoding;
+ (id)activityIntervalString:;
@end
