@interface MTLRenderPipelineDescriptor : NSObject
@property (nonatomic) NSString label;
@property (nonatomic) <MTLFunction> vertexFunction;
@property (nonatomic) <MTLFunction> fragmentFunction;
@property (nonatomic) MTLVertexDescriptor vertexDescriptor;
@property (nonatomic) Q sampleCount;
@property (nonatomic) Q rasterSampleCount;
@property (nonatomic) BOOL alphaToCoverageEnabled;
@property (nonatomic) BOOL alphaToOneEnabled;
@property (nonatomic) BOOL rasterizationEnabled;
@property (nonatomic) Q maxVertexAmplificationCount;
@property (nonatomic) MTLRenderPipelineColorAttachmentDescriptorArray colorAttachments;
@property (nonatomic) Q depthAttachmentPixelFormat;
@property (nonatomic) Q stencilAttachmentPixelFormat;
@property (nonatomic) Q inputPrimitiveTopology;
@property (nonatomic) Q tessellationPartitionMode;
@property (nonatomic) Q maxTessellationFactor;
@property (nonatomic) BOOL tessellationFactorScaleEnabled;
@property (nonatomic) Q tessellationFactorFormat;
@property (nonatomic) Q tessellationControlPointIndexType;
@property (nonatomic) Q tessellationFactorStepFunction;
@property (nonatomic) Q tessellationOutputWindingOrder;
@property (nonatomic) MTLPipelineBufferDescriptorArray vertexBuffers;
@property (nonatomic) MTLPipelineBufferDescriptorArray fragmentBuffers;
@property (nonatomic) BOOL supportIndirectCommandBuffers;
@property (nonatomic) NSArray binaryArchives;
@property (nonatomic) NSArray vertexPreloadedLibraries;
@property (nonatomic) NSArray fragmentPreloadedLibraries;
@property (nonatomic) MTLLinkedFunctions vertexLinkedFunctions;
@property (nonatomic) MTLLinkedFunctions fragmentLinkedFunctions;
@property (nonatomic) BOOL supportAddingVertexBinaryFunctions;
@property (nonatomic) BOOL supportAddingFragmentBinaryFunctions;
@property (nonatomic) Q maxVertexCallStackDepth;
@property (nonatomic) Q maxFragmentCallStackDepth;
- (void)setMaxFragmentCallStackDepth:;
- (void)setSupportAddingVertexBinaryFunctions:;
- (id)fragmentPreloadedLibraries;
- (unsigned long long)maxVertexCallStackDepth;
- (unsigned long long)maxFragmentCallStackDepth;
- (id)vertexPreloadedLibraries;
- (BOOL)supportAddingVertexBinaryFunctions;
- (void)setMaxVertexCallStackDepth:;
- (void)setSupportAddingFragmentBinaryFunctions:;
- (BOOL)supportAddingFragmentBinaryFunctions;
- (void)setVertexPreloadedLibraries:;
- (void)setFragmentPreloadedLibraries:;
- (void)reset;
- (id)copyWithZone:;
+ (id)allocWithZone:;
+ (id)alloc;
@end
