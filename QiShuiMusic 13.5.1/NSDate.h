@interface NSDate : NSObject
@property (nonatomic) Q hash;
@property (nonatomic) # superclass;
@property (nonatomic) NSString description;
@property (nonatomic) NSString debugDescription;
@property (nonatomic) Q hash;
@property (nonatomic) # superclass;
@property (nonatomic) NSString description;
@property (nonatomic) NSString debugDescription;
@property (nonatomic) double bmAbsoluteTime;
@property (nonatomic) Q hash;
@property (nonatomic) # superclass;
@property (nonatomic) NSString description;
@property (nonatomic) NSString debugDescription;
@property (nonatomic) Q bls_machContinuousTime;
@property (nonatomic) Q hash;
@property (nonatomic) # superclass;
@property (nonatomic) NSString description;
@property (nonatomic) NSString debugDescription;
@property (nonatomic) EFSQLBinding ef_SQLBinding;
@property (nonatomic) Q hash;
@property (nonatomic) # superclass;
@property (nonatomic) NSString description;
@property (nonatomic) NSString debugDescription;
@property (nonatomic) NSString ef_SQLExpression;
@property (nonatomic) Q hash;
@property (nonatomic) # superclass;
@property (nonatomic) NSString description;
@property (nonatomic) NSString debugDescription;
@property (nonatomic) BOOL ic_isToday;
@property (nonatomic) BOOL ic_isYesterday;
@property (nonatomic) NSDate ic_startOfDay;
@property (nonatomic) NSDate ic_endOfDay;
@property (nonatomic) NSString ic_iso8601Date;
@property (nonatomic) NSString ic_shortFormattedDate;
@property (nonatomic) NSString ic_briefFormattedDate;
@property (nonatomic) NSString ic_briefFormattedDateForAccessibility;
@property (nonatomic) NSString ic_localDateWithSeconds;
@property (nonatomic) NSDate ic_truncated;
@property (nonatomic) BOOL vk_isToday;
@property (nonatomic) BOOL vk_isYesterday;
@property (nonatomic) NSString vk_shortFormattedDate;
@property (nonatomic) NSString vk_briefFormattedDate;
@property (nonatomic) NSString vk_briefFormattedDateForAccessibility;
@property (nonatomic) NSString vk_localDateWithSeconds;
@property (nonatomic) BOOL safari_isInToday;
@property (nonatomic) NSDate safari_startOfDay;
@property (nonatomic) BOOL safari_isNowOrInRecentPast;
@property (nonatomic) double safari_timeIntervalUntilNow;
@property (nonatomic) Q hash;
@property (nonatomic) # superclass;
@property (nonatomic) NSString description;
@property (nonatomic) NSString debugDescription;
@property (nonatomic) double timeIntervalSinceReferenceDate;
- (long long)csj_day;
- (id)csj_ISO8601FormatedString;
- (id)csj_dateByAddingDays:;
- (id)csj_dateByAddingHours:;
- (id)csj_dateByAddingMinutes:;
- (id)csj_dateByAddingMonths:;
- (id)csj_dateByAddingSeconds:;
- (id)csj_dateByAddingWeeks:;
- (id)csj_dateByAddingYears:;
- (long long)csj_hour;
- (BOOL)csj_isEarlierThanDate:;
- (BOOL)csj_isLaterThanDate:;
- (BOOL)csj_isSameDay:;
- (id)csj_lastHour;
- (long long)csj_minute;
- (long long)csj_month;
- (id)csj_nextHour;
- (long long)csj_second;
- (id)csj_stringWithFormat:;
- (id)csj_stringWithFormat:timeZone:locale:;
- (long long)csj_weekday;
- (long long)csj_year;
- (id)csj_zeroOfHour;
- (id)toJSONString;
- (double)DateToUptime;
- (long long)tvl_relativeTimestampSinceDate:;
- (long long)tvl_timestamp;
- (id)tsa_stringValueISO8601Date2Formatter;
- (id)archivedWCTValue;
- (id)ieslivesaas_dateWithOneDayLater;
- (id)ieslivesaas_dateAtStartOfDay;
- (id)ieslivesaas_dateByAddingHours:;
- (id)ieslivesaas_dateByAddingMinutes:;
- (id)ieslivesaas_dateByAddingSeconds:;
- (BOOL)ieslivesaas_isEarlierThanDate:;
- (BOOL)ieslivesaas_isLaterThanDate:;
- (BOOL)ieslivesaas_isToday;
- (BOOL)ieslivesaas_isTodayWithDate:;
- (id)ieslivesaas_localTimeZoneDate;
- (id)hts_dateAtStartOfDay;
- (id)hts_dateByAddingHours:;
- (id)hts_dateByAddingMinutes:;
- (id)hts_dateByAddingSeconds:;
- (id)hts_dateWithOneDayLater;
- (BOOL)hts_isEarlierThanDate:;
- (BOOL)hts_isLaterThanDate:;
- (BOOL)hts_isTodayWithDate:;
- (id)hts_localTimeZoneDate;
- (BOOL)live_isEqualDate:offsetDay:;
- (BOOL)live_isToday;
- (long long)btd_day;
- (id)btd_ISO8601FormatedString;
- (id)btd_dateByAddingDays:;
- (id)btd_dateByAddingHours:;
- (id)btd_dateByAddingMinutes:;
- (id)btd_dateByAddingMonths:;
- (id)btd_dateByAddingSeconds:;
- (id)btd_dateByAddingWeeks:;
- (id)btd_dateByAddingYears:;
- (long long)btd_hour;
- (BOOL)btd_isEarlierThanDate:;
- (BOOL)btd_isLaterThanDate:;
- (BOOL)btd_isSameDay:;
- (long long)btd_minute;
- (long long)btd_month;
- (long long)btd_second;
- (id)btd_stringWithFormat:;
- (id)btd_stringWithFormat:timeZone:locale:;
- (long long)btd_weekday;
- (long long)btd_year;
- (id)replacementObjectForPortCoder:;
- (id)initWithCoder:;
- (void)encodeWithCoder:;
- (Class)classForCoder;
- (id)dateWithCalendarFormat:timeZone:;
- (id)descriptionWithCalendarFormat:timeZone:locale:;
- (id)_web_RFC1123DateString;
- (long long)_web_compareDay:;
- (BOOL)_web_isToday;
- (double)geo_julianDay;
- (double)geo_hoursAndMinutes;
- (double)bucketToRoundingFactor:;
- (double)timeIntervalSince1970WithBucket:;
- (int)daysSince1970;
- (BOOL)isAfterDate:;
- (BOOL)isBeforeDate:;
- (id)bs_dateByAddingDays:;
- (id)cd_dateWithFloorForAlignment:;
- (id)cd_dateWithCeilingForAlignment:;
- (id)cd_dateWithFloorForAlignment:withOffset:inTimeZone:;
- (id)cd_dateWithCeilingForAlignment:withOffset:inTimeZone:;
- (double)timeSinceMidnight:;
- (id)floorDateWithTotalSlotsInDay:;
- (int)slotFromMidnightWithTotalSlotsInDay:;
- (id)dk_dedup;
- (id)dedup;
- (void)ck_bindInStatement:atIndex:;
- (double)cksqlcs_doubleBindingValue:;
- (id)_intents_readableTitleWithLocalizer:metadata:;
- (id)_intents_encodeWithJSONEncoder:codableDescription:;
- (id)_intents_readableTitleWithLocalizer:metadata:timeZone:;
- (id)initWithBMAbsoluteTime:;
- (double)bmAbsoluteTime;
- (BOOL)aaf_isRelative;
- (BOOL)aaf_isToday;
- (BOOL)aaf_isTodayWithCalendar:;
- (id)dayComponentsWithCalendar:;
- (id)ak_serverFriendlyString;
- (void)sqliteBind:index:;
- (id)bls_loggingString;
- (id)bls_shortLoggingString;
- (unsigned long long)bls_machContinuousTime;
- (id)bls_initWithMachContinuousTime:;
- (id)bls_initWithBSContinuousMachTime:;
- (long long)bls_compare:withEpsilon:;
- (BOOL)bls_isOnOrAfter:andOnOrBefore:;
- (BOOL)bls_isOnOrAfter:andOnOrBefore:withEpsilon:;
- (id)plistArchiveWithCPLArchiver:;
- (id)initWithCPLArchiver:;
- (id)sg_descriptionForMimeHeaders;
- (BOOL)isDateRelative;
- (BOOL)isEarlierThanOrEqualTo:;
- (id)_axRecursivelyReconstitutedRepresentationFromPropertyListWithError:;
- (id)_axRecursivelyPropertyListCoercedRepresentationWithError:;
- (id)localizedStringWithFormat:;
- (BOOL)isAfterDate:;
- (BOOL)isBeforeDate:;
- (id)dateForStartOfDayInTimeZone:;
- (id)dateForEndOfDayInTimeZone:;
- (id)dateAtHour:minute:second:inTimeZone:;
- (id)dateWithoutTimeComponentsInTimeZone:;
- (void)_performBlockBehindDispatchSync:inTimeZone:;
- (id)dateInTimeZone:fromTimeZone:;
- (id)components:forDayInTimeZone:;
- (id)dateForDayInTimeZone:;
- (id)ek_ios_dateForEndOfDayInTimeZone:;
- (BOOL)CalIsBetweenStartDate:endDate:;
- (BOOL)CalIsBeforeDate:;
- (BOOL)CalIsBeforeOrSameAsDate:;
- (BOOL)CalIsAfterDate:;
- (BOOL)CalIsAfterOrSameAsDate:;
- (id)dateByAddingCalSimulatedOffset;
- (id)dateBySubtractingCalSimulatedOffset;
- (id)toISO8601String;
- (id)allComponentsInCalendar:;
- (id)dateOnlyComponentsInCalendar:;
- (id)timeOnlyComponentsInCalendar:;
- (id)dateOnlyByTranslatingFrom:toCalendar:;
- (long long)yearInCalendar:;
- (long long)monthInCalendar:;
- (long long)weekInCalendar:;
- (long long)dayInCalendar:;
- (long long)weekdayInCalendar:;
- (long long)hourInCalendar:;
- (long long)minuteInCalendar:;
- (long long)secondInCalendar:;
- (id)dateRemovingTimeComponentsInCalendar:;
- (id)dateByAddingMinutes:inCalendar:;
- (id)dateByAddingHours:inCalendar:;
- (id)dateByAddingDays:inCalendar:;
- (id)dateByAddingWeeks:inCalendar:;
- (id)dateByAddingMonths:inCalendar:;
- (id)dateByAddingYears:inCalendar:;
- (id)CalDateByComponentwiseAddingSeconds:inCalendar:;
- (id)CalDateByComponentwiseAddingMinutes:inCalendar:;
- (id)CalDateByComponentwiseAddingHours:inCalendar:;
- (id)CalDateByComponentwiseAddingComponents:inCalendar:;
- (id)roundSecondsDownInCalendar:;
- (id)roundSecondsAndMinutesDownInCalendar:;
- (id)roundSecondsAndMinutesUpInCalendar:;
- (id)roundUpOneSecondIfAt59InCalendar:;
- (id)subtractOneSecondIfAt0InCalendar:;
- (id)roundToCurrentDayInCalendar:;
- (id)roundToCurrentWeekInCalendar:withFirstWeekdayIndex:;
- (id)roundToCurrentMondayInCalendar:;
- (id)roundToCurrentMonthInCalendar:;
- (id)roundToCurrentYearInCalendar:;
- (long long)compareDateIgnoringTimeComponents:inCalendar:;
- (BOOL)isSameDayAsDate:inCalendar:;
- (BOOL)isSameMonthAsDate:inCalendar:;
- (BOOL)isSameWeekAsDate:inCalendar:;
- (BOOL)isSameYearAsDate:inCalendar:;
- (BOOL)isEqualToDateIgnoringTimeComponents:inCalendar:;
- (BOOL)isBeforeDayForDate:inCalendar:;
- (BOOL)isBeforeOrSameDayAsDate:inCalendar:;
- (BOOL)isAfterDayForDate:inCalendar:;
- (BOOL)isAfterOrSameDayAsDate:inCalendar:;
- (BOOL)isTodayInCalendar:;
- (id)CalDateRoundedDownToNearestMinuteIncrement:inCalendar:;
- (id)dateRoundedToNearestFifteenMinutesInCalendar:;
- (id)dateRoundedDownToNearestFiveMinutesInCalendar:;
- (id)dateRoundedToHourOnSameDayInCalendar:;
- (id)dateRoundedToStartOfNextDayInCalendar:;
- (void)printComparisonToDate:;
- (id)localizedMonthShortened:;
- (id)localizedMonthAndYearStringShortened:;
- (id)localizedMonthAndDayStringShortened:;
- (id)localizedYearMonthAndDayStringShortened:;
- (id)localizedWeekdayMonthDayYearStringShortened:;
- (id)localizedWeekdayMonthYearStringShortened:;
- (id)localizedWeekdayMonthDayStringShortened:;
- (id)localizedDateStringWithTemplate:;
- (id)localizedWeekNumber;
- (id)localizedRelativeDateStringShortened:;
- (id)localizedRelativeDateStringShortened:lowercase:;
- (id)_stringWithUseAbbreviatedFormats:lowerCase:;
- (id)timeStringAlwaysIncludeMinutes:;
- (long long)midnightOffsetMinutes:;
- (id)dateRemovingComponents:inCalendar:;
- (id)localizedYear;
- (id)localizedFullMonth;
- (id)localizedDayOfMonth;
- (id)localizedFullDateAndTime;
- (id)localizedShortDateAndTime;
- (id)localizedFullDate;
- (id)localizedLongDate;
- (id)localizedAbbrevDate;
- (id)localizedAbbrevDateInTimeZone:;
- (id)localizedDayOfWeekWithAbbrevDateInTimeZone:;
- (id)localizedShortDate;
- (id)localizedFullYearMonth;
- (id)localizedFullMonthWeekdayDay;
- (id)localizedAbbrevMonthWeekdayDay;
- (id)localizedFullMonthWithDay;
- (id)localizedAbbrevMonthWithDay;
- (id)localizedAbbrevMonthWithDayInTimeZone:;
- (id)localizedShortMonthWithDay;
- (id)localizedMonthWithDayWithPreferredShortening;
- (id)localizedFullStandaloneWeekday;
- (id)localizedShortStandaloneWeekday;
- (id)localizedFullWeekdayWithDayOfMonth;
- (id)localizedAbbrevWeekdayWithDayOfMonth;
- (id)rangeOfDayInLocalizedDateString:;
- (id)localizedAbbrevWeekdayWithDayOfMonthPreferWeekdayFirstForEnglish;
- (id)localizedAbbrevMonthWithDayRangeToDate:;
- (id)localizedAbbrevStandaloneMonth;
- (id)localizedTime;
- (id)localizedShortTime;
- (id)localizedShortTimeInTimeZone:;
- (id)localizedHour;
- (id)localizedHourInTimeZone:;
- (id)localizedHourMinutesWithoutAMPM;
- (id)localizedHourMinutesWithoutAMPMInTimeZone:;
- (id)localizedHourWithoutAMPM;
- (id)localizedStringForEventTime;
- (id)localizedStringForEventTimeInTimeZone:;
- (id)localizedStringWithFormat:timeZone:;
- (BOOL)isWholeHour;
- (void)af_enumerateDigestibleChunksWithOptions:usingBlock:;
- (BOOL)_af_isSameDayAsDate:;
- (BOOL)af_isToday;
- (BOOL)af_isTomorrow;
- (void)ml_bindToSQLiteStatement:atPosition:;
- (id)ml_stringValueForSQL;
- (id)ec_descriptionForMimeHeaders;
- (id)ec_integerDate;
- (id)mf_descriptionForMimeHeaders;
- (id)mf_replyPrefixForSender:;
- (id)ef_SQLIsolatedExpression;
- (id)ef_SQLExpression;
- (void)ef_renderSQLExpressionInto:;
- (BOOL)ef_isLaterThanDate:;
- (BOOL)ef_isEarlierThanDate:;
- (BOOL)ef_isDateNextDayOrLater:;
- (BOOL)ef_isMoreThanTimeIntervalAgo:;
- (BOOL)ef_isEarlierThanOrEqualDate:;
- (BOOL)ef_isLaterThanOrEqualDate:;
- (BOOL)ef_isEarlierThanNow;
- (double)ef_timeIntervalSinceDate:;
- (id)ef_dateWithTruncatedSeconds;
- (id)ef_SQLBinding;
- (id)ic_truncated;
- (BOOL)ic_isEarlierThanDate:;
- (BOOL)ic_isLaterThanDate:;
- (BOOL)ic_isLaterThanUnitsAgo:value:;
- (id)ic_iso8601Date;
- (BOOL)ic_isToday;
- (BOOL)ic_isYesterday;
- (id)ic_shortFormattedDate;
- (id)ic_briefFormattedDate;
- (id)ic_briefFormattedDateForAccessibility;
- (id)ic_localDateWithSeconds;
- (id)ic_startOfDay;
- (id)ic_endOfDay;
- (BOOL)ic_isSameDayAsDate:;
- (id)ic_briefFormattedDate:;
- (BOOL)ic_isWithinInclusiveDayIntervalBeginning:ending:;
- (BOOL)ic_isWithinSameMonth:;
- (BOOL)ic_isWithinSameYear:;
- (BOOL)vk_isToday;
- (BOOL)vk_isYesterday;
- (id)vk_localDateWithSeconds;
- (id)vk_shortFormattedDate;
- (id)vk_briefFormattedDate;
- (id)vk_briefFormattedDateForAccessibility;
- (id)vk_briefFormattedDate:;
- (BOOL)vk_isEarlierThanDate:;
- (BOOL)vk_isLaterThanDate:;
- (double)safari_timeIntervalUntilNow;
- (BOOL)safari_isInclusivelyBetweenDate:andDate:;
- (id)safari_startOfDay;
- (id)safari_stringsFromDateForLocaleIdentifiers:;
- (long long)safari_numberOfWeeksUntilDate:;
- (BOOL)safari_isInToday;
- (BOOL)safari_isInSameDayAsDate:;
- (BOOL)safari_isNowOrInRecentPast;
- (id)_safari_stringWithDashSeparatorWithDateFormatter:;
- (id)cat_internetTimeString;
- (BOOL)isToday;
- (BOOL)isArchivable_im;
- (long long)__im_nanosecondTimeInterval;
- (long long)__im_nanosecondTimeIntervalSinceEpochTime;
- (BOOL)__im_isApproximatelyEqualToDate:;
- (long long)differenceFromDate:;
- (long long)hoursDifferenceFromDate:;
- (long long)minutesDifferenceFromDate:;
- (long long)secondsDifferenceFromDate:;
- (BOOL)__im_isEqualToSeconds:;
- (id)__im_encodeAsString;
- (id)__im_dateByAddingDays:;
- (id)vs_dateRoundedToDay;
- (id)vs_dateIncrementedByDays:;
- (id)vs_dateIncrementedByMinutes:;
- (BOOL)vs_isAfter:;
- (BOOL)vs_isBefore:;
- (id)mt_millisecondsSince1970;
- (long long)mt_longMillisecondsSince1970;
- (id)initWithXPCEncoding:;
- (id)copyXPCEncoding;
- (id)ISO8601String;
- (long long)fm_epoch;
- (id)fm_epochObject;
- (BOOL)isNSDate__;
- (id)initWithString:;
- (id)initWithCoder:;
- (unsigned long long)hash;
- (id)earlierDate:;
- (id)initWithDate:;
- (id)descriptionWithLocale:;
- (void)encodeWithCoder:;
- (unsigned long long)_cfTypeID;
- (long long)compare:;
- (double)timeIntervalSinceReferenceDate;
- (id)description;
- (double)timeIntervalSince1970;
- (id)laterDate:;
- (id)initWithTimeIntervalSinceReferenceDate:;
- (BOOL)isEqual:;
- (id)copyWithZone:;
- (double)timeIntervalSinceDate:;
- (id)initWithTimeIntervalSinceNow:;
- (BOOL)isEqualToDate:;
- (id)addTimeInterval:;
- (id)dateByAddingTimeInterval:;
- (double)timeIntervalSinceNow;
- (id)initWithTimeIntervalSince1970:;
- (id)initWithTimeInterval:sinceDate:;
- (BOOL)isInToday;
- (BOOL)isInTomorrow;
- (BOOL)isInYesterday;
- (BOOL)isInSameDayAsDate:;
- (BOOL)isEqual:toUnitGranularity:;
- (long long)compare:toUnitGranularity:;
+ (id)csj_dateWithISO8601FormatedString:;
+ (id)csj_dateWithString:format:;
+ (id)csj_dateWithString:format:timeZone:locale:;
+ (id)csj_dateWithYear:month:day:hour:minute:second:;
+ (unsigned long long)csj_daysInMonth:year:;
+ (id)csj_zeroOfDate;
+ (id)dateFromJSONString:;
+ (long long)tvl_currentTimestamp;
+ (id)tvl_dateWithTimestamp:;
+ (id)tsa_ISO8601Date2Formatter;
+ (id)tsa_clockSkewFixedDate;
+ (void)awe_adjustWithServerTime:;
+ (long long)awe_currentServerTime;
+ (id)hmd_accurateDate;
+ (int)columnTypeForWCDB;
+ (id)unarchiveWithWCTValue:;
+ (void)teen_adjustWithServerTime:;
+ (long long)teen_currentServerTime;
+ (id)bdas_dateStringFormInterval:;
+ (BOOL)hts_isTodayWithTimestamp:;
+ (id)btd_dateUsingCalendarWithString:format:;
+ (id)btd_dateUsingCalendarWithString:format:timeZone:locale:;
+ (id)btd_dateWithISO8601FormatedString:;
+ (id)btd_dateWithString:format:;
+ (id)btd_dateWithString:format:timeZone:locale:;
+ (id)btd_dateWithYear:month:day:hour:minute:second:;
+ (unsigned long long)btd_daysInMonth:year:;
+ (BOOL)btd_optimizeDateFormatterEnabled;
+ (long long)btd_uptime;
+ (void)setBtd_optimizeDateFormatterEnabled:;
+ (id)dateWithNaturalLanguageString:date:locale:;
+ (BOOL)_subclassesMustBeExplicitlyMentionedWhenDecoded;
+ (id)dateWithNaturalLanguageString:;
+ (id)dateWithNaturalLanguageString:locale:;
+ (id)geo_dateWithJulianDay:;
+ (id)_geo_calendar;
+ (int)daysSince1970;
+ (id)dateForDaysSince1970:;
+ (id)_intents_decodeWithJSONDecoder:codableDescription:from:;
+ (id)dateWithBMAbsoluteTime:;
+ (id)_srGetStringFromDate:;
+ (id)ams_momentInUTCGregorianAtYear:month:day:hour:minute:second:;
+ (id)newFromSqliteValue:;
+ (id)newFromSqliteStatement:atIndex:;
+ (id)cpa_yearsAgo:;
+ (id)cpa_daysAgo:;
+ (id)cpa_hoursAgo:;
+ (id)cpa_minutesAgo:;
+ (id)cpa_secondsAgo:;
+ (id)calGMT;
+ (id)CalSimulatedDateForNow;
+ (id)CalDateForNow;
+ (id)_nowComponents;
+ (id)_todayComponents;
+ (id)CalDateForBeginningOfToday;
+ (id)CalDateForEndOfToday;
+ (id)_tomorrowComponents;
+ (id)CalDateForBeginningOfTomorrow;
+ (id)CalDateForEndOfTomorrow;
+ (id)dateFromISO8601String:;
+ (id)dateFromISO8601String:inTimeZone:;
+ (id)dateWithDatePartFromDate:timePartFromDate:inCalendar:;
+ (id)nextRoundedHour;
+ (id)CalTimeRangeStringWithStart:end:;
+ (long long)daysSpannedFromStartDate:toEndDate:allDay:inCalendar:;
+ (id)ef_tomorrowMorning;
+ (id)ef_localCombinedDate:time:timeZone:;
+ (id)ef_lastWeekMidnight;
+ (id)ef_morning;
+ (id)ef_tonight;
+ (id)ef_inOneHour;
+ (id)ef_tomorrowNight;
+ (id)ef_nextWeekMorning;
+ (id)ef_midnightNdaysAgo:;
+ (id)ef_midnightInNdays:;
+ (id)ef_dateHoursAgo:;
+ (id)ef_thisWeekday:hour:minute:second:;
+ (id)_ef_nightDateComponents;
+ (id)_ef_morningDateComponents;
+ (id)_ef_gregorianCalendarForTimeZone:;
+ (id)mf_copyDateInCommonFormatsWithString:;
+ (id)mf_copyLenientDateInCommonFormatsWithString:;
+ (id)ic_modificationDateForNoteBeingEdited;
+ (void)safari_dateFromNTPServerWithTimeout:completionHandler:;
+ (double)safari_timeIntervalSinceSystemStart;
+ (id)safari_dateOfMidnightNumberOfDaysAgo:;
+ (id)cat_dateWithObject:;
+ (id)cat_RFC3339Formatters;
+ (id)cat_dateWithInternetTimeString:;
+ (id)__im_dateWithNanosecondTimeIntervalSinceReferenceDate:;
+ (id)__im_dateWithCurrentServerTime;
+ (BOOL)useCourierTime;
+ (id)__im_clampDate:;
+ (id)__im_iMessageDateFromTimeStamp:;
+ (id)__im_serialization_dateFormatter;
+ (id)__im_dateFromEncodedString:;
+ (id)vs_dateAccessQueue;
+ (id)vs_recordedDates;
+ (void)vs_startRecordingDates;
+ (id)vs_stopRecordingDates;
+ (id)vs_currentDate;
+ (id)mt_millisecondsSince1970;
+ (long long)mt_longMillisecondsSince1970;
+ (id)fm_dateFromEpoch:;
+ (id)now;
+ (id)allocWithZone:;
+ (BOOL)supportsSecureCoding;
+ (id)distantFuture;
+ (id)date;
+ (id)distantPast;
+ (double)timeIntervalSinceReferenceDate;
+ (id)dateWithTimeIntervalSinceReferenceDate:;
+ (id)dateWithTimeIntervalSinceNow:;
+ (id)dateWithTimeIntervalSince1970:;
+ (id)dateWithTimeInterval:sinceDate:;
+ (id)dateWithDate:;
+ (id)dateWithString:;
@end
