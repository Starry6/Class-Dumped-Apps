@interface IESBridgeAuthManager : NSObject
@property (nonatomic) NSString namespace;
@property (nonatomic) BDXBridgeAuthConfigPackage authConfigPackage;
@property (nonatomic) NSDictionary authRules;
@property (nonatomic) NSMutableSet privateDomains;
@property (nonatomic) {_opaque_pthread_rwlock_t=q[192c]} privateDomainsLock;
@property (nonatomic) NSLock methodSetLock;
@property (nonatomic) NSMutableSet publicMethods;
@property (nonatomic) NSMutableSet protectedMethods;
@property (nonatomic) NSMutableSet privateMethods;
@property (nonatomic) NSMutableSet secureMethods;
@property (nonatomic) NSMutableDictionary methodAuths;
@property (nonatomic) NSRecursiveLock methodAuthsLock;
@property (nonatomic) IESBridgeAuthPackage authPackage;
@property (nonatomic) BOOL fetchedAuthInfos;
@property (nonatomic) BOOL fetchingAuthInfos;
@property (nonatomic) BOOL usedAuthInfosBeforeConfiguring;
@property (nonatomic) @? monitorHybridBlock;
@property (nonatomic) BOOL bypassJSBAuthEnabled;
@property (nonatomic) BOOL builtinAuthInfosEnabled;
@property (nonatomic) BOOL hasCachedAuthInfos;
@property (nonatomic) <IESBridgeAuthManagerDelegate> delegate;
@property (nonatomic) NSArray innerDomains;
- (id)methodAuthsLock;
- (void)setMethodAuths:;
- (BOOL)isAuthorizedWithBridgeAuthInfo:;
- (void)setAuthPackage:;
- (void)updateAuthRules;
- (void)addPrivateDomains:;
- (id)authConfigPackage;
- (unsigned long long)authGroupForURL:;
- (id)authPackage;
- (id)authRules;
- (void)endMonitorEvent:;
- (id)getAuthorizedControlManager:invokeUrl:appID:;
- (id)getFeAuthConfig:appID:;
- (BOOL)hasCachedAuthInfos;
- (BOOL)hasFetchedAuthInfos;
- (BOOL)hasUsedAuthInfosBeforeConfiguring;
- (id)innerDomains;
- (id)internalAuthorizedAppIDWithWebView:appID:method:invokeUrl:;
- (id)internalAuthorizedUrlWithMethod:invokeUrl:needCompatible:;
- (id)internalAuthorizedWebView:appID:method:invokeUrl:messageUUID:;
- (id)internalStandardWebAuthorizedWithInput:;
- (id)internalStandardWebAuthorizedWithWebView:method:invokeUrl:appID:;
- (BOOL)isAuthorizedForWebView:appID:method:invokeUrl:messageUUID:fromSource:;
- (BOOL)isAuthorizedForWebView:appID:method:invokeUrl:messageUUID:fromSource:frameURL:isMainFrame:;
- (BOOL)isAuthorizedMethod:forURL:fromEngineView:;
- (BOOL)isAuthorizedMethod:forURL:fromSource:fromEngineView:;
- (BOOL)isBuiltinAuthInfosEnabled;
- (BOOL)isBypassJSBAuthEnabled;
- (BOOL)isFetchingAuthInfos;
- (BOOL)isInDomainsWithURL:;
- (BOOL)isInPrivateDomainsWithURL:url:;
- (id)methodAuths;
- (id)methodSetLock;
- (id)monitorHybridBlock;
- (id)privateDomains;
- (id)privateDomainsLock;
- (id)privateMethods;
- (id)protectedMethods;
- (id)publicMethods;
- (void)registerMethod:withAuthType:;
- (id)secondLevelDomainForURL:;
- (id)secureMethods;
- (void)setAuthConfigPackage:;
- (void)setAuthRules:;
- (void)setBuiltinAuthInfosEnabled:;
- (void)setBypassJSBAuthEnabled:;
- (void)setFetchedAuthInfos:;
- (void)setFetchingAuthInfos:;
- (void)setInnerDomains:;
- (void)setMethodAuthsLock:;
- (void)setMethodSetLock:;
- (void)setMonitorHybridBlock:;
- (void)setPrivateDomains:;
- (void)setPrivateDomainsLock:;
- (void)setPrivateMethods:;
- (void)setProtectedMethods:;
- (void)setPublicMethods:;
- (void)setSecureMethods:;
- (void)setUsedAuthInfosBeforeConfiguring:;
- (id)strippedURL:;
- (void)updateAuthGroup:includedMethods:excludedMethods:forURL:;
- (void)updateMethodAuthTypes;
- (id)webViewAuthorizedVersionSelectWithInput:;
- (id)init;
- (void)setDelegate:;
- (id)namespace;
- (void)setNamespace:;
- (id)delegate;
- (void).cxx_destruct;
+ (id)authTypeString:;
+ (BOOL)isAuthorizedWithBridgeAuthInfo:;
+ (id)strippedBoeHostURLForOriginURL:;
+ (void)addPrivateDomains:inNamespace:;
+ (long long)authTypeForMethodName:inNamespace:;
+ (long long)authTypeFromString:;
+ (id)boeHostSuffix;
+ (void)configBoeUrlString:;
+ (void)configureWithAccessKey:commonParams:;
+ (void)configureWithAuthDomain:accessKey:afterDelay:commonParams:;
+ (void)configureWithAuthDomain:accessKey:afterDelay:commonParams:extraChannels:;
+ (void)configureWithAuthDomain:accessKey:boeHostSuffix:afterDelay:commonParams:extraChannels:;
+ (void)configureWithAuthDomain:accessKey:commonParams:;
+ (id)defaultPrivateDomains;
+ (id)getRequestParamsWithAccessKey:commonParams:extraChannels:;
+ (id)internalAuthorizedResultForInput:;
+ (id)internalAuthorizedResultForNamespace:webView:appID:method:invokeUrl:messageUUID:fromSource:isMainFrame:frameURL:;
+ (id)internalAuthorizedWithAppID:method:invokeUrl:forType:inAuthPackage:inNamespace:;
+ (BOOL)isAuthorizedForNamespace:webView:appID:method:invokeUrl:messageUUID:fromSource:;
+ (BOOL)isAuthorizedForNamespace:webView:appID:method:invokeUrl:messageUUID:fromSource:frameURL:isMainFrame:;
+ (BOOL)isSafeUrl:inUrs:;
+ (void)p_updateAuthManagerWithPackages:;
+ (id)parseAuthInfosWithJSON:accessKey:;
+ (id)secondLevelDomainForURL:;
+ (id)sharedManagerWithNamesapce:;
+ (void)updateAuthPackagesWithJsonObjects:;
+ (id)urlStringForPatterMatchedWithURL:;
+ (BOOL)enableDebug;
+ (id)sharedManager;
+ (void)setEnableDebug:;
@end
