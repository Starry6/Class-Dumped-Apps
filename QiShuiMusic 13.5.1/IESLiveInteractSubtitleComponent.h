@interface IESLiveInteractSubtitleComponent : IESLiveInteractComponentBase
@property (nonatomic) IESLiveInteractSubtitleView subtitleView;
@property (nonatomic) IESLiveInteractSubtitleViewModel viewModel;
@property (nonatomic) IESLiveInteractSubtitleApi api;
@property (nonatomic) IESLiveInteractSubtitleConfig config;
@property (nonatomic) IESLivePopupItem popupItem;
@property (nonatomic) BOOL subtitleStateForRoom;
@property (nonatomic) BOOL allowSubtitle;
@property (nonatomic) BOOL switchIsOn;
@property (nonatomic) q msgVersion;
@property (nonatomic) BOOL settingLoaded;
@property (nonatomic) BOOL readyToStartSubtitle;
@property (nonatomic) BOOL subtitleStateForAudience;
@property (nonatomic) double startTime;
@property (nonatomic) BOOL dismissCalledByUnmount;
@property (nonatomic) BOOL isMusicPlaying;
@property (nonatomic) BOOL subtitleOpenByEnterRoom;
@property (nonatomic) BOOL subtitleNeedHide;
@property (nonatomic) double startPlayingTime;
@property (nonatomic) double startPauseTime;
@property (nonatomic) BOOL isRecording;
@property (nonatomic) BOOL firstMessageReceived;
@property (nonatomic) BOOL pressPublicScreen;
@property (nonatomic) Q anchorExperimentGroup;
@property (nonatomic) BOOL subtitleStartedForLinkedUser;
@property (nonatomic) Q hash;
@property (nonatomic) # superclass;
@property (nonatomic) NSString description;
@property (nonatomic) NSString debugDescription;
- (BOOL)isSingingCheck:;
- (BOOL)subtitleStarted;
- (unsigned long long)supportSeiTypes;
- (BOOL)allowStartSubtitle;
- (BOOL)allowSubtitle;
- (unsigned long long)anchorExperimentGroup;
- (void)anchorObserveKTVStatus;
- (void)componentBindContext;
- (void)componentMount;
- (void)componentUnmount;
- (void)deleteSubtitleView;
- (void)didStartRecordingWithSource:;
- (void)didStopRecordingOfSource:;
- (BOOL)dismissCalledByUnmount;
- (void)dismissSubtitleView;
- (BOOL)enableAudioSubtitle;
- (void)fetchAudienceSubtitleSetting;
- (id)getUserType;
- (void)hideSubtitleView;
- (void)hideSubtitleView:inPaidScene:;
- (void)interactionLinkerServiceInteractDidStart:;
- (void)interactionLinkerServiceInteractWillEnd:;
- (BOOL)isMusicPlaying;
- (BOOL)isSubtitleDefaultStyle;
- (void)loadSetting;
- (void)messageCheckIn;
- (void)messageStart;
- (void)messageStop;
- (long long)msgVersion;
- (BOOL)needPressPublicScreen;
- (void)needUpdateCoordinate;
- (void)onParseredWithSEIResult:;
- (void)onSubtitleMessageReceived:;
- (void)onSubtitleStateChanged:;
- (void)openSubtitleSettingPanel:;
- (void)paidStreamTrialDidFinish:reason:;
- (void)paidStreamTrialDidInstall:reason:;
- (void)paidStreamTrialDidPromised:;
- (void)paidStreamTrialDidStart:;
- (void)paidStreamTrialDidStop:;
- (id)popupItem;
- (BOOL)pressPublicScreen;
- (BOOL)readyToStartSubtitle;
- (void)setAllowSubtitle:;
- (void)setAnchorExperimentGroup:;
- (void)setDismissCalledByUnmount:;
- (void)setIsMusicPlaying:;
- (void)setMsgVersion:;
- (void)setPopupItem:;
- (void)setPressPublicScreen:;
- (void)setReadyToStartSubtitle:;
- (void)setSettingLoaded:;
- (void)setStartPauseTime:;
- (void)setStartPlayingTime:;
- (void)setSubtitleNeedHide:;
- (void)setSubtitleOpenByEnterRoom:;
- (void)setSubtitleStartedForLinkedUser:;
- (void)setSubtitleStateForAudience:;
- (void)setSubtitleStateForRoom:;
- (BOOL)settingLoaded;
- (void)showSubtitleView;
- (double)startPauseTime;
- (double)startPlayingTime;
- (void)startSubtitleForRoom;
- (BOOL)subtitleNeedHide;
- (BOOL)subtitleOpenByEnterRoom;
- (BOOL)subtitleStartedForLinkedUser;
- (BOOL)subtitleStateForAudience;
- (BOOL)subtitleStateForRoom;
- (void)switchCleanScreenMode:;
- (BOOL)switchIsOn;
- (void)toolbarReceiveComponent:completion:;
- (void)trackAnchorSubtitleStart:;
- (void)trackOpenSubtitleSettingPanel:;
- (void)trackPauseDuration:;
- (void)trackSubtitleClose:;
- (void)trackSubtitleSettingPanelClicked:;
- (void)trackUseDuration:;
- (void)updateSubtitleSetting:requestPage:completion:;
- (void)updateSubtitleStyle:;
- (void)keyboardDidHide:;
- (void)keyboardWillShow:;
- (void)updateStyle:;
- (id)viewModel;
- (void)setConfig:;
- (void)setStartTime:;
- (id)subtitleView;
- (double)startTime;
- (void)setIsRecording:;
- (void).cxx_destruct;
- (BOOL)isRecording;
- (id)config;
- (void)setSubtitleView:;
- (void)setViewModel:;
- (void)messageReceived:;
- (void)setSwitchIsOn:;
- (id)getConfig;
- (id)api;
- (BOOL)firstMessageReceived;
- (void)setFirstMessageReceived:;
- (void)setApi:;
@end
