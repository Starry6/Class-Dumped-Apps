@interface HMEngine : NSObject
@property (nonatomic) NSMutableDictionary moduleStateDic;
@property (nonatomic) NSMutableDictionary container;
@property (nonatomic) q flowControlStrategy;
@property (nonatomic) NSDictionary config;
@property (nonatomic) NSObject<OS_dispatch_queue> searchQueue;
@property (nonatomic) NSMutableDictionary pendingCloudCommand;
@property (nonatomic) NSDictionary maxUploadSizeWeights;
@property (nonatomic) HMGlobalConfig globalConfig;
@property (nonatomic) BOOL isDebug;
@property (nonatomic) <HMExternalSearchDataSource> searchDataSource;
@property (nonatomic) @? getFreeDiskSpace;
- (void)addModuleWithConfig:;
- (void)cleanRollbackMigrateMark:;
- (long long)flowControlStrategy;
- (id)getLatestSession:;
- (id)getUpdateMaxReportSizeWeights;
- (id)globalConfig;
- (void)heimdallrInitDidCompleted;
- (id)instanceWithConfig:;
- (id)instanceWithModuleId:aid:;
- (void)launchUploadWithModuleId:;
- (id)maxUploadSizeWeights;
- (void)migrateDataWithModuleId:;
- (id)moduleStateDic;
- (id)pendingCloudCommand;
- (void)processLaunchLogic:;
- (void)registerNetworkManager:;
- (id)searchDataSource;
- (void)searchWithParam:callback:;
- (void)setFlowControlStrategy:;
- (void)setGetFreeDiskSpace:;
- (void)setGlobalConfig:;
- (void)setMaxUploadSizeWeights:;
- (void)setModuleStateDic:;
- (void)setPendingCloudCommand:;
- (void)setSearchDataSource:;
- (void)setupContainer;
- (void)setupGlobalConfig:;
- (void)startUploadTimerWithModuleId:;
- (void)stopCache;
- (void)stopUploadTimerWithModuleId:;
- (void)triggerUploadManuallyWithModuleId:;
- (void)updateFlowControlStrategy:;
- (void)updateGlobalConfig:;
- (void)updateHeimdallrInitCompleted:;
- (void)updateMaxReportSizeWeights:;
- (void)updateModuleConfig:;
- (void)updateReportDegradeState:moduleId:;
- (void)updateReportHeader:;
- (void)updateSessionRecordWith:;
- (void)setContainer:;
- (id)init;
- (void)setConfig:;
- (id)container;
- (void).cxx_destruct;
- (id)config;
- (id)getFreeDiskSpace;
- (id)searchQueue;
- (void)setSearchQueue:;
- (BOOL)isDebug;
- (void)setIsDebug:;
+ (void)setEnableHermasRefactorFromSDK:;
+ (BOOL)enableHermasRefactor;
+ (void)setEnableHermasRefactor:;
+ (void)setEnabled:;
+ (id)sharedEngine;
+ (BOOL)isEnabled;
@end
