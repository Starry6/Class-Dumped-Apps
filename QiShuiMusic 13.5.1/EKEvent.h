@interface EKEvent : EKCalendarItem
@property (nonatomic) NSArray locations;
@property (nonatomic) NSArray locationsWithoutPrediction;
@property (nonatomic) EKCalendarDate occurrenceStartDate;
@property (nonatomic) EKCalendarDate occurrenceEndDate;
@property (nonatomic) BOOL occurrenceIsAllDay;
@property (nonatomic) EKCalendarDate originalOccurrenceStartDate;
@property (nonatomic) EKCalendarDate originalOccurrenceEndDate;
@property (nonatomic) NSNumber originalOccurrenceIsAllDay;
@property (nonatomic) BOOL requiresDetachDueToSnoozedAlarm;
@property (nonatomic) NSInteger clearModifiedFlags;
@property (nonatomic) NSDate endDateUnadjustedForLegacyClients;
@property (nonatomic) EKRecurrenceIdentifier recurrenceIdentifier;
@property (nonatomic) NSDate recurrenceDate;
@property (nonatomic) NSString eventOccurrenceID;
@property (nonatomic) q privacyLevel;
@property (nonatomic) BOOL locationIsAConferenceRoom;
@property (nonatomic) double duration;
@property (nonatomic) double travelTime;
@property (nonatomic) NSDate startDateIncludingTravel;
@property (nonatomic) BOOL isStartDateDirty;
@property (nonatomic) BOOL isEndDateDirty;
@property (nonatomic) BOOL allowsTravelTimeModifications;
@property (nonatomic) BOOL allowsAllDayModifications;
@property (nonatomic) EKStructuredLocation travelStartLocation;
@property (nonatomic) EKStructuredLocation endLocation;
@property (nonatomic) BOOL automaticLocationGeocodingAllowed;
@property (nonatomic) BOOL needsGeocoding;
@property (nonatomic) q travelAdvisoryBehavior;
@property (nonatomic) BOOL travelAdvisoryBehaviorIsEffectivelyEnabled;
@property (nonatomic) BOOL eligibleForTravelAdvisories;
@property (nonatomic) BOOL potentiallyEligibleForTravelAdvisories;
@property (nonatomic) EKSuggestedEventInfo suggestionInfo;
@property (nonatomic) NSString locationWithoutPrediction;
@property (nonatomic) EKStructuredLocation preferredLocationWithoutPrediction;
@property (nonatomic) NSDate proposedStartDate;
@property (nonatomic) NSDate proposedEndDate;
@property (nonatomic) BOOL allowsProposedTimeModifications;
@property (nonatomic) BOOL allowsResponseCommentModifications;
@property (nonatomic) BOOL isPhantom;
@property (nonatomic) Q cachedJunkStatus;
@property (nonatomic) BOOL isSignificantlyDetached;
@property (nonatomic) BOOL isSignificantlyDetachedIgnoringParticipation;
@property (nonatomic) BOOL hasComplexRecurrence;
@property (nonatomic) NSDate originalStartDate;
@property (nonatomic) NSString UUID;
@property (nonatomic) NSURL conferenceURL;
@property (nonatomic) BOOL preventConferenceURLDetection;
@property (nonatomic) NSURL externalURL;
@property (nonatomic) NSString showEventURLString;
@property (nonatomic) BOOL isEditable;
@property (nonatomic) BOOL isPrivateEventSharedToMe;
@property (nonatomic) NSURL launchURL;
@property (nonatomic) q participationStatus;
@property (nonatomic) q pendingParticipationStatus;
@property (nonatomic) BOOL allowsParticipationStatusModifications;
@property (nonatomic) q currentUserGeneralizedParticipantRole;
@property (nonatomic) BOOL currentUserInvitedAttendee;
@property (nonatomic) BOOL allowsAvailabilityModifications;
@property (nonatomic) BOOL allowsPrivacyLevelModifications;
@property (nonatomic) NSDate participationStatusModifiedDate;
@property (nonatomic) BOOL supportsParticipationStatusModificationsWithoutNotification;
@property (nonatomic) q status;
@property (nonatomic) Q invitationStatus;
@property (nonatomic) BOOL isAlerted;
@property (nonatomic) BOOL dateChanged;
@property (nonatomic) BOOL timeChanged;
@property (nonatomic) BOOL titleChanged;
@property (nonatomic) BOOL locationChanged;
@property (nonatomic) BOOL videoConferenceChanged;
@property (nonatomic) BOOL recurrenceChanged;
@property (nonatomic) BOOL attendeeComment;
@property (nonatomic) BOOL attendeeStatus;
@property (nonatomic) BOOL attendeeProposedStartDate;
@property (nonatomic) BOOL attendeeDeclinedStartDate;
@property (nonatomic) BOOL attendeeReplyChanged;
@property (nonatomic) NSInteger externalTrackingStatus;
@property (nonatomic) NSDate initialStartDate;
@property (nonatomic) NSDate initialEndDate;
@property (nonatomic) BOOL isMaster;
@property (nonatomic) BOOL isMasterOrDetachedOccurrence;
@property (nonatomic) BOOL isStatusDirty;
@property (nonatomic) BOOL isAllDayDirty;
@property (nonatomic) EKCalendarDate startCalendarDateIncludingTravelTime;
@property (nonatomic) double durationIncludingTravel;
@property (nonatomic) q travelRoutingMode;
@property (nonatomic) BOOL canBeRespondedTo;
@property (nonatomic) BOOL canDetachSingleOccurrence;
@property (nonatomic) BOOL hasAttachmentChanges;
@property (nonatomic) EKCalendarDate startCalendarDate;
@property (nonatomic) EKCalendarDate endCalendarDate;
@property (nonatomic) q locationPredictionState;
@property (nonatomic) BOOL hasPredictedLocation;
@property (nonatomic) BOOL firedTTL;
@property (nonatomic) BOOL responseMustApplyToAll;
@property (nonatomic) Q junkStatus;
@property (nonatomic) NSSet actions;
@property (nonatomic) BOOL isMainOccurrence;
@property (nonatomic) BOOL privacySet;
@property (nonatomic) NSString recurrenceSet;
@property (nonatomic) EKVirtualConference virtualConference;
@property (nonatomic) NSString virtualConferenceTextRepresentation;
@property (nonatomic) q specialDayType;
@property (nonatomic) BOOL isUndetached;
@property (nonatomic) NSString eventIdentifier;
@property (nonatomic) BOOL allDay;
@property (nonatomic) NSDate startDate;
@property (nonatomic) NSDate endDate;
@property (nonatomic) EKStructuredLocation structuredLocation;
@property (nonatomic) EKParticipant organizer;
@property (nonatomic) q availability;
@property (nonatomic) BOOL isDetached;
@property (nonatomic) NSDate occurrenceDate;
@property (nonatomic) NSString birthdayContactIdentifier;
@property (nonatomic) q birthdayPersonID;
@property (nonatomic) NSString birthdayPersonUniqueID;
@property (nonatomic) NSString sendersEmail;
@property (nonatomic) NSString sendersPhoneNumber;
@property (nonatomic) BOOL supportsJunkReporting;
@property (nonatomic) EKEventStore eventStore;
@property (nonatomic) Q hash;
@property (nonatomic) # superclass;
@property (nonatomic) NSString description;
@property (nonatomic) NSString debugDescription;
- (BOOL)isBirthday;
- (void)setCalendar:;
- (double)travelTime;
- (void)setTravelTime:;
- (BOOL)isTentative;
- (BOOL)isAllDay;
- (BOOL)_reset;
- (void)setStatus:;
- (id)endLocation;
- (void)setLocations:;
- (void)setTimeZone:;
- (void)rollback;
- (id)initWithEventStore:;
- (BOOL)refresh;
- (void)setAllDay:;
- (BOOL)isUndetached;
- (id)startDate;
- (BOOL)isFloating;
- (id)locations;
- (void)setNeedsOccurrenceCacheUpdate:;
- (id)init;
- (id)uniqueId;
- (id)endDateRaw;
- (void)setLocationPredictionState:;
- (void)setActions:;
- (BOOL)validate:;
- (void)setOriginalStartDate:;
- (BOOL)needsGeocoding;
- (void)setStartDate:;
- (void)setPrivacyLevel:;
- (id)conferenceURLDetectedString;
- (id)recurrenceSet;
- (void)setParticipationStatusModifiedDate:;
- (unsigned long long)junkStatus;
- (void)setTitle:;
- (void)setInvitationStatus:;
- (unsigned long long)hash;
- (BOOL)needsOccurrenceCacheUpdate;
- (BOOL)supportsJunkReporting;
- (BOOL)isEditable;
- (id)proposedStartDate;
- (id)eventIdentifier;
- (void)setRecurrenceSet:;
- (BOOL)firedTTL;
- (id)conferenceURLString;
- (long long)availability;
- (id)launchURL;
- (id)structuredLocation;
- (void)_resetInternalState;
- (void)setEndDate:;
- (id)participationStatusModifiedDate;
- (int)externalTrackingStatus;
- (id)originalStartDate;
- (id)endDate;
- (void)setJunkStatus:;
- (unsigned long long)invitationStatus;
- (id)title;
- (void)setProposedStartDate:;
- (unsigned int)invitationChangedProperties;
- (id)recurrenceDate;
- (id)actions;
- (BOOL)isDetached;
- (void)setEndDateRaw:;
- (void)setSpecialDayString:;
- (void).cxx_destruct;
- (id)responseComment;
- (unsigned long long)entityType;
- (BOOL)canForward;
- (void)setTravelAdvisoryBehavior:;
- (void)setConferenceURLString:;
- (id)birthdayContactName;
- (void)reset;
- (void)setNotes:;
- (void)setInvitationChangedProperties:;
- (long long)privacyLevel;
- (id)description;
- (id)occurrenceDate;
- (long long)status;
- (BOOL)isMaster;
- (void)setSuggestionInfo:;
- (id)birthdayID;
- (void)setStructuredLocation:;
- (void)setFiredTTL:;
- (void)setAvailability:;
- (void)setResponseComment:;
- (long long)travelAdvisoryBehavior;
- (void)setBirthdayContactIdentifier:;
- (double)duration;
- (long long)locationPredictionState;
- (id)suggestionInfo;
- (BOOL)isEqual:;
- (void)setURL:;
- (id)URL;
- (BOOL)disallowProposeNewTime;
- (id)specialDayString;
- (void)setExternalTrackingStatus:;
- (id)birthdayContactIdentifier;
- (id)effectiveTimeZone;
- (void)setEndLocation:;
- (BOOL)eligibleForTravelAdvisories;
- (id)locationWithoutPrediction;
- (id)preferredLocationWithoutPrediction;
- (id)externalURI;
- (long long)compareStartDateWithEvent:;
- (id)recurrenceRule;
- (void)setRecurrenceRule:;
- (BOOL)_isAllDay;
- (long long)selfParticipantStatus;
- (id)externalURL;
- (id)virtualConference;
- (void)setEndDateUnadjustedForLegacyClients:;
- (id)locationsWithoutPrediction;
- (id)initWithPersistentObject:;
- (id)initWithPersistentObject:objectForCopy:;
- (void)rebaseToEventStore:;
- (void)rebaseSkippingRelationProperties:;
- (id)committedCopy;
- (id)snapshotCopyWithPropertyKeysToCopy:propertyKeysToSkip:;
- (id)previouslySavedCopy;
- (BOOL)refreshAndNotify:;
- (id)committedValueForKey:;
- (void)markAsUndeleted;
- (void)markAsSaved;
- (void)markAsCommitted;
- (BOOL)attendeeStatus;
- (BOOL)titleChanged;
- (BOOL)locationChanged;
- (id)startDateRaw;
- (void)setStartDateRaw:;
- (id)displayNotes;
- (void)setDisplayNotes:;
- (BOOL)shouldHaveDefaultAlarms;
- (id)defaultAlarms;
- (BOOL)requiresDetach;
- (BOOL)allowsSpansOtherThanThisEvent;
- (BOOL)allowsCalendarModifications;
- (BOOL)allowsRecurrenceModifications;
- (BOOL)allowsAlarmModifications;
- (BOOL)allowsAttendeesModifications;
- (void)snoozeAlarm:withTimeIntervalFromNow:;
- (id)startDateForRecurrence;
- (BOOL)canMoveToCalendar:fromCalendar:error:;
- (BOOL)canMoveOrCopyToCalendar:fromCalendar:error:;
- (void)_adjustAfterMovingOrCopyingFromOldCalendar:toNewCalendar:savingItem:;
- (void)_willSave;
- (id)_generateNewUniqueID;
- (void)updateWithVCSEntity:inCalendar:;
- (void)setIsJunk:shouldSave:;
- (unsigned long long)cachedJunkStatus;
- (void)setCachedJunkStatus:;
- (BOOL)_couldBeJunkCommon;
- (void)setNotesCommon:;
- (void)setURLCommon:;
- (void)parsedConference:andNotes:;
- (void)clearParsedConference;
- (BOOL)conferenceURLForDisplayCached;
- (id)conferenceURLForDisplay;
- (void)clearDetectedConferenceURL;
- (id)conferenceURLDetected;
- (BOOL)_detectedConferenceURLOnBackingObjectMayBeInvalid;
- (id)_detectConferenceURL;
- (id)_prioritizedConferencesSources;
- (BOOL)couldBeJunk;
- (long long)participationStatus;
- (void)setParticipationStatus:;
- (BOOL)timeChanged;
- (void)setTimeChanged:;
- (BOOL)dateChanged;
- (void)setDateChanged:;
- (void)setTitleChanged:;
- (void)setLocationChanged:;
- (BOOL)videoConferenceChanged;
- (void)setVideoConferenceChanged:;
- (BOOL)recurrenceChanged;
- (void)setRecurrenceChanged:;
- (BOOL)attendeeReplyChanged;
- (BOOL)revert;
- (id)sendersEmail;
- (id)sendersPhoneNumber;
- (id)initWithPersistentObject:occurrenceDate:;
- (id)_calculateDurationWithStart:end:allDay:;
- (id)specificIdentifier;
- (id)eventOccurrenceID;
- (id)recurrenceIdentifier;
- (void)_invalidateRecurrenceIdentifier;
- (BOOL)isStatusDirty;
- (BOOL)isStartDateDirty;
- (BOOL)isEndDateDirty;
- (BOOL)isAllDayDirty;
- (void)postModifiedNotification;
- (void)postModifiedNotificationWithUserInfo:;
- (void)setNeedsGeocoding:;
- (BOOL)phantomMaster;
- (void)setPhantomMaster:;
- (BOOL)isPhantom;
- (void)setIsPhantom:;
- (void)_updateRecurrenceEndDatesWithAdjustmentMode:;
- (void)setOccurrenceIsAllDay:;
- (id)startCalendarDateIncludingTravelTime;
- (id)_committedStartDate;
- (id)_committedEndDate;
- (id)startCalendarDate;
- (void)overrideStartDate:;
- (id)_pinDate:withPinMode:;
- (id)adjustedPersistedDateForDate:withAdjustmentMode:pinMode:clientCalendarDate:;
- (id)adjustedPersistedDateForDate:persistedDateIsInUTC:withAdjustmentMode:pinMode:clientCalendarDate:;
- (void)_updateStartDateForDate:withAdjustmentMode:;
- (void)_setStartDate:andClearProposedTimes:;
- (double)durationIncludingTravel;
- (id)occurrenceEndDate;
- (id)endDateUnadjustedForLegacyClients;
- (id)endCalendarDate;
- (void)_updateEndDateForDate:withAdjustmentMode:;
- (void)forceSetTimeZone:;
- (BOOL)_settingTimeZoneChangesStartEndDates;
- (id)initialStartDate;
- (id)initialEndDate;
- (BOOL)isMasterOrDetachedOccurrence;
- (id)originalOccurrenceStartDate;
- (id)originalOccurrenceEndDate;
- (BOOL)_isParticipationStatusDirty;
- (BOOL)_isOnlyChangeToAttendeesSelfAttendeeParticipationStatus;
- (BOOL)supportsParticipationStatusModificationsWithoutNotification;
- (BOOL)_userAddressesRepresentInvitedAttendee:checkEmailAddresses:;
- (long long)currentUserGeneralizedParticipantRole;
- (BOOL)isCurrentUserInvitedAttendee;
- (BOOL)currentUserMayActAsOrganizer;
- (void)markEventAsAttendeeForward;
- (long long)_parentParticipationStatus;
- (long long)birthdayPersonID;
- (void)setBirthdayContact:;
- (void)setLunarCalendarString:;
- (id)lunarCalendarString;
- (void)makeRecurrenceEndDateBased;
- (id)_occurrenceDatesForCount:;
- (id)_lastRecurrenceDate;
- (id)_adjustDateIfFloatingForDate:;
- (void)makeRecurrenceEndCountBased;
- (BOOL)hasComplexRecurrence;
- (BOOL)futureOccurrencesCannotBeAffectedByChangingStartDateToDate:;
- (id)_defaultAlarmOffset;
- (id)virtualConferenceTextRepresentation;
- (id)_originallyCommittedVirtualConference;
- (void)setVirtualConference:;
- (void)invalidateVirtualConferenceURLIfNeededOnCommit:;
- (void)clearVirtualConferenceURLsQueuedForInvalidation;
- (void)invalidateRemovedVirtualConferences;
- (id)_buildConferenceStringFromNotesWithoutConference:serializedConference:;
- (long long)specialDayType;
- (void)setSpecialDayType:;
- (void)removeServerRefreshRelatedProperties;
- (void)clearInvitationStatus;
- (void)addEventAction:;
- (void)removeEventAction:;
- (BOOL)isAlerted;
- (void)setIsAlerted:;
- (void)_setInvitationStatusAlertedIfNecessary;
- (void)_setInvitationStatusUnalertedIfNecessary;
- (BOOL)_shouldAlertInviteeDeclines;
- (id)_travelTimeInternalDescription;
- (id)startDateIncludingTravel;
- (BOOL)isProposedTimeEvent;
- (id)proposedEndDate;
- (long long)travelRoutingMode;
- (BOOL)allowsTravelTimeModifications;
- (BOOL)allowsPrivacyLevelModifications;
- (BOOL)allowsAllDayModifications;
- (void)setPrivacyLevelWithoutVerifyingPrivacyModificationsAllowed:;
- (BOOL)locationIsAConferenceRoom;
- (BOOL)_invitationChangedPropertyForFlag:;
- (void)_setInvitationChangedProperty:forFlag:;
- (BOOL)attendeeComment;
- (BOOL)attendeeProposedStartDate;
- (BOOL)attendeeDeclinedStartDate;
- (void)setAttendeeComment:;
- (void)setAttendeeStatus:;
- (void)setAttendeeProposedStartDate:;
- (void)setAttendeeDeclinedStartDate:;
- (BOOL)serverSupportedProposeNewTime;
- (BOOL)allowsProposedTimeModifications;
- (BOOL)supportsAddingAttachments;
- (void)setStructuredLocation:preserveConferenceRooms:;
- (id)roomAttendees;
- (void)addConferenceRooms:;
- (void)removeConferenceRooms:;
- (id)_conferenceRoomDisplayStrings;
- (BOOL)_needsPredictedLocationCacheUpdateHoldingLock;
- (id)_updatePredictedLocationCacheIfNeededHoldingLock;
- (id)_firstNonConferenceRoomLocationTitle;
- (id)_updatePredictedLocationCacheIfNeeded;
- (void)_clearLocationPredictionCacheIfNotFrozenHoldingLock;
- (void)_clearLocationPredictionCacheIfNotFrozen;
- (void)confirmPredictedLocation:;
- (void)rejectPredictedLocation;
- (BOOL)hasPredictedLocation;
- (void)setPredictedLocationFrozen:;
- (void)setLocationPredictionAllowed:;
- (void)forceLocationPredictionUpdate;
- (id)conferenceURL;
- (void)setConferenceURL:;
- (long long)compareStartDateIncludingTravelWithEvent:;
- (long long)compareOriginalStartDateWithEvent:;
- (BOOL)isPrivateEventSharedToMe;
- (BOOL)responseMustApplyToAll;
- (BOOL)_changesRequireDetachOrSlice;
- (BOOL)canDetachSingleOccurrence;
- (BOOL)hasAttachmentChanges;
- (BOOL)changingAllDayPropertyIsAllowed;
- (BOOL)hasChangesRequiringSpanAll;
- (BOOL)_hasOrHadRecurrenceRule;
- (BOOL)_hasBasicChangesRequiringSpanAll;
- (BOOL)_hasRecurrenceRuleChangeRequiringSpanAll;
- (BOOL)automaticLocationGeocodingAllowed;
- (BOOL)potentiallyEligibleForTravelAdvisories;
- (BOOL)_eligibleForTravelAdvisoriesIncludePotential:;
- (BOOL)travelAdvisoryBehaviorIsEffectivelyEnabled;
- (void)clearCachedTimeValues;
- (id)startOfDayForStartDateInCalendar:;
- (id)startOfDayForEndDateInCalendar:;
- (long long)daysSpannedInCalendar:;
- (BOOL)isMultiDayTimedEventInCalendar:;
- (void)_clearOriginalDateFields;
- (long long)pendingParticipationStatus;
- (BOOL)allowsAvailabilityModifications;
- (BOOL)canBeRespondedTo;
- (BOOL)_hasExternalIDOrDeliverySource;
- (BOOL)hasValidEventAction;
- (BOOL)allowsParticipationStatusModifications;
- (id)privacyDescription;
- (BOOL)validateOccurrenceDateStillMatchesRecurrenceRules;
- (void)snoozeAlarm:untilTargetDate:;
- (void)_snoozeAlarm:withTimeIntervalFromNow:orTargetDate:;
- (BOOL)validateWithSpan:error:;
- (BOOL)saveWithSpan:error:;
- (BOOL)_needsAttendeePartStatReset;
- (void)_deleteErrorIfInvalid;
- (id)_eventKitPropertyKeyForCalendarItemErrorPropertyKey:;
- (void)_saveUndeletedDetachedOccurrence;
- (BOOL)_saveUndetachedOccurrenceWithError:;
- (void)_extendConferenceURLExpirationDateToDate:;
- (void)_updateModifiedPropertiesForThisEventAndAllDetachments;
- (void)_updateVideoConferenceOnlyModified;
- (void)_updateModifiedProperties;
- (void)_propagateAlarmChangesToDetachedEvents:;
- (void)_propagateChangesToDetachedEvents:significantlyDetachedEvents:startDateOffset:duration:calendar:;
- (void)_updateSelfAttendeeToMatchSelfAttendee:;
- (void)_duplicateAddedAttachmentsToDetachedEvents:significantlyDetachedEvents:;
- (void)_updateUUIDForNewParticipants;
- (BOOL)isSignificantlyDetached;
- (BOOL)isSignificantlyDetachedIgnoringParticipation;
- (BOOL)_isSignificantlyDetachedComparedToMaster:shouldIgnorePartStat:;
- (id)_updateMasterDate:forChangeToOccurrenceDate:fromOriginalOccurrenceDate:;
- (void)_applyTimeChangesToMaster;
- (void)_clearExceptionDatesAndUpdateDetachedOriginalDates:;
- (void)_filterExceptionDatesAndDetachments;
- (id)_leftoversInDates:withGeneratedDates:;
- (void)_adjustAlarmsAfterMovingOrCopyingFromCalendar:toCalendar:;
- (void)_removeInvalidAlarmsDuringSave;
- (void)_adjustRecurrenceRulesAfterMovingOrCopyingFromCalendar:toCalendar:notes:;
- (void)_adjustAttendeesAfterMovingOrCopyingFromCalendar:toCalendar:;
- (void)_adjustPrivacyAfterMovingOrCopyingFromCalendar:toCalendar:savingItem:;
- (void)_adjustAvailabilityAfterMovingOrCopyingFromCalendar:toCalendar:;
- (void)_adjustScheduleAgentAfterMovingOrCopyingFromCalendar:toCalendar:;
- (void)_adjustAttachmentsAfterMovingOrCopyingFromCalendar:toCalendar:savingItem:;
- (void)_adjustURLAfterMovingOrCopyingFromCalendar:toCalendar:notes:;
- (void)_adjustTimeZoneAfterMovingOrCopyingFromCalendar:toCalendar:notes:;
- (void)markAsUndetachedWithStartDate:endDate:;
- (void)_addOrganizerToRecentsIfNeeded;
- (void)_addNewAttendeesToRecentsIfNeeded;
- (id)nextOccurrenceOrDetachmentAfter:;
- (id)earliestOccurrenceEndingAfter:;
- (id)earliestOccurrenceEndingAfter:excludeSignificantDetachments:excludeCanceledDetachments:excludeDeclinedDetachments:;
- (BOOL)hasAttendeeProposedTimes;
- (id)copyToCalendar:withOptions:;
- (id)duplicateWithOptions:;
- (id)_keysToChangeForDuplicateWithOptions:;
- (unsigned long long)countOfAttendeeProposedTimes;
- (BOOL)validateRecurrenceRule:error:;
- (BOOL)overlapsWithOrIsSameDayAsEventInSeries;
- (BOOL)_validateDatesAndRecurrencesGivenSpan:error:;
- (BOOL)durationOverlapsRecurrenceInterval;
- (BOOL)_occurrenceExistsOnDate:timeZone:;
- (BOOL)_checkStartDateConstraintAgainstDate:timeZone:error:;
- (BOOL)conformsToRecurrenceRules:;
- (BOOL)allowsResponseCommentModifications;
- (BOOL)_isSimpleRepeatingEvent;
- (BOOL)_shouldCancelInsteadOfDeleteWithSpan:;
- (BOOL)_shouldDeclineInsteadOfDelete;
- (void)_deleteWithSpan:;
- (void)_deleteFromOccurrenceDateOnward:;
- (void)_updateSelfFromDetachedEventIfNeededForDelete;
- (void)_deleteThisOccurrence;
- (BOOL)_cancelWithSpan:error:;
- (void)_cancelDetachedEvents;
- (BOOL)_isOriginalOccurrenceStartDateSameAsCommittedStartDate;
- (BOOL)removeWithSpan:error:;
- (BOOL)isFirstOccurrence;
- (BOOL)isOnlyOccurrence;
- (BOOL)isPartOfExistingRecurringSeries;
- (id)masterEvent;
- (BOOL)_eventIsTheOnlyRemainingOccurrence;
- (BOOL)_noRemainingEarlierOccurrences;
- (void)_recursivelyAssignAllAttachmentsNewIdentities;
- (void)_assignAllAttachmentsNewIdentities;
- (BOOL)_shouldPreserveFutureWhenSlicingWithStartDate:newStartDate:;
- (void)_detachOrSliceWithSpan:withOriginalStartDate:newStartDate:;
- (id)privacyLevelString;
- (BOOL)updateEventToEvent:;
- (BOOL)updateEventToEvent:commit:;
- (BOOL)_fetchedEventIsConflict:forStartDate:endDate:;
- (id)potentialConflictOccurrenceDatesInTimePeriod:;
- (id)scanForConflicts;
- (BOOL)updateWithGeocodedMapItemAndSaveWithCommit:eventStore:error:;
- (void)dismissAcceptedProposeNewTimeNotification;
- (void)_clearAttendeeChangedFlags;
- (void)dismissAttendeeRepliedNotification;
- (void)_respondToProposedTimeFromAttendee:shouldAccept:;
- (void)acceptProposedTimeNotificationFromAttendee:;
- (void)declineProposedTimeNotificationFromAttendee:;
- (id)diffFromCommitted;
- (BOOL)isEqual:comparingKeys:;
- (BOOL)isDifferentWithDiff:;
- (BOOL)_diff:isDifferentFromCommittedEventHelperRequiresReschedule:;
- (BOOL)isDifferentAndRequiresRescheduleWithDiff:;
- (BOOL)isDifferentAndModifiedAttendeesWithDiff:;
- (BOOL)isDifferentAndHasForwardedAttendeesWithDiff:;
- (BOOL)isDifferentAndHasNewProposedTimeWithDiff:;
- (BOOL)isDifferentExceptingPerUserPropertiesWithDiff:;
- (BOOL)isDifferentFromCommittedEventAndRequiresReschedule;
- (BOOL)isDifferentAndRequiresRSVPWithDiff:;
- (BOOL)isDifferentFromCommittedEventAndRequiresRSVP;
- (BOOL)isDifferentAndHasUnscheduledAttendeesWithDiff:;
- (BOOL)isDifferentFromCommittedEventAndHasUnscheduledAttendees;
- (BOOL)isPrivacySet;
- (long long)requirementsToMoveFromCalendar:toCalendar:;
- (long long)requirementsToMoveToCalendar:;
- (BOOL)canMoveToCalendar:fromCalendar:allowedRequirements:error:;
- (BOOL)requiresCopyToMoveFromCalendar:toCalendar:;
- (BOOL)_canMoveOrCopyFromCalendar:toCalendar:allowedRequirements:error:;
- (BOOL)seriesHasOutOfOrderEvents;
- (BOOL)isOutOfOrderWithEventInSeries;
- (BOOL)seriesHasOverlappingOrOnSameDayOrOutOfOrderEvents;
- (BOOL)_requirementsToMoveOrCopyToCalendarHelperAllowedToMoveOrCopyEventFromCalendar:toCalendar:;
- (BOOL)_hasAbsoluteAlarms;
- (id)_nsCalendar;
- (BOOL)_suggestedStartDateHelperRecurrenceRuleRequiresExpansion:forDate:;
- (id)suggestedStartDateForCurrentRecurrenceRule;
- (id)suggestedStartDateForCurrentRecurrenceRuleWithSimulatedNowDate:;
- (BOOL)isValidAttendee:forCalendar:;
- (BOOL)_isValidAttendee:forCalendar:selfAttendeeIsValid:;
- (id)attendeesNotIncludingOrganizer;
- (BOOL)isAttendeeSameAsOrganizer:;
- (BOOL)_requirementsToMoveToCalendarHelperAlterationsRequiredToMoveEventFromCalendar:toCalendar:;
- (BOOL)_requirementsToMoveToCalendarHelperDuplicationRequiredToMoveEventFromCalendar:toCalendar:;
- (BOOL)_requirementsToMoveToCalendarHelperNeedToRemoveOriginalToMoveEventFromCalendar:toCalendar:;
- (BOOL)_requirementsToMoveToCalendarHelperReinviteAttendeesRequiredToMoveEventFromCalendar:toCalendar:;
- (BOOL)_requirementsToMoveToCalendarHelperRemoveAttendeesRequiredToMoveEventFromCalendar:toCalendar:;
- (void)setRecurrenceRuleString:;
- (id)_ekRecurrenceRuleFromICSRecurrenceRule:;
- (id)_ekRecurrenceRuleFromVCSRecurrenceRule:;
- (id)birthdayPersonUniqueID;
- (id)occurrenceStartDate;
- (void)setOccurrenceStartDate:;
- (void)setOccurrenceEndDate:;
- (BOOL)occurrenceIsAllDay;
- (void)setOriginalOccurrenceStartDate:;
- (void)setOriginalOccurrenceEndDate:;
- (id)originalOccurrenceIsAllDay;
- (void)setOriginalOccurrenceIsAllDay:;
- (BOOL)requiresDetachDueToSnoozedAlarm;
- (void)setRequiresDetachDueToSnoozedAlarm:;
- (int)clearModifiedFlags;
- (void)setClearModifiedFlags:;
- (BOOL)preventConferenceURLDetection;
- (void)setPreventConferenceURLDetection:;
- (id)showEventURLString;
- (BOOL)isMainOccurrence;
- (void)setVirtualConferenceTextRepresentation:;
+ (id)knownSingleValueKeysForComparison;
+ (Class)frozenClass;
+ (id)knownRelationshipSingleValueKeys;
+ (id)eventWithEventStore:;
+ (id)knownRelationshipMultiValueKeys;
+ (id)_locationStringForLocations:;
+ (id)EKObjectChangeSummarizer_singleValueDiffKeys;
+ (id)EKObjectChangeSummarizer_multiValueDiffKeys;
+ (id)knownKeysToSkipForFutureChanges;
+ (id)knownKeysToUseForFutureChanges;
+ (id)externalUriScheme;
+ (id)_modifiedNotificationUserInfoWithIdentifier:forRevert:;
+ (long long)_eventAvailabilityForParticipantStatus:supportedEventAvailabilities:isAllDayEvent:;
+ (id)_updatedPredictedLocationRespectingTimeoutBudgetForEvent:error:;
+ (id)_basicChangesRequiringSpanAll;
+ (id)_relatedCachedTimeKeys;
+ (BOOL)isMultiDayTimedEventWithStartDate:endDate:allDay:inCalendar:;
+ (BOOL)_allowSlicingFromDetachedOccurrence;
+ (long long)_coercedEventAvailabilityForDesiredAvailability:supportedAvailabilities:;
+ (BOOL)_notDetachedOccurrenceOfEvent:existsInDateRangeWithStartDate:endDate:inTimeZone:;
+ (BOOL)_validateSpanForRemove:error:;
+ (void)_detachOrSliceEvent:withSpan:savingEvent:withOriginalStartDate:newStartDate:;
+ (id)generateUniqueIDWithEvent:originalEvent:calendar:;
+ (id)knownRequireRSVPKeys;
+ (id)knownPerUserPropertyKeys;
+ (BOOL)_calendarsAreSharedToMeInSameSourceAndHaveSameOwner:;
+ (id)eventFromICSEvent:inStore:;
+ (long long)ekWeekDayFromVCSWeekDay:;
@end
