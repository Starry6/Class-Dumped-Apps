@interface LSLiveAudioUnitProcess : NSObject
@property (nonatomic) BOOL isExpectedPlaying;
@property (nonatomic) NSObject<OS_dispatch_queue> loopEnd_queue;
@property (nonatomic) BOOL blueToothPlayAllowed;
@property (nonatomic) LSLiveAudioEffect audioEffect;
@property (nonatomic) @? musicPlayEndBlock;
@property (nonatomic) BOOL closeProcess;
@property (nonatomic) @? loopEndBlock;
@property (nonatomic) LSLiveAudioUnitConfig config;
@property (nonatomic) BOOL bEnableLoudNorm;
@property (nonatomic) Q hash;
@property (nonatomic) # superclass;
@property (nonatomic) NSString description;
@property (nonatomic) NSString debugDescription;
- (BOOL)bEnableLoudNorm;
- (double)getRecordVolume;
- (void)setAudioEffect:;
- (void)setMusicVolume:;
- (void)appBecomeActive;
- (void)appBecomeInActive;
- (id)audioEffect;
- (void)audioRouteChangeListenerCallback:;
- (BOOL)blueToothPlayAllowed;
- (void)checkPlayCategory;
- (BOOL)closeProcess;
- (void)feedProcessBuffer:sampleFrames:elementIndex:withMixerHandle:;
- (void)getBgmAudioData:dataSize:channels:inNumberFrames:;
- (long long)getCurLoop;
- (double)getCurrentPlayTime;
- (double)getMusicDuration;
- (double)getMusicPlayerVolume;
- (double)getMusicVolume;
- (void)handlePlayerItemDidPlayToEndTimeNotification:;
- (BOOL)isEnableAudioPitchShifter;
- (BOOL)isExpectedPlaying;
- (BOOL)isUseExternalPluggUseA2DP:;
- (id)loopEndBlock;
- (id)loopEnd_queue;
- (id)musicPlayEndBlock;
- (long long)numberOfLoop;
- (void)p_handleStopBlock:;
- (void)p_playEndLoopCallback;
- (void)pauseProcess;
- (void)processAudioBufferList:inNumberFrames:;
- (void)processAudioData:dataSize:inNumberFrames:;
- (unsigned long long)readFirstFrameTick;
- (void)replacePlayerItem:;
- (void)runSyncOnEndQueue:;
- (void)setBEnableLoudNorm:;
- (void)setBlueToothPlayAllowed:;
- (void)setCloseProcess:;
- (void)setEnableAudioPitchShifter:;
- (void)setIsExpectedPlaying:;
- (void)setLoopEndBlock:;
- (void)setLoopEnd_queue:;
- (void)setMusicPlayEndBlock:;
- (void)setMusicPlayerVolume:;
- (void)setRecordVolume:;
- (void)startProcess;
- (void)stopProcess;
- (void)setPitch:;
- (void)seekToTime:;
- (BOOL)isPlaying;
- (void)dealloc;
- (void)setConfig:;
- (id)initWithConfig:;
- (void).cxx_destruct;
- (void)restart;
- (id)config;
- (id).cxx_construct;
@end
