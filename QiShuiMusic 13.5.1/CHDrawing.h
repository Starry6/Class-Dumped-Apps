@interface CHDrawing : NSObject
@property (nonatomic) {CHDrawingStrokes={vector<std::vector<double> drawing;
- (id)debugQuickLookObject;
- (id)initWithCoder:;
- (unsigned long long)hash;
- (void)encodeWithCoder:;
- (id)initWithContentsOfFile:;
- (void)clear;
- (void)addPoint:;
- (void).cxx_destruct;
- (void)writeToFile;
- (id)description;
- (id)bounds;
- (id).cxx_construct;
- (BOOL)isEqual:;
- (id)copyWithZone:;
- (void)endStroke;
- (void)setLineHeight:;
- (unsigned long long)pointCount;
- (unsigned long long)strokeCount;
- (id)drawing;
- (void)setDrawing:;
- (id)initWithContentsOfXYString:;
- (id)initWithContentsOfJSONDictionary:;
- (id)newDrawingWithTransform:;
- (id)newDrawingWithAffineTransform:;
- (id)drawingByRemovingUnnaturalHorizontalGaps:;
- (unsigned long long)pointCountForStrokeIndex:;
- (id)pointForStrokeIndex:pointIndex:;
- (double)startTimeForStroke:;
- (double)endTimeForStroke:;
- (id)indexesOfStrokesSmallerThanSize:;
- (id)drawingWithStrokesFromIndexSet:;
- (id)drawingWithStrokesFromIndexArray:;
- (id)centroidForStrokeIndexes:;
- (id)boundsForStrokeIndexes:;
- (id)boundsForStrokeIndex:;
- (id)strokeBoundsAtIndex:;
- (float)cumulativePointToPointDistance;
- (float)distanceBetweenFirstAndLastPoint;
- (void)addStartTime:;
- (void)addEndTime:;
- (BOOL)isPrefixForDrawing:;
- (id)matchingStrokePrefixRangeForDrawing:;
- (BOOL)isEqualToDrawing:;
- (id)xyRepresentation;
- (id)jsonRepresentationWithContext:;
- (id)bitmapRepresentationForSize:;
- (id)orientationRepresentationForSampling:convolutionWidth:;
- (id)sortedDrawingUsingMinXCoordinate;
- (id)sortedDrawingUsingStrokeMidPoint:;
- (id)drawingScaledByFactor:;
- (id)drawingTransformedWithTranslation:scaleFactor:;
- (id)drawingSpatiallyResampled:outputPointMap:;
- (id)drawingSpatiallyResampled:maxPointsPerStroke:;
- (id)strokeIndicesSortedByMinXCoordinate;
- (void)appendSegment:fromDrawing:;
- (void)appendDrawing:;
- (id)boundingBoxForDrawingSegmentFromCutPoint:toCutPoint:;
- (double)averageCharacterHeightEstimation:minChunkHeight:;
- (void)writeToFileWithContext:folder:basename:;
+ (BOOL)supportsSecureCoding;
@end
