@interface BDASplashRealtimeTask : NSObject
@property (nonatomic) Q taskState;
@property (nonatomic) NSDictionary config;
@property (nonatomic) UIWindow window;
@property (nonatomic) UIView realTimeFakeLaunchView;
@property (nonatomic) TTAdSplashModel pickedModel;
@property (nonatomic) @? displayCompletion;
@property (nonatomic) @? checker;
@property (nonatomic) NSMutableDictionary timeNodes;
@property (nonatomic) NSMutableDictionary splashStates;
@property (nonatomic) Q finishReason;
@property (nonatomic) q isHotLaunch;
@property (nonatomic) q isRequestSuccess;
@property (nonatomic) double launchTime;
@property (nonatomic) q cidCount;
@property (nonatomic) TTAdSplashModel trackPickedModel;
@property (nonatomic) NSMutableDictionary extraTrackInfo;
- (void)realtimeRequest;
- (void)setIsHotLaunch:;
- (void)realtimeRequestResult:jsonData:;
- (void)setPickedModel:;
- (void)addFakeLaunchView;
- (void)addTrackInfo:;
- (BOOL)canRequestRealtime;
- (long long)cidCount;
- (void)clearAllRealtimeCache;
- (void)displaySplashWithModel:finishReason:;
- (id)extraTrackInfo;
- (void)feedDidAppear;
- (unsigned long long)finishReason;
- (id)getRealtimeRequestInfo;
- (id)getSplashFrame;
- (long long)isHotLaunch;
- (long long)isRequestSuccess;
- (double)launchTime;
- (void)newRealtimeTaskWithConfig:;
- (id)parseWithJsonData:;
- (id)pickedModel;
- (id)realTimeFakeLaunchView;
- (BOOL)realtimeSplashTaskStartOnWindow:isBlocked:checker:isWarmStart:launchTime:displayCompletion:;
- (void)realtimeSplashTimeStart;
- (void)releaseRealtimeTask;
- (void)removeFakeLaunchView;
- (void)setChecker:;
- (void)setCidCount:;
- (void)setExtraTrackInfo:;
- (void)setFinishReason:;
- (void)setIsRequestSuccess:;
- (void)setLaunchTime:;
- (void)setRealTimeFakeLaunchView:;
- (void)setRenderTimeNodeWithResourceType:;
- (void)setSplashState:value:;
- (void)setSplashStates:;
- (void)setTimeNode:;
- (void)setTimeNodes:;
- (void)setTrackPickedModel:;
- (BOOL)shouldParseWithJsonData:;
- (long long)splashCanShowWithModel:;
- (id)splashStates;
- (id)timeNodes;
- (void)trackDelayed;
- (id)trackPickedModel;
- (unsigned long long)taskState;
- (void)setTaskState:;
- (void)setConfig:;
- (void)clearState;
- (void).cxx_destruct;
- (void)setWindow:;
- (id)window;
- (id)config;
- (void)track;
- (id)checker;
- (id)displayCompletion;
- (void)setDisplayCompletion:;
+ (void)trackRequestStatus:isWarmStart:;
+ (id)sharedInstance;
@end
