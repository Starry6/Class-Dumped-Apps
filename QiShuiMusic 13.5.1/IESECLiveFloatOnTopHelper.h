@interface IESECLiveFloatOnTopHelper : NSObject
@property (nonatomic) NSMutableDictionary pageStateRestore;
@property (nonatomic) NSString currentViewControllerName;
@property (nonatomic) NSString contextRoomID;
@property (nonatomic) NSMutableArray roomIdSpace;
@property (nonatomic) NSString nextViewControllerName;
@property (nonatomic) q currentState;
@property (nonatomic) BOOL smallWindowAttachStatedChanged;
@property (nonatomic) BOOL isClickClosed;
@property (nonatomic) NSMutableDictionary strategy;
@property (nonatomic) NSMutableDictionary goNextStrategy;
@property (nonatomic) NSMutableDictionary switchArray;
@property (nonatomic) BOOL miniWindowLock;
@property (nonatomic) q disAppearVerify;
@property (nonatomic) q pageNumCount;
@property (nonatomic) NSMutableDictionary trackDic;
@property (nonatomic) NSMutableDictionary tapActionDic;
@property (nonatomic) UIViewController currentVC;
@property (nonatomic) BOOL liveRoomAppear;
@property (nonatomic) Q hash;
@property (nonatomic) # superclass;
@property (nonatomic) NSString description;
@property (nonatomic) NSString debugDescription;
- (long long)disAppearVerify;
- (void)setRoomIdSpace:;
- (void)setSwitchArray:;
- (id)contextRoomID;
- (id)currentVC;
- (id)currentViewControllerName;
- (id)goNextStrategy;
- (void)hookClass:withParams:;
- (BOOL)isClickClosed;
- (BOOL)liveRoomAppear;
- (BOOL)miniWindowLock;
- (id)nextViewControllerName;
- (long long)pageNumCount;
- (id)pageStateRestore;
- (id)roomIdSpace;
- (void)setContextRoomID:;
- (void)setCurrentVC:;
- (void)setCurrentViewControllerName:;
- (void)setDisAppearVerify:;
- (void)setGoNextStrategy:;
- (void)setIsClickClosed:;
- (void)setLiveRoomAppear:;
- (void)setMiniWindowLock:;
- (void)setNextViewControllerName:;
- (void)setPageNumCount:;
- (void)setPageStateRestore:;
- (void)setSmallWindowAttachStatedChanged:;
- (void)setTapActionDic:;
- (void)setTrackDic:;
- (BOOL)smallWindowAttachStatedChanged;
- (void)smallWindowViewDidAppear:;
- (void)smallWindowViewWillAppear:;
- (void)smallWindowViewWillDisappear:;
- (id)switchArray;
- (id)tapActionDic;
- (id)trackDic;
- (void)setCurrentState:;
- (id)init;
- (id)strategy;
- (long long)currentState;
- (void).cxx_destruct;
- (void)setStrategy:;
+ (void)enumChildViewControler:inArray:;
+ (BOOL)isLiveRoomExist;
+ (BOOL)shouldDetachWhenBuyTouTiaoGoods;
+ (void)unSubscribeCustomTapWithTarget:;
+ (void)attachWithCondition;
+ (BOOL)belongToLiveViewController:;
+ (BOOL)controllerIsGoingNext:;
+ (void)detachMiniWindowForce;
+ (void)displayAfterNotify;
+ (void)enumInstance:inArray:;
+ (void)evaluateModule;
+ (long long)getAppearStateForKey:;
+ (id)getControllerKey:;
+ (id)getControllerKeyWithArray:;
+ (id)getKeyFromLynxUrl:;
+ (id)getLastChildViewControler:;
+ (long long)getPageDisappearState:;
+ (long long)getStateForKey:serviceType:;
+ (id)getSwitchingRoomID;
+ (id)getViewControllerInstanceStack;
+ (id)getViewControllerKeyStack;
+ (void)handleMiniWindowLock:;
+ (BOOL)hasWindowView;
+ (BOOL)isLiveMiniWindowAttached;
+ (BOOL)isLiveMiniWindowIsMuted;
+ (BOOL)liveViewControllerAppear;
+ (void)moveToDisplay;
+ (void)moveToHideWithPlay;
+ (void)muteLiveRoomPlayer:;
+ (void)notifySwitchRoomID:host:;
+ (void)notifyUpdateFullScreen:;
+ (void)notifyUpdateLiveRoomCovered:;
+ (void)notifyUpdatePlayer:;
+ (void)notifyUpdateRoomID:host:;
+ (void)notifyWillGoBack:params:;
+ (void)notifyWillGoNext:params:;
+ (void)notifyWillLeave:params:;
+ (void)notifyWillLeaveWithStrategy:;
+ (id)playLiveFloatOn:from:roomID:tag:logExtra:;
+ (void)registerCustomTapAction:host:;
+ (void)registerPriority:forbiddenBlock:;
+ (void)registerSmallWindowServiceClass:withParams:;
+ (void)registerSwitch:host:;
+ (void)registerTrackParams:host:;
+ (void)revertSmallWindowState;
+ (void)setCurrentRoomID:;
+ (void)setLiveSmallWindowManager:;
+ (BOOL)shouldDetachAndDismissWhenInVisible;
+ (void)subscribeAttachMiniWindowWithTarget:completion:;
+ (void)subscribeClickCloseWithTarget:completion:;
+ (void)subscribeCustomTapWithTarget:completion:;
+ (void)subscribeMuteStateChangedWithTarget:changedBlock:;
+ (void)subscribeTapMiniWindowWithTarget:completion:;
+ (void)tmpAttach;
+ (void)unSubscribeAttachMiniWindowWithTarget:;
+ (void)unSubscribeClickCloseWithTarget:;
+ (void)unSubscribeMuteStateChangedWithTarget:;
+ (void)unSubscribeTapMiniWindowWithTarget:;
+ (id)willUseRoomID;
+ (id)shareInstance;
+ (void)moveToState:;
@end
