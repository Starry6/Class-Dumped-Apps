@interface HMDUITrackerManager : HeimdallrModule
@property (nonatomic) {HMDRecordLocalIDRange=QQ} uploadingRange;
@property (nonatomic) NSArray andConditions;
@property (nonatomic) q hmdCountLimit;
@property (nonatomic) double lastFlushTimestamp;
@property (nonatomic) double startTimestamp;
@property (nonatomic) NSString scene;
@property (nonatomic) NSString lastScene;
@property (nonatomic) NSObject<OS_dispatch_queue> syncQueue;
@property (nonatomic) NSNumber sceneInPushing;
@property (nonatomic) BOOL newVCPushing;
@property (nonatomic) BOOL isNeedSaveEventsInBackground;
@property (nonatomic) NSMutableArray recentScenes;
@property (nonatomic) {HMDRecordLocalIDRange=QQ} uploadingRange;
@property (nonatomic) q hmdCountLimit;
@property (nonatomic) NSArray andConditions;
@property (nonatomic) HMInstance instance;
@property (nonatomic) NSMutableArray events;
@property (nonatomic) Q flushCount;
@property (nonatomic) double flushInterval;
@property (nonatomic) Q uploadCount;
@property (nonatomic) double uploadInterval;
@property (nonatomic) Q hash;
@property (nonatomic) # superclass;
@property (nonatomic) NSString description;
@property (nonatomic) NSString debugDescription;
- (id)andConditions;
- (void)cleanupPerformanceDataWithConfig:;
- (void)cleanupWithConfig:;
- (long long)dbMaxSize;
- (id)debugRealPerformanceDataWithConfig:;
- (void)didAppearViewController:;
- (void)didLeaveViewController:;
- (void)dropAllDataForServerState;
- (id)fetchUploadRecords;
- (unsigned long long)flushCount;
- (id)getUITrackerDataWithRecords:;
- (long long)hmdCountLimit;
- (void)hmdSwitchToNewVCFrom:to:;
- (void)hmdTrackWithName:event:parameters:;
- (void)hmdTrackWithRecord:;
- (void)hmdTrackableContext:eventWithName:parameters:;
- (BOOL)isNeedSaveEventsInBackground;
- (double)lastFlushTimestamp;
- (BOOL)newVCPushing;
- (void)performanceDataDidReportSuccess:;
- (BOOL)performanceDataSource;
- (id)performanceDataWithCountLimit:;
- (id)performanceDataWithLimitSize:limitCount:currentSize:;
- (void)performanceSizeLimitedDataDidReportSuccess:;
- (id)recentScenes;
- (void)recordViewHierarchyForKeyWindowWithDetail:;
- (void)recordViewHierarchyForWindow:WithDetail:;
- (unsigned long long)reporterPriority;
- (id)sceneInPushing;
- (void)setAndConditions:;
- (void)setFlushCount:;
- (void)setFlushInterval:;
- (void)setHmdCountLimit:;
- (void)setIsNeedSaveEventsInBackground:;
- (void)setLastFlushTimestamp:;
- (void)setLastScene:;
- (void)setNewVCPushing:;
- (void)setRecentScenes:;
- (void)setSceneInPushing:;
- (void)setUploadInterval:;
- (void)setUploadingRange:;
- (void)setupWithHeimdallr:;
- (id)sharedOperationTrace;
- (id)ui_actionRecordsInAppTimeFrom:to:sessionID:recordClass:;
- (void)updateConfig:;
- (void)updateOperationTrace;
- (double)uploadInterval;
- (void)uploadViewHierarchyWithTitle:subTitle:;
- (id)uploadingRange;
- (id)getKeyWindow;
- (id)syncQueue;
- (id)instance;
- (id)init;
- (void)setInstance:;
- (void)setScene:;
- (void)dealloc;
- (void)start;
- (double)flushInterval;
- (void)stop;
- (void)observeValueForKeyPath:ofObject:change:context:;
- (double)startTimestamp;
- (id)scene;
- (void)setSyncQueue:;
- (void)applicationDidEnterBackground:;
- (void)setStartTimestamp:;
- (void)setEvents:;
- (void).cxx_destruct;
- (id)events;
- (id)lastScene;
- (void)applicationWillEnterForeground:;
- (Class)storeClass;
- (void)setUploadCount:;
- (unsigned long long)uploadCount;
+ (id)sharedManager;
@end
