@interface FLEXNetworkObserver : NSObject
@property (nonatomic) NSMutableDictionary requestStatesForRequestIDs;
@property (nonatomic) NSObject<OS_dispatch_queue> queue;
- (void)URLSession:task:willPerformHTTPRedirection:newRequest:completionHandler:delegate:;
- (void)URLSession:dataTask:didReceiveResponse:completionHandler:delegate:;
- (void)URLSession:dataTask:didBecomeDownloadTask:delegate:;
- (void)URLSession:dataTask:didReceiveData:delegate:;
- (void)URLSession:task:didCompleteWithError:delegate:;
- (void)URLSession:downloadTask:didWriteData:totalBytesWritten:totalBytesExpectedToWrite:delegate:;
- (void)URLSession:task:didFinishDownloadingToURL:data:delegate:;
- (void)URLSessionTaskWillResume:;
- (void)websocketTask:sendMessagage:;
- (void)websocketTaskMessageSendCompletion:error:;
- (void)websocketTask:receiveMessagage:error:;
- (void)connection:willSendRequest:redirectResponse:delegate:;
- (void)connection:didReceiveResponse:delegate:;
- (void)connection:didReceiveData:delegate:;
- (void)connectionDidFinishLoading:delegate:;
- (void)connection:didFailWithError:delegate:;
- (void)connectionWillCancel:;
- (id)init;
- (void)performBlock:;
- (id)requestStateForRequestID:;
- (void)removeRequestStateForRequestID:;
- (id)requestStatesForRequestIDs;
- (void)setRequestStatesForRequestIDs:;
- (id)queue;
- (void)setQueue:;
- (void).cxx_destruct;
+ (void)setEnabled:;
+ (BOOL)isEnabled;
+ (id)sharedObserver;
+ (id)nextRequestID;
+ (void)sniffWithoutDuplicationForObject:selector:sniffingBlock:originalImplementationBlock:;
+ (void)setNetworkMonitorHooks;
+ (void)hookFirebaseThings;
+ (void)injectIntoAllNSURLThings;
+ (void)injectIntoDelegateClass:;
+ (void)injectIntoNSURLConnectionCancel;
+ (void)injectIntoNSURLSessionTaskResume;
+ (void)swizzleResumeSelector:forClass:;
+ (void)injectIntoNSURLConnectionAsynchronousClassMethod;
+ (void)injectIntoNSURLConnectionSynchronousClassMethod;
+ (void)injectIntoNSURLSessionAsyncDataAndDownloadTaskMethods:;
+ (void)injectIntoNSURLSessionAsyncUploadTaskMethods:;
+ (id)mechanismFromClassMethod:onClass:;
+ (id)asyncCompletionWrapperForRequestID:mechanism:completion:;
+ (void)injectWillSendRequestIntoDelegateClass:;
+ (void)injectDidReceiveResponseIntoDelegateClass:;
+ (void)injectDidReceiveDataIntoDelegateClass:;
+ (void)injectDidFinishLoadingIntoDelegateClass:;
+ (void)injectDidFailWithErrorIntoDelegateClass:;
+ (void)injectTaskWillPerformHTTPRedirectionIntoDelegateClass:;
+ (void)injectTaskDidReceiveDataIntoDelegateClass:;
+ (void)injectDataTaskDidBecomeDownloadTaskIntoDelegateClass:;
+ (void)injectTaskDidReceiveResponseIntoDelegateClass:;
+ (void)injectTaskDidCompleteWithErrorIntoDelegateClass:;
+ (void)injectRespondsToSelectorIntoDelegateClass:;
+ (void)injectDownloadTaskDidFinishDownloadingIntoDelegateClass:;
+ (void)injectDownloadTaskDidWriteDataIntoDelegateClass:;
+ (void)injectWebsocketSendMessage:;
+ (void)injectWebsocketReceiveMessage:;
+ (id)requestIDForConnectionOrTask:;
+ (void)setRequestID:forConnectionOrTask:;
@end
