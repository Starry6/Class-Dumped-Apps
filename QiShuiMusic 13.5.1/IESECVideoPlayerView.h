@interface IESECVideoPlayerView : UIView
@property (nonatomic) IESECVideoPlayerConfig playerConfig;
@property (nonatomic) BOOL isAutoPlayEnd;
@property (nonatomic) IESECVideoPlayerController player;
@property (nonatomic) UIView<IESECAwemeVideoViewProtocol> awemePlayerView;
@property (nonatomic) UIImageView coverImageView;
@property (nonatomic) UIImageView playButtonImageView;
@property (nonatomic) {CGSize=dd} playButtonSize;
@property (nonatomic) IESECommerceProgressSlider progressSlider;
@property (nonatomic) UIView playerUserControllerContainerView;
@property (nonatomic) UIView userCtrlDivider;
@property (nonatomic) BOOL isSliding;
@property (nonatomic) IESECommerceSpeakerView speakerView;
@property (nonatomic) IESECommercePlayerView playerView;
@property (nonatomic) UIImage thumbImageNormal;
@property (nonatomic) UIImage thumbImageHighlight;
@property (nonatomic) UIView durationView;
@property (nonatomic) UILabel playedDurationLabel;
@property (nonatomic) UILabel durationDivider;
@property (nonatomic) UILabel totalDurationLabel;
@property (nonatomic) IESECGradientView gradientView;
@property (nonatomic) Q currentPlayState;
@property (nonatomic) UIImage minimunImageNormal;
@property (nonatomic) UIImage maximunImageNormal;
@property (nonatomic) UIImage minimunImage;
@property (nonatomic) UIImage maximunImage;
@property (nonatomic) Q prePlayState;
@property (nonatomic) double prePlayTime;
@property (nonatomic) BOOL pauseOnResignActive;
@property (nonatomic) BOOL needResumePlay;
@property (nonatomic) CADisplayLink displayLink;
@property (nonatomic) q runloopCount;
@property (nonatomic) BOOL isPlayOver;
@property (nonatomic) double gradientViewHeight;
@property (nonatomic) double progressBarY;
@property (nonatomic) double volumeAlpha;
@property (nonatomic) BOOL needAutoPlayAfterLoad;
@property (nonatomic) <IESECVideoPlayerViewDelegate> delegate;
@property (nonatomic) <IESECVideoPlayerViewSampleDelegate> sampleDelegate;
@property (nonatomic) BOOL mute;
@property (nonatomic) double currentPlayTime;
@property (nonatomic) double totalDuration;
@property (nonatomic) {CGSize=dd} realVideoSize;
@property (nonatomic) NSString playerTag;
@property (nonatomic) NSString playerSubTag;
@property (nonatomic) Q contentFillMode;
@property (nonatomic) Q previewFillMode;
@property (nonatomic) Q hash;
@property (nonatomic) # superclass;
@property (nonatomic) NSString description;
@property (nonatomic) NSString debugDescription;
- (id)awemePlayerView;
- (double)currentPlayTime;
- (id)durationDivider;
- (unsigned long long)previewFillMode;
- (void)setVolumeAlpha:;
- (id)userCtrlDivider;
- (unsigned long long)contentFillMode;
- (void)setPrePlayTime:;
- (void)setSpeakerView:;
- (void)addPeriodicTimeObserver;
- (BOOL)allowAwemePlayer;
- (BOOL)awemePlayerValid;
- (id)coverImageView;
- (unsigned long long)currentPlayState;
- (id)durationView;
- (id)formatTimeString:;
- (double)gradientViewHeight;
- (void)hideGradientView:;
- (void)hideProgressSlider:;
- (void)hideVolume:;
- (id)initWithPlayerConfig:frame:;
- (BOOL)isAutoPlayEnd;
- (BOOL)isPlayOver;
- (BOOL)isSliding;
- (void)loadCoverImage;
- (id)maximunImage;
- (id)maximunImageNormal;
- (id)minimunImage;
- (id)minimunImageNormal;
- (void)mutePlayer:;
- (BOOL)needAutoPlayAfterLoad;
- (BOOL)needResumePlay;
- (double)oncePlayTime;
- (BOOL)pauseOnResignActive;
- (void)periodTimeObserver;
- (id)playButtonImageView;
- (double)playDurationWithProgress:;
- (id)playedDurationLabel;
- (id)playerConfig;
- (void)playerController:playbackStateDidChange:;
- (id)playerSubTag;
- (id)playerTag;
- (id)playerUserControllerContainerView;
- (unsigned long long)prePlayState;
- (double)prePlayTime;
- (double)progressBarY;
- (void)progressSlideChangeValue:;
- (void)progressSliderTouchEnded:;
- (id)realPlayerView;
- (id)realVideoSize;
- (void)recoverState;
- (void)registerObserver;
- (long long)runloopCount;
- (id)sampleDelegate;
- (void)seekToPlaybackTime:complete:;
- (void)setAwemePlayerView:;
- (void)setContentFillMode:;
- (void)setCoverImageView:;
- (void)setCurrentPlayState:;
- (void)setDurationDivider:;
- (void)setDurationView:;
- (void)setGradientViewHeight:;
- (void)setIsAutoPlayEnd:;
- (void)setIsPlayOver:;
- (void)setIsSliding:;
- (void)setLoopPlayerWithLoopState:loopWay:loopStartTime:loopEndTime:;
- (void)setMaximunImage:;
- (void)setMaximunImageNormal:;
- (void)setMinimunImage:;
- (void)setMinimunImageNormal:;
- (void)setNeedAutoPlayAfterLoad:;
- (void)setNeedResumePlay:;
- (void)setPauseOnResignActive:;
- (void)setPlayButtonImageView:;
- (void)setPlayedDurationLabel:;
- (void)setPlayerConfig:;
- (void)setPlayerSubTag:;
- (void)setPlayerTag:;
- (void)setPlayerUserControllerContainerView:;
- (void)setPrePlayState:;
- (void)setPreviewFillMode:;
- (void)setProgressBarY:;
- (void)setProgressSliderAlpha:;
- (void)setRunloopCount:;
- (void)setSampleDelegate:;
- (void)setThumbImageHighlight:;
- (void)setThumbImageNormal:;
- (void)setTotalDurationLabel:;
- (void)setUserCtrlDivider:;
- (void)setupUIOld;
- (void)setupVideoPlayer;
- (id)speakerView;
- (void)storeStateWithoutPrepare;
- (BOOL)supportFloat;
- (void)tapPlayVideo;
- (id)thumbImageHighlight;
- (id)thumbImageNormal;
- (id)totalDurationLabel;
- (void)trackSpeakerAndPlayerIconHide:;
- (id)trackVideoType;
- (id)trackVideoTypeWithWindow;
- (void)updatePauseButtonUI:pauseButtonSize:;
- (void)updateSpeakerViewFrame:;
- (void)updateVideoPlayerConfig:;
- (void)updateVideoTimeDurationText:;
- (void)videoReadyToDisplayOfPlayerController:;
- (void)videoView:didChangePlayState:;
- (double)volumeAlpha;
- (id)displayLink;
- (BOOL)mute;
- (void)setDisplayLink:;
- (void)setPlayerView:;
- (void)dealloc;
- (void)play;
- (void)layoutSubviews;
- (void)setDelegate:;
- (void)handleGesture:;
- (void)stop;
- (id)gradientView;
- (void)willResignActive:;
- (id)player;
- (void)setPlayButtonSize:;
- (double)totalDuration;
- (id)delegate;
- (id)playButtonSize;
- (void).cxx_destruct;
- (void)setPlayer:;
- (id)playerView;
- (void)pause;
- (void)setGradientView:;
- (void)didBecomeActive:;
- (void)setupUI;
- (void)setupPlayer;
- (id)progressSlider;
- (void)setProgressSlider:;
- (void)playVideo;
- (void)muteVideo;
- (void)storeState;
+ (double)progressWithPlayDuration:totalDuration:;
@end
